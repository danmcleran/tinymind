/**
* Copyright 2020 Intel Corporation All Rights Reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/

#include <cstdint>

#include "activation.hpp"
#include "tanhValues8Bit.hpp"
#include "tanhValues16Bit.hpp"
#include "tanhValues32Bit.hpp"
#include "tanhValues64Bit.hpp"
#include "sigmoidValues8Bit.hpp"
#include "sigmoidValues16Bit.hpp"
#include "sigmoidValues32Bit.hpp"
#include "sigmoidValues64Bit.hpp"
#include "expValues8Bit.hpp"
#include "expValues16Bit.hpp"
#include "expValues32Bit.hpp"
#include "expValues64Bit.hpp"
#include "logValues8Bit.hpp"
#include "logValues16Bit.hpp"
#include "logValues32Bit.hpp"
#include "logValues64Bit.hpp"

namespace tinymind {
    #if (defined(TINYMIND_USE_TANH_1_7))
    const uint8_t TanhValuesTableQ1_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x81,
                0x82,
                0x82,
                0x82,
                0x83,
                0x83,
                0x84,
                0x85,
                0x86,
                0x88,
                0x8A,
                0x8D,
                0x90,
                0x94,
                0x99,
                0x9F,
                0xA6,
                0xAF,
                0xBA,
                0xC5,
                0xD3,
                0xE1,
                0xF1,
                0x0,
                0xF,
                0x1F,
                0x2D,
                0x3B,
                0x46,
                0x51,
                0x5A,
                0x61,
                0x67,
                0x6C,
                0x70,
                0x73,
                0x76,
                0x78,
                0x7A,
                0x7B,
                0x7C,
                0x7D,
                0x7D,
                0x7E,
                0x7E,
                0x7E,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
    };
    #endif // (defined(TINYMIND_USE_TANH_1_7))
    #if (defined(TINYMIND_USE_TANH_2_6))
    const uint8_t TanhValuesTableQ2_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC1,
                0xC2,
                0xC2,
                0xC2,
                0xC3,
                0xC3,
                0xC4,
                0xC5,
                0xC7,
                0xC8,
                0xCA,
                0xCD,
                0xD0,
                0xD3,
                0xD8,
                0xDD,
                0xE3,
                0xEA,
                0xF1,
                0xF9,
                0x0,
                0x7,
                0xF,
                0x16,
                0x1D,
                0x23,
                0x28,
                0x2D,
                0x30,
                0x33,
                0x36,
                0x38,
                0x39,
                0x3B,
                0x3C,
                0x3D,
                0x3D,
                0x3E,
                0x3E,
                0x3E,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
    };
    #endif // (defined(TINYMIND_USE_TANH_2_6))
    #if (defined(TINYMIND_USE_TANH_3_5))
    const uint8_t TanhValuesTableQ3_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE1,
                0xE2,
                0xE2,
                0xE2,
                0xE3,
                0xE4,
                0xE4,
                0xE5,
                0xE7,
                0xE8,
                0xEA,
                0xEC,
                0xEF,
                0xF2,
                0xF5,
                0xF9,
                0xFD,
                0x0,
                0x3,
                0x7,
                0xB,
                0xE,
                0x11,
                0x14,
                0x16,
                0x18,
                0x19,
                0x1B,
                0x1C,
                0x1C,
                0x1D,
                0x1E,
                0x1E,
                0x1E,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
    };
    #endif // (defined(TINYMIND_USE_TANH_3_5))
    #if (defined(TINYMIND_USE_TANH_4_4))
    const uint8_t TanhValuesTableQ4_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF1,
                0xF2,
                0xF2,
                0xF2,
                0xF3,
                0xF4,
                0xF4,
                0xF5,
                0xF6,
                0xF8,
                0xF9,
                0xFB,
                0xFD,
                0xFF,
                0x0,
                0x1,
                0x3,
                0x5,
                0x7,
                0x8,
                0xA,
                0xB,
                0xC,
                0xC,
                0xD,
                0xE,
                0xE,
                0xE,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
    };
    #endif // (defined(TINYMIND_USE_TANH_4_4))
    #if (defined(TINYMIND_USE_TANH_5_3))
    const uint8_t TanhValuesTableQ5_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xF9,
                0xFA,
                0xFA,
                0xFA,
                0xFB,
                0xFB,
                0xFC,
                0xFD,
                0xFE,
                0xFF,
                0x0,
                0x0,
                0x0,
                0x1,
                0x2,
                0x3,
                0x4,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
    };
    #endif // (defined(TINYMIND_USE_TANH_5_3))
    #if (defined(TINYMIND_USE_TANH_6_2))
    const uint8_t TanhValuesTableQ6_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFD,
                0xFE,
                0xFE,
                0xFE,
                0xFF,
                0xFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
    };
    #endif // (defined(TINYMIND_USE_TANH_6_2))
    #if (defined(TINYMIND_USE_TANH_7_1))
    const uint8_t TanhValuesTableQ7_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
    };
    #endif // (defined(TINYMIND_USE_TANH_7_1))
    #if (defined(TINYMIND_USE_TANH_1_15))
    const uint16_t TanhValuesTableQ1_15::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x8001,
                0x8001,
                0x8001,
                0x8001,
                0x8002,
                0x8002,
                0x8002,
                0x8003,
                0x8003,
                0x8004,
                0x8005,
                0x8007,
                0x8009,
                0x800B,
                0x800E,
                0x8012,
                0x8016,
                0x801D,
                0x8025,
                0x802F,
                0x803C,
                0x804D,
                0x8063,
                0x807F,
                0x80A3,
                0x80D0,
                0x810B,
                0x8157,
                0x81B7,
                0x8233,
                0x82D1,
                0x839A,
                0x849B,
                0x85E2,
                0x8782,
                0x898F,
                0x8C25,
                0x8F62,
                0x936C,
                0x9869,
                0x9E85,
                0xA5E7,
                0xAEB4,
                0xB903,
                0xC4DA,
                0xD222,
                0xE0A7,
                0xF016,
                0x0,
                0xFEA,
                0x1F59,
                0x2DDE,
                0x3B26,
                0x46FD,
                0x514C,
                0x5A19,
                0x617B,
                0x6797,
                0x6C94,
                0x709E,
                0x73DB,
                0x7671,
                0x787E,
                0x7A1E,
                0x7B65,
                0x7C66,
                0x7D2F,
                0x7DCD,
                0x7E49,
                0x7EA9,
                0x7EF5,
                0x7F30,
                0x7F5D,
                0x7F81,
                0x7F9D,
                0x7FB3,
                0x7FC4,
                0x7FD1,
                0x7FDB,
                0x7FE3,
                0x7FEA,
                0x7FEE,
                0x7FF2,
                0x7FF5,
                0x7FF7,
                0x7FF9,
                0x7FFB,
                0x7FFC,
                0x7FFD,
                0x7FFD,
                0x7FFE,
                0x7FFE,
                0x7FFE,
                0x7FFF,
                0x7FFF,
                0x7FFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_1_15))
    #if (defined(TINYMIND_USE_TANH_2_14))
    const uint16_t TanhValuesTableQ2_14::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xC001,
                0xC001,
                0xC001,
                0xC001,
                0xC001,
                0xC001,
                0xC001,
                0xC002,
                0xC002,
                0xC002,
                0xC003,
                0xC004,
                0xC005,
                0xC006,
                0xC007,
                0xC009,
                0xC00B,
                0xC00F,
                0xC013,
                0xC018,
                0xC01E,
                0xC027,
                0xC032,
                0xC040,
                0xC052,
                0xC068,
                0xC086,
                0xC0AC,
                0xC0DC,
                0xC11A,
                0xC169,
                0xC1CD,
                0xC24E,
                0xC2F1,
                0xC3C1,
                0xC4C8,
                0xC613,
                0xC7B1,
                0xC9B6,
                0xCC35,
                0xCF43,
                0xD2F4,
                0xD75A,
                0xDC82,
                0xE26D,
                0xE911,
                0xF054,
                0xF80B,
                0x0,
                0x7F5,
                0xFAC,
                0x16EF,
                0x1D93,
                0x237E,
                0x28A6,
                0x2D0C,
                0x30BD,
                0x33CB,
                0x364A,
                0x384F,
                0x39ED,
                0x3B38,
                0x3C3F,
                0x3D0F,
                0x3DB2,
                0x3E33,
                0x3E97,
                0x3EE6,
                0x3F24,
                0x3F54,
                0x3F7A,
                0x3F98,
                0x3FAE,
                0x3FC0,
                0x3FCE,
                0x3FD9,
                0x3FE2,
                0x3FE8,
                0x3FED,
                0x3FF1,
                0x3FF5,
                0x3FF7,
                0x3FF9,
                0x3FFA,
                0x3FFB,
                0x3FFC,
                0x3FFD,
                0x3FFE,
                0x3FFE,
                0x3FFE,
                0x3FFF,
                0x3FFF,
                0x3FFF,
                0x3FFF,
                0x3FFF,
                0x3FFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_2_14))
    #if (defined(TINYMIND_USE_TANH_3_13))
    const uint16_t TanhValuesTableQ3_13::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xE001,
                0xE001,
                0xE001,
                0xE001,
                0xE001,
                0xE001,
                0xE001,
                0xE001,
                0xE001,
                0xE001,
                0xE002,
                0xE002,
                0xE003,
                0xE003,
                0xE004,
                0xE005,
                0xE006,
                0xE008,
                0xE00A,
                0xE00C,
                0xE00F,
                0xE014,
                0xE019,
                0xE020,
                0xE029,
                0xE034,
                0xE043,
                0xE056,
                0xE06E,
                0xE08D,
                0xE0B5,
                0xE0E7,
                0xE127,
                0xE179,
                0xE1E1,
                0xE264,
                0xE30A,
                0xE3D9,
                0xE4DB,
                0xE61B,
                0xE7A2,
                0xE97A,
                0xEBAD,
                0xEE41,
                0xF137,
                0xF489,
                0xF82A,
                0xFC06,
                0x0,
                0x3FA,
                0x7D6,
                0xB77,
                0xEC9,
                0x11BF,
                0x1453,
                0x1686,
                0x185E,
                0x19E5,
                0x1B25,
                0x1C27,
                0x1CF6,
                0x1D9C,
                0x1E1F,
                0x1E87,
                0x1ED9,
                0x1F19,
                0x1F4B,
                0x1F73,
                0x1F92,
                0x1FAA,
                0x1FBD,
                0x1FCC,
                0x1FD7,
                0x1FE0,
                0x1FE7,
                0x1FEC,
                0x1FF1,
                0x1FF4,
                0x1FF6,
                0x1FF8,
                0x1FFA,
                0x1FFB,
                0x1FFC,
                0x1FFD,
                0x1FFD,
                0x1FFE,
                0x1FFE,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_3_13))
    #if (defined(TINYMIND_USE_TANH_4_12))
    const uint16_t TanhValuesTableQ4_12::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xF001,
                0xF001,
                0xF001,
                0xF001,
                0xF001,
                0xF001,
                0xF001,
                0xF001,
                0xF001,
                0xF001,
                0xF001,
                0xF001,
                0xF002,
                0xF002,
                0xF002,
                0xF003,
                0xF003,
                0xF004,
                0xF005,
                0xF006,
                0xF008,
                0xF00A,
                0xF00D,
                0xF010,
                0xF015,
                0xF01A,
                0xF022,
                0xF02B,
                0xF037,
                0xF047,
                0xF05B,
                0xF074,
                0xF094,
                0xF0BD,
                0xF0F1,
                0xF132,
                0xF185,
                0xF1ED,
                0xF26E,
                0xF30E,
                0xF3D1,
                0xF4BD,
                0xF5D7,
                0xF721,
                0xF89C,
                0xFA45,
                0xFC15,
                0xFE03,
                0x0,
                0x1FD,
                0x3EB,
                0x5BB,
                0x764,
                0x8DF,
                0xA29,
                0xB43,
                0xC2F,
                0xCF2,
                0xD92,
                0xE13,
                0xE7B,
                0xECE,
                0xF0F,
                0xF43,
                0xF6C,
                0xF8C,
                0xFA5,
                0xFB9,
                0xFC9,
                0xFD5,
                0xFDE,
                0xFE6,
                0xFEB,
                0xFF0,
                0xFF3,
                0xFF6,
                0xFF8,
                0xFFA,
                0xFFB,
                0xFFC,
                0xFFD,
                0xFFD,
                0xFFE,
                0xFFE,
                0xFFE,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_4_12))
    #if (defined(TINYMIND_USE_TANH_5_11))
    const uint16_t TanhValuesTableQ5_11::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xF801,
                0xF801,
                0xF801,
                0xF801,
                0xF801,
                0xF801,
                0xF801,
                0xF801,
                0xF801,
                0xF801,
                0xF801,
                0xF801,
                0xF801,
                0xF801,
                0xF801,
                0xF802,
                0xF802,
                0xF802,
                0xF803,
                0xF803,
                0xF804,
                0xF805,
                0xF807,
                0xF808,
                0xF80B,
                0xF80D,
                0xF811,
                0xF816,
                0xF81C,
                0xF824,
                0xF82E,
                0xF83A,
                0xF84A,
                0xF85F,
                0xF879,
                0xF899,
                0xF8C3,
                0xF8F7,
                0xF937,
                0xF987,
                0xF9E9,
                0xFA5F,
                0xFAEC,
                0xFB91,
                0xFC4E,
                0xFD23,
                0xFE0B,
                0xFF02,
                0x0,
                0xFE,
                0x1F5,
                0x2DD,
                0x3B2,
                0x46F,
                0x514,
                0x5A1,
                0x617,
                0x679,
                0x6C9,
                0x709,
                0x73D,
                0x767,
                0x787,
                0x7A1,
                0x7B6,
                0x7C6,
                0x7D2,
                0x7DC,
                0x7E4,
                0x7EA,
                0x7EF,
                0x7F3,
                0x7F5,
                0x7F8,
                0x7F9,
                0x7FB,
                0x7FC,
                0x7FD,
                0x7FD,
                0x7FE,
                0x7FE,
                0x7FE,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
    };
    #endif // (defined(TINYMIND_USE_TANH_5_11))
    #if (defined(TINYMIND_USE_TANH_6_10))
    const uint16_t TanhValuesTableQ6_10::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC01,
                0xFC02,
                0xFC02,
                0xFC02,
                0xFC03,
                0xFC04,
                0xFC04,
                0xFC06,
                0xFC07,
                0xFC09,
                0xFC0B,
                0xFC0E,
                0xFC12,
                0xFC17,
                0xFC1D,
                0xFC25,
                0xFC30,
                0xFC3D,
                0xFC4D,
                0xFC62,
                0xFC7C,
                0xFC9C,
                0xFCC4,
                0xFCF5,
                0xFD30,
                0xFD76,
                0xFDC9,
                0xFE27,
                0xFE92,
                0xFF06,
                0xFF81,
                0x0,
                0x7F,
                0xFA,
                0x16E,
                0x1D9,
                0x237,
                0x28A,
                0x2D0,
                0x30B,
                0x33C,
                0x364,
                0x384,
                0x39E,
                0x3B3,
                0x3C3,
                0x3D0,
                0x3DB,
                0x3E3,
                0x3E9,
                0x3EE,
                0x3F2,
                0x3F5,
                0x3F7,
                0x3F9,
                0x3FA,
                0x3FC,
                0x3FC,
                0x3FD,
                0x3FE,
                0x3FE,
                0x3FE,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
    };
    #endif // (defined(TINYMIND_USE_TANH_6_10))
    #if (defined(TINYMIND_USE_TANH_7_9))
    const uint16_t TanhValuesTableQ7_9::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE01,
                0xFE02,
                0xFE02,
                0xFE02,
                0xFE03,
                0xFE04,
                0xFE05,
                0xFE06,
                0xFE07,
                0xFE09,
                0xFE0C,
                0xFE0F,
                0xFE13,
                0xFE18,
                0xFE1F,
                0xFE27,
                0xFE31,
                0xFE3E,
                0xFE4E,
                0xFE62,
                0xFE7B,
                0xFE98,
                0xFEBB,
                0xFEE5,
                0xFF14,
                0xFF49,
                0xFF83,
                0xFFC1,
                0x0,
                0x3F,
                0x7D,
                0xB7,
                0xEC,
                0x11B,
                0x145,
                0x168,
                0x185,
                0x19E,
                0x1B2,
                0x1C2,
                0x1CF,
                0x1D9,
                0x1E1,
                0x1E8,
                0x1ED,
                0x1F1,
                0x1F4,
                0x1F7,
                0x1F9,
                0x1FA,
                0x1FB,
                0x1FC,
                0x1FD,
                0x1FE,
                0x1FE,
                0x1FE,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
    };
    #endif // (defined(TINYMIND_USE_TANH_7_9))
    #if (defined(TINYMIND_USE_TANH_8_8))
    const uint16_t TanhValuesTableQ8_8::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF01,
                0xFF02,
                0xFF02,
                0xFF03,
                0xFF03,
                0xFF04,
                0xFF05,
                0xFF06,
                0xFF08,
                0xFF0A,
                0xFF0C,
                0xFF10,
                0xFF14,
                0xFF19,
                0xFF1F,
                0xFF27,
                0xFF31,
                0xFF3E,
                0xFF4C,
                0xFF5E,
                0xFF73,
                0xFF8A,
                0xFFA5,
                0xFFC2,
                0xFFE1,
                0x0,
                0x1F,
                0x3E,
                0x5B,
                0x76,
                0x8D,
                0xA2,
                0xB4,
                0xC2,
                0xCF,
                0xD9,
                0xE1,
                0xE7,
                0xEC,
                0xF0,
                0xF4,
                0xF6,
                0xF8,
                0xFA,
                0xFB,
                0xFC,
                0xFD,
                0xFD,
                0xFE,
                0xFE,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_8_8))
    #if (defined(TINYMIND_USE_TANH_9_7))
    const uint16_t TanhValuesTableQ9_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF81,
                0xFF82,
                0xFF82,
                0xFF82,
                0xFF83,
                0xFF83,
                0xFF84,
                0xFF85,
                0xFF86,
                0xFF88,
                0xFF8A,
                0xFF8D,
                0xFF90,
                0xFF94,
                0xFF99,
                0xFF9F,
                0xFFA6,
                0xFFAF,
                0xFFBA,
                0xFFC5,
                0xFFD3,
                0xFFE1,
                0xFFF1,
                0x0,
                0xF,
                0x1F,
                0x2D,
                0x3B,
                0x46,
                0x51,
                0x5A,
                0x61,
                0x67,
                0x6C,
                0x70,
                0x73,
                0x76,
                0x78,
                0x7A,
                0x7B,
                0x7C,
                0x7D,
                0x7D,
                0x7E,
                0x7E,
                0x7E,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
    };
    #endif // (defined(TINYMIND_USE_TANH_9_7))
    #if (defined(TINYMIND_USE_TANH_10_6))
    const uint16_t TanhValuesTableQ10_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC1,
                0xFFC2,
                0xFFC2,
                0xFFC2,
                0xFFC3,
                0xFFC3,
                0xFFC4,
                0xFFC5,
                0xFFC7,
                0xFFC8,
                0xFFCA,
                0xFFCD,
                0xFFD0,
                0xFFD3,
                0xFFD8,
                0xFFDD,
                0xFFE3,
                0xFFEA,
                0xFFF1,
                0xFFF9,
                0x0,
                0x7,
                0xF,
                0x16,
                0x1D,
                0x23,
                0x28,
                0x2D,
                0x30,
                0x33,
                0x36,
                0x38,
                0x39,
                0x3B,
                0x3C,
                0x3D,
                0x3D,
                0x3E,
                0x3E,
                0x3E,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
    };
    #endif // (defined(TINYMIND_USE_TANH_10_6))
    #if (defined(TINYMIND_USE_TANH_11_5))
    const uint16_t TanhValuesTableQ11_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE1,
                0xFFE2,
                0xFFE2,
                0xFFE2,
                0xFFE3,
                0xFFE4,
                0xFFE4,
                0xFFE5,
                0xFFE7,
                0xFFE8,
                0xFFEA,
                0xFFEC,
                0xFFEF,
                0xFFF2,
                0xFFF5,
                0xFFF9,
                0xFFFD,
                0x0,
                0x3,
                0x7,
                0xB,
                0xE,
                0x11,
                0x14,
                0x16,
                0x18,
                0x19,
                0x1B,
                0x1C,
                0x1C,
                0x1D,
                0x1E,
                0x1E,
                0x1E,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
    };
    #endif // (defined(TINYMIND_USE_TANH_11_5))
    #if (defined(TINYMIND_USE_TANH_12_4))
    const uint16_t TanhValuesTableQ12_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF1,
                0xFFF2,
                0xFFF2,
                0xFFF2,
                0xFFF3,
                0xFFF4,
                0xFFF4,
                0xFFF5,
                0xFFF6,
                0xFFF8,
                0xFFF9,
                0xFFFB,
                0xFFFD,
                0xFFFF,
                0x0,
                0x1,
                0x3,
                0x5,
                0x7,
                0x8,
                0xA,
                0xB,
                0xC,
                0xC,
                0xD,
                0xE,
                0xE,
                0xE,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
    };
    #endif // (defined(TINYMIND_USE_TANH_12_4))
    #if (defined(TINYMIND_USE_TANH_13_3))
    const uint16_t TanhValuesTableQ13_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFF9,
                0xFFFA,
                0xFFFA,
                0xFFFA,
                0xFFFB,
                0xFFFB,
                0xFFFC,
                0xFFFD,
                0xFFFE,
                0xFFFF,
                0x0,
                0x0,
                0x0,
                0x1,
                0x2,
                0x3,
                0x4,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
    };
    #endif // (defined(TINYMIND_USE_TANH_13_3))
    #if (defined(TINYMIND_USE_TANH_14_2))
    const uint16_t TanhValuesTableQ14_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFD,
                0xFFFE,
                0xFFFE,
                0xFFFE,
                0xFFFF,
                0xFFFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
    };
    #endif // (defined(TINYMIND_USE_TANH_14_2))
    #if (defined(TINYMIND_USE_TANH_15_1))
    const uint16_t TanhValuesTableQ15_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0xFFFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
    };
    #endif // (defined(TINYMIND_USE_TANH_15_1))
    #if (defined(TINYMIND_USE_TANH_1_31))
    const uint32_t TanhValuesTableQ1_31::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x80006716,
                0x8000845D,
                0x8000A9F4,
                0x8000DA3A,
                0x80011835,
                0x800167CA,
                0x8001CDF9,
                0x8002512E,
                0x8002F9A7,
                0x8003D1F8,
                0x8004E7B7,
                0x80064C55,
                0x80081638,
                0x800A621F,
                0x800D54F1,
                0x80111E0C,
                0x8015FA3E,
                0x801C378D,
                0x80243A17,
                0x802E824C,
                0x803BB4E8,
                0x804CA521,
                0x806261A9,
                0x807E453F,
                0x80A20BBC,
                0x80CFECCA,
                0x810ABD95,
                0x81561B2E,
                0x81B69F68,
                0x82322254,
                0x82D00A50,
                0x8399AC83,
                0x849ABE88,
                0x85E1D84D,
                0x878101A1,
                0x898E4141,
                0x8C241A1F,
                0x8F61D6B6,
                0x936B7113,
                0x9868D292,
                0x9E84152C,
                0xA5E66BD2,
                0xAEB3706B,
                0xB902E056,
                0xC4D95852,
                0xD2215843,
                0xE0A6815A,
                0xF015336B,
                0x0,
                0xFEACC95,
                0x1F597EA6,
                0x2DDEA7BD,
                0x3B26A7AE,
                0x46FD1FAA,
                0x514C8F95,
                0x5A19942E,
                0x617BEAD4,
                0x67972D6E,
                0x6C948EED,
                0x709E294A,
                0x73DBE5E1,
                0x7671BEBF,
                0x787EFE5F,
                0x7A1E27B3,
                0x7B654178,
                0x7C66537D,
                0x7D2FF5B0,
                0x7DCDDDAC,
                0x7E496098,
                0x7EA9E4D2,
                0x7EF5426B,
                0x7F301336,
                0x7F5DF444,
                0x7F81BAC1,
                0x7F9D9E57,
                0x7FB35ADF,
                0x7FC44B18,
                0x7FD17DB4,
                0x7FDBC5E9,
                0x7FE3C873,
                0x7FEA05C2,
                0x7FEEE1F4,
                0x7FF2AB0F,
                0x7FF59DE1,
                0x7FF7E9C8,
                0x7FF9B3AB,
                0x7FFB1849,
                0x7FFC2E08,
                0x7FFD0659,
                0x7FFDAED2,
                0x7FFE3207,
                0x7FFE9836,
                0x7FFEE7CB,
                0x7FFF25C6,
                0x7FFF560C,
                0x7FFF7BA3,
    };
    #endif // (defined(TINYMIND_USE_TANH_1_31))
    #if (defined(TINYMIND_USE_TANH_2_30))
    const uint32_t TanhValuesTableQ2_30::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xC000338B,
                0xC000422F,
                0xC00054FA,
                0xC0006D1D,
                0xC0008C1B,
                0xC000B3E5,
                0xC000E6FD,
                0xC0012897,
                0xC0017CD4,
                0xC001E8FC,
                0xC00273DC,
                0xC003262B,
                0xC0040B1C,
                0xC0053110,
                0xC006AA79,
                0xC0088F06,
                0xC00AFD1F,
                0xC00E1BC7,
                0xC0121D0C,
                0xC0174126,
                0xC01DDA74,
                0xC0265291,
                0xC03130D5,
                0xC03F22A0,
                0xC05105DE,
                0xC067F665,
                0xC0855ECB,
                0xC0AB0D97,
                0xC0DB4FB4,
                0xC119112A,
                0xC1680528,
                0xC1CCD642,
                0xC24D5F44,
                0xC2F0EC27,
                0xC3C080D1,
                0xC4C720A1,
                0xC6120D10,
                0xC7B0EB5B,
                0xC9B5B88A,
                0xCC346949,
                0xCF420A96,
                0xD2F335E9,
                0xD759B836,
                0xDC81702B,
                0xE26CAC29,
                0xE910AC22,
                0xF05340AD,
                0xF80A99B6,
                0x0,
                0x7F5664A,
                0xFACBF53,
                0x16EF53DE,
                0x1D9353D7,
                0x237E8FD5,
                0x28A647CA,
                0x2D0CCA17,
                0x30BDF56A,
                0x33CB96B7,
                0x364A4776,
                0x384F14A5,
                0x39EDF2F0,
                0x3B38DF5F,
                0x3C3F7F2F,
                0x3D0F13D9,
                0x3DB2A0BC,
                0x3E3329BE,
                0x3E97FAD8,
                0x3EE6EED6,
                0x3F24B04C,
                0x3F54F269,
                0x3F7AA135,
                0x3F98099B,
                0x3FAEFA22,
                0x3FC0DD60,
                0x3FCECF2B,
                0x3FD9AD6F,
                0x3FE2258C,
                0x3FE8BEDA,
                0x3FEDE2F4,
                0x3FF1E439,
                0x3FF502E1,
                0x3FF770FA,
                0x3FF95587,
                0x3FFACEF0,
                0x3FFBF4E4,
                0x3FFCD9D5,
                0x3FFD8C24,
                0x3FFE1704,
                0x3FFE832C,
                0x3FFED769,
                0x3FFF1903,
                0x3FFF4C1B,
                0x3FFF73E5,
                0x3FFF92E3,
                0x3FFFAB06,
                0x3FFFBDD1,
    };
    #endif // (defined(TINYMIND_USE_TANH_2_30))
    #if (defined(TINYMIND_USE_TANH_3_29))
    const uint32_t TanhValuesTableQ3_29::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xE00019C6,
                0xE0002118,
                0xE0002A7D,
                0xE000368F,
                0xE000460E,
                0xE00059F3,
                0xE000737F,
                0xE000944C,
                0xE000BE6A,
                0xE000F47E,
                0xE00139EE,
                0xE0019316,
                0xE002058E,
                0xE0029888,
                0xE003553D,
                0xE0044783,
                0xE0057E90,
                0xE0070DE4,
                0xE0090E86,
                0xE00BA093,
                0xE00EED3A,
                0xE0132949,
                0xE018986B,
                0xE01F9150,
                0xE02882EF,
                0xE033FB33,
                0xE042AF66,
                0xE05586CC,
                0xE06DA7DA,
                0xE08C8895,
                0xE0B40294,
                0xE0E66B21,
                0xE126AFA2,
                0xE1787614,
                0xE1E04069,
                0xE2639051,
                0xE3090688,
                0xE3D875AE,
                0xE4DADC45,
                0xE61A34A5,
                0xE7A1054B,
                0xE9799AF5,
                0xEBACDC1B,
                0xEE40B816,
                0xF1365615,
                0xF4885611,
                0xF829A057,
                0xFC054CDB,
                0x0,
                0x3FAB325,
                0x7D65FA9,
                0xB77A9EF,
                0xEC9A9EB,
                0x11BF47EA,
                0x145323E5,
                0x1686650B,
                0x185EFAB5,
                0x19E5CB5B,
                0x1B2523BB,
                0x1C278A52,
                0x1CF6F978,
                0x1D9C6FAF,
                0x1E1FBF97,
                0x1E8789EC,
                0x1ED9505E,
                0x1F1994DF,
                0x1F4BFD6C,
                0x1F73776B,
                0x1F925826,
                0x1FAA7934,
                0x1FBD509A,
                0x1FCC04CD,
                0x1FD77D11,
                0x1FE06EB0,
                0x1FE76795,
                0x1FECD6B7,
                0x1FF112C6,
                0x1FF45F6D,
                0x1FF6F17A,
                0x1FF8F21C,
                0x1FFA8170,
                0x1FFBB87D,
                0x1FFCAAC3,
                0x1FFD6778,
                0x1FFDFA72,
                0x1FFE6CEA,
                0x1FFEC612,
                0x1FFF0B82,
                0x1FFF4196,
                0x1FFF6BB4,
                0x1FFF8C81,
                0x1FFFA60D,
                0x1FFFB9F2,
                0x1FFFC971,
                0x1FFFD583,
                0x1FFFDEE8,
    };
    #endif // (defined(TINYMIND_USE_TANH_3_29))
    #if (defined(TINYMIND_USE_TANH_4_28))
    const uint32_t TanhValuesTableQ4_28::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xF0000CE3,
                0xF000108C,
                0xF000153F,
                0xF0001B48,
                0xF0002307,
                0xF0002CFA,
                0xF00039C0,
                0xF0004A26,
                0xF0005F35,
                0xF0007A3F,
                0xF0009CF7,
                0xF000C98B,
                0xF00102C7,
                0xF0014C44,
                0xF001AA9F,
                0xF00223C2,
                0xF002BF48,
                0xF00386F2,
                0xF0048743,
                0xF005D04A,
                0xF007769D,
                0xF00994A5,
                0xF00C4C36,
                0xF00FC8A8,
                0xF0144178,
                0xF019FD9A,
                0xF02157B3,
                0xF02AC366,
                0xF036D3ED,
                0xF046444B,
                0xF05A014A,
                0xF0733591,
                0xF09357D1,
                0xF0BC3B0A,
                0xF0F02035,
                0xF131C829,
                0xF1848344,
                0xF1EC3AD7,
                0xF26D6E23,
                0xF30D1A53,
                0xF3D082A6,
                0xF4BCCD7B,
                0xF5D66E0E,
                0xF7205C0B,
                0xF89B2B0B,
                0xFA442B09,
                0xFC14D02C,
                0xFE02A66E,
                0x0,
                0x1FD5992,
                0x3EB2FD4,
                0x5BBD4F7,
                0x764D4F5,
                0x8DFA3F5,
                0xA2991F2,
                0xB433285,
                0xC2F7D5A,
                0xCF2E5AD,
                0xD9291DD,
                0xE13C529,
                0xE7B7CBC,
                0xECE37D7,
                0xF0FDFCB,
                0xF43C4F6,
                0xF6CA82F,
                0xF8CCA6F,
                0xFA5FEB6,
                0xFB9BBB5,
                0xFC92C13,
                0xFD53C9A,
                0xFDEA84D,
                0xFE60266,
                0xFEBBE88,
                0xFF03758,
                0xFF3B3CA,
                0xFF66B5B,
                0xFF88963,
                0xFFA2FB6,
                0xFFB78BD,
                0xFFC790E,
                0xFFD40B8,
                0xFFDDC3E,
                0xFFE5561,
                0xFFEB3BC,
                0xFFEFD39,
                0xFFF3675,
                0xFFF6309,
                0xFFF85C1,
                0xFFFA0CB,
                0xFFFB5DA,
                0xFFFC640,
                0xFFFD306,
                0xFFFDCF9,
                0xFFFE4B8,
                0xFFFEAC1,
                0xFFFEF74,
    };
    #endif // (defined(TINYMIND_USE_TANH_4_28))
    #if (defined(TINYMIND_USE_TANH_5_27))
    const uint32_t TanhValuesTableQ5_27::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xF8000672,
                0xF8000846,
                0xF8000AA0,
                0xF8000DA4,
                0xF8001184,
                0xF800167D,
                0xF8001CE0,
                0xF8002513,
                0xF8002F9B,
                0xF8003D20,
                0xF8004E7C,
                0xF80064C6,
                0xF8008164,
                0xF800A622,
                0xF800D550,
                0xF80111E1,
                0xF8015FA4,
                0xF801C379,
                0xF80243A2,
                0xF802E825,
                0xF803BB4F,
                0xF804CA53,
                0xF806261B,
                0xF807E454,
                0xF80A20BC,
                0xF80CFECD,
                0xF810ABDA,
                0xF81561B3,
                0xF81B69F7,
                0xF8232226,
                0xF82D00A5,
                0xF8399AC9,
                0xF849ABE9,
                0xF85E1D85,
                0xF878101B,
                0xF898E415,
                0xF8C241A2,
                0xF8F61D6C,
                0xF936B712,
                0xF9868D2A,
                0xF9E84153,
                0xFA5E66BE,
                0xFAEB3707,
                0xFB902E06,
                0xFC4D9586,
                0xFD221585,
                0xFE0A6816,
                0xFF015337,
                0x0,
                0xFEACC9,
                0x1F597EA,
                0x2DDEA7B,
                0x3B26A7A,
                0x46FD1FA,
                0x514C8F9,
                0x5A19942,
                0x617BEAD,
                0x67972D6,
                0x6C948EE,
                0x709E294,
                0x73DBE5E,
                0x7671BEB,
                0x787EFE5,
                0x7A1E27B,
                0x7B65417,
                0x7C66537,
                0x7D2FF5B,
                0x7DCDDDA,
                0x7E49609,
                0x7EA9E4D,
                0x7EF5426,
                0x7F30133,
                0x7F5DF44,
                0x7F81BAC,
                0x7F9D9E5,
                0x7FB35AD,
                0x7FC44B1,
                0x7FD17DB,
                0x7FDBC5E,
                0x7FE3C87,
                0x7FEA05C,
                0x7FEEE1F,
                0x7FF2AB0,
                0x7FF59DE,
                0x7FF7E9C,
                0x7FF9B3A,
                0x7FFB184,
                0x7FFC2E0,
                0x7FFD065,
                0x7FFDAED,
                0x7FFE320,
                0x7FFE983,
                0x7FFEE7C,
                0x7FFF25C,
                0x7FFF560,
                0x7FFF7BA,
    };
    #endif // (defined(TINYMIND_USE_TANH_5_27))
    #if (defined(TINYMIND_USE_TANH_6_26))
    const uint32_t TanhValuesTableQ6_26::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFC000339,
                0xFC000423,
                0xFC000550,
                0xFC0006D2,
                0xFC0008C2,
                0xFC000B3F,
                0xFC000E70,
                0xFC00128A,
                0xFC0017CE,
                0xFC001E90,
                0xFC00273E,
                0xFC003263,
                0xFC0040B2,
                0xFC005311,
                0xFC006AA8,
                0xFC0088F1,
                0xFC00AFD2,
                0xFC00E1BD,
                0xFC0121D1,
                0xFC017413,
                0xFC01DDA8,
                0xFC02652A,
                0xFC03130E,
                0xFC03F22A,
                0xFC05105E,
                0xFC067F67,
                0xFC0855ED,
                0xFC0AB0DA,
                0xFC0DB4FC,
                0xFC119113,
                0xFC168053,
                0xFC1CCD65,
                0xFC24D5F5,
                0xFC2F0EC3,
                0xFC3C080E,
                0xFC4C720B,
                0xFC6120D1,
                0xFC7B0EB6,
                0xFC9B5B89,
                0xFCC34695,
                0xFCF420AA,
                0xFD2F335F,
                0xFD759B84,
                0xFDC81703,
                0xFE26CAC3,
                0xFE910AC3,
                0xFF05340B,
                0xFF80A99C,
                0x0,
                0x7F5664,
                0xFACBF5,
                0x16EF53D,
                0x1D9353D,
                0x237E8FD,
                0x28A647C,
                0x2D0CCA1,
                0x30BDF56,
                0x33CB96B,
                0x364A477,
                0x384F14A,
                0x39EDF2F,
                0x3B38DF5,
                0x3C3F7F2,
                0x3D0F13D,
                0x3DB2A0B,
                0x3E3329B,
                0x3E97FAD,
                0x3EE6EED,
                0x3F24B04,
                0x3F54F26,
                0x3F7AA13,
                0x3F98099,
                0x3FAEFA2,
                0x3FC0DD6,
                0x3FCECF2,
                0x3FD9AD6,
                0x3FE2258,
                0x3FE8BED,
                0x3FEDE2F,
                0x3FF1E43,
                0x3FF502E,
                0x3FF770F,
                0x3FF9558,
                0x3FFACEF,
                0x3FFBF4E,
                0x3FFCD9D,
                0x3FFD8C2,
                0x3FFE170,
                0x3FFE832,
                0x3FFED76,
                0x3FFF190,
                0x3FFF4C1,
                0x3FFF73E,
                0x3FFF92E,
                0x3FFFAB0,
                0x3FFFBDD,
    };
    #endif // (defined(TINYMIND_USE_TANH_6_26))
    #if (defined(TINYMIND_USE_TANH_7_25))
    const uint32_t TanhValuesTableQ7_25::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFE00019D,
                0xFE000212,
                0xFE0002A8,
                0xFE000369,
                0xFE000461,
                0xFE0005A0,
                0xFE000738,
                0xFE000945,
                0xFE000BE7,
                0xFE000F48,
                0xFE00139F,
                0xFE001932,
                0xFE002059,
                0xFE002989,
                0xFE003554,
                0xFE004479,
                0xFE0057E9,
                0xFE0070DF,
                0xFE0090E9,
                0xFE00BA0A,
                0xFE00EED4,
                0xFE013295,
                0xFE018987,
                0xFE01F915,
                0xFE02882F,
                0xFE033FB4,
                0xFE042AF7,
                0xFE05586D,
                0xFE06DA7E,
                0xFE08C88A,
                0xFE0B402A,
                0xFE0E66B3,
                0xFE126AFB,
                0xFE178762,
                0xFE1E0407,
                0xFE263906,
                0xFE309069,
                0xFE3D875B,
                0xFE4DADC5,
                0xFE61A34B,
                0xFE7A1055,
                0xFE9799B0,
                0xFEBACDC2,
                0xFEE40B82,
                0xFF136562,
                0xFF488562,
                0xFF829A06,
                0xFFC054CE,
                0x0,
                0x3FAB32,
                0x7D65FA,
                0xB77A9E,
                0xEC9A9E,
                0x11BF47E,
                0x145323E,
                0x1686650,
                0x185EFAB,
                0x19E5CB5,
                0x1B2523B,
                0x1C278A5,
                0x1CF6F97,
                0x1D9C6FA,
                0x1E1FBF9,
                0x1E8789E,
                0x1ED9505,
                0x1F1994D,
                0x1F4BFD6,
                0x1F73776,
                0x1F92582,
                0x1FAA793,
                0x1FBD509,
                0x1FCC04C,
                0x1FD77D1,
                0x1FE06EB,
                0x1FE7679,
                0x1FECD6B,
                0x1FF112C,
                0x1FF45F6,
                0x1FF6F17,
                0x1FF8F21,
                0x1FFA817,
                0x1FFBB87,
                0x1FFCAAC,
                0x1FFD677,
                0x1FFDFA7,
                0x1FFE6CE,
                0x1FFEC61,
                0x1FFF0B8,
                0x1FFF419,
                0x1FFF6BB,
                0x1FFF8C8,
                0x1FFFA60,
                0x1FFFB9F,
                0x1FFFC97,
                0x1FFFD58,
                0x1FFFDEE,
    };
    #endif // (defined(TINYMIND_USE_TANH_7_25))
    #if (defined(TINYMIND_USE_TANH_8_24))
    const uint32_t TanhValuesTableQ8_24::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFF0000CF,
                0xFF000109,
                0xFF000154,
                0xFF0001B5,
                0xFF000231,
                0xFF0002D0,
                0xFF00039C,
                0xFF0004A3,
                0xFF0005F4,
                0xFF0007A4,
                0xFF0009D0,
                0xFF000C99,
                0xFF00102D,
                0xFF0014C5,
                0xFF001AAA,
                0xFF00223D,
                0xFF002BF5,
                0xFF003870,
                0xFF004875,
                0xFF005D05,
                0xFF00776A,
                0xFF00994B,
                0xFF00C4C4,
                0xFF00FC8B,
                0xFF014418,
                0xFF019FDA,
                0xFF02157C,
                0xFF02AC37,
                0xFF036D3F,
                0xFF046445,
                0xFF05A015,
                0xFF07335A,
                0xFF09357E,
                0xFF0BC3B1,
                0xFF0F0204,
                0xFF131C83,
                0xFF184835,
                0xFF1EC3AE,
                0xFF26D6E3,
                0xFF30D1A6,
                0xFF3D082B,
                0xFF4BCCD8,
                0xFF5D66E1,
                0xFF7205C1,
                0xFF89B2B1,
                0xFFA442B1,
                0xFFC14D03,
                0xFFE02A67,
                0x0,
                0x1FD599,
                0x3EB2FD,
                0x5BBD4F,
                0x764D4F,
                0x8DFA3F,
                0xA2991F,
                0xB43328,
                0xC2F7D5,
                0xCF2E5A,
                0xD9291D,
                0xE13C52,
                0xE7B7CB,
                0xECE37D,
                0xF0FDFC,
                0xF43C4F,
                0xF6CA82,
                0xF8CCA6,
                0xFA5FEB,
                0xFB9BBB,
                0xFC92C1,
                0xFD53C9,
                0xFDEA84,
                0xFE6026,
                0xFEBBE8,
                0xFF0375,
                0xFF3B3C,
                0xFF66B5,
                0xFF8896,
                0xFFA2FB,
                0xFFB78B,
                0xFFC790,
                0xFFD40B,
                0xFFDDC3,
                0xFFE556,
                0xFFEB3B,
                0xFFEFD3,
                0xFFF367,
                0xFFF630,
                0xFFF85C,
                0xFFFA0C,
                0xFFFB5D,
                0xFFFC64,
                0xFFFD30,
                0xFFFDCF,
                0xFFFE4B,
                0xFFFEAC,
                0xFFFEF7,
    };
    #endif // (defined(TINYMIND_USE_TANH_8_24))
    #if (defined(TINYMIND_USE_TANH_9_23))
    const uint32_t TanhValuesTableQ9_23::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFF800068,
                0xFF800085,
                0xFF8000AA,
                0xFF8000DB,
                0xFF800119,
                0xFF800168,
                0xFF8001CE,
                0xFF800252,
                0xFF8002FA,
                0xFF8003D2,
                0xFF8004E8,
                0xFF80064D,
                0xFF800817,
                0xFF800A63,
                0xFF800D55,
                0xFF80111F,
                0xFF8015FB,
                0xFF801C38,
                0xFF80243B,
                0xFF802E83,
                0xFF803BB5,
                0xFF804CA6,
                0xFF806262,
                0xFF807E46,
                0xFF80A20C,
                0xFF80CFED,
                0xFF810ABE,
                0xFF81561C,
                0xFF81B6A0,
                0xFF823223,
                0xFF82D00B,
                0xFF8399AD,
                0xFF849ABF,
                0xFF85E1D9,
                0xFF878102,
                0xFF898E42,
                0xFF8C241B,
                0xFF8F61D7,
                0xFF936B72,
                0xFF9868D3,
                0xFF9E8416,
                0xFFA5E66C,
                0xFFAEB371,
                0xFFB902E1,
                0xFFC4D959,
                0xFFD22159,
                0xFFE0A682,
                0xFFF01534,
                0x0,
                0xFEACC,
                0x1F597E,
                0x2DDEA7,
                0x3B26A7,
                0x46FD1F,
                0x514C8F,
                0x5A1994,
                0x617BEA,
                0x67972D,
                0x6C948E,
                0x709E29,
                0x73DBE5,
                0x7671BE,
                0x787EFE,
                0x7A1E27,
                0x7B6541,
                0x7C6653,
                0x7D2FF5,
                0x7DCDDD,
                0x7E4960,
                0x7EA9E4,
                0x7EF542,
                0x7F3013,
                0x7F5DF4,
                0x7F81BA,
                0x7F9D9E,
                0x7FB35A,
                0x7FC44B,
                0x7FD17D,
                0x7FDBC5,
                0x7FE3C8,
                0x7FEA05,
                0x7FEEE1,
                0x7FF2AB,
                0x7FF59D,
                0x7FF7E9,
                0x7FF9B3,
                0x7FFB18,
                0x7FFC2E,
                0x7FFD06,
                0x7FFDAE,
                0x7FFE32,
                0x7FFE98,
                0x7FFEE7,
                0x7FFF25,
                0x7FFF56,
                0x7FFF7B,
    };
    #endif // (defined(TINYMIND_USE_TANH_9_23))
    #if (defined(TINYMIND_USE_TANH_10_22))
    const uint32_t TanhValuesTableQ10_22::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFC00034,
                0xFFC00043,
                0xFFC00055,
                0xFFC0006E,
                0xFFC0008D,
                0xFFC000B4,
                0xFFC000E7,
                0xFFC00129,
                0xFFC0017D,
                0xFFC001E9,
                0xFFC00274,
                0xFFC00327,
                0xFFC0040C,
                0xFFC00532,
                0xFFC006AB,
                0xFFC00890,
                0xFFC00AFE,
                0xFFC00E1C,
                0xFFC0121E,
                0xFFC01742,
                0xFFC01DDB,
                0xFFC02653,
                0xFFC03131,
                0xFFC03F23,
                0xFFC05106,
                0xFFC067F7,
                0xFFC0855F,
                0xFFC0AB0E,
                0xFFC0DB50,
                0xFFC11912,
                0xFFC16806,
                0xFFC1CCD7,
                0xFFC24D60,
                0xFFC2F0ED,
                0xFFC3C081,
                0xFFC4C721,
                0xFFC6120E,
                0xFFC7B0EC,
                0xFFC9B5B9,
                0xFFCC346A,
                0xFFCF420B,
                0xFFD2F336,
                0xFFD759B9,
                0xFFDC8171,
                0xFFE26CAD,
                0xFFE910AD,
                0xFFF05341,
                0xFFF80A9A,
                0x0,
                0x7F566,
                0xFACBF,
                0x16EF53,
                0x1D9353,
                0x237E8F,
                0x28A647,
                0x2D0CCA,
                0x30BDF5,
                0x33CB96,
                0x364A47,
                0x384F14,
                0x39EDF2,
                0x3B38DF,
                0x3C3F7F,
                0x3D0F13,
                0x3DB2A0,
                0x3E3329,
                0x3E97FA,
                0x3EE6EE,
                0x3F24B0,
                0x3F54F2,
                0x3F7AA1,
                0x3F9809,
                0x3FAEFA,
                0x3FC0DD,
                0x3FCECF,
                0x3FD9AD,
                0x3FE225,
                0x3FE8BE,
                0x3FEDE2,
                0x3FF1E4,
                0x3FF502,
                0x3FF770,
                0x3FF955,
                0x3FFACE,
                0x3FFBF4,
                0x3FFCD9,
                0x3FFD8C,
                0x3FFE17,
                0x3FFE83,
                0x3FFED7,
                0x3FFF19,
                0x3FFF4C,
                0x3FFF73,
                0x3FFF92,
                0x3FFFAB,
                0x3FFFBD,
    };
    #endif // (defined(TINYMIND_USE_TANH_10_22))
    #if (defined(TINYMIND_USE_TANH_11_21))
    const uint32_t TanhValuesTableQ11_21::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFE0001A,
                0xFFE00022,
                0xFFE0002B,
                0xFFE00037,
                0xFFE00047,
                0xFFE0005A,
                0xFFE00074,
                0xFFE00095,
                0xFFE000BF,
                0xFFE000F5,
                0xFFE0013A,
                0xFFE00194,
                0xFFE00206,
                0xFFE00299,
                0xFFE00356,
                0xFFE00448,
                0xFFE0057F,
                0xFFE0070E,
                0xFFE0090F,
                0xFFE00BA1,
                0xFFE00EEE,
                0xFFE0132A,
                0xFFE01899,
                0xFFE01F92,
                0xFFE02883,
                0xFFE033FC,
                0xFFE042B0,
                0xFFE05587,
                0xFFE06DA8,
                0xFFE08C89,
                0xFFE0B403,
                0xFFE0E66C,
                0xFFE126B0,
                0xFFE17877,
                0xFFE1E041,
                0xFFE26391,
                0xFFE30907,
                0xFFE3D876,
                0xFFE4DADD,
                0xFFE61A35,
                0xFFE7A106,
                0xFFE9799B,
                0xFFEBACDD,
                0xFFEE40B9,
                0xFFF13657,
                0xFFF48857,
                0xFFF829A1,
                0xFFFC054D,
                0x0,
                0x3FAB3,
                0x7D65F,
                0xB77A9,
                0xEC9A9,
                0x11BF47,
                0x145323,
                0x168665,
                0x185EFA,
                0x19E5CB,
                0x1B2523,
                0x1C278A,
                0x1CF6F9,
                0x1D9C6F,
                0x1E1FBF,
                0x1E8789,
                0x1ED950,
                0x1F1994,
                0x1F4BFD,
                0x1F7377,
                0x1F9258,
                0x1FAA79,
                0x1FBD50,
                0x1FCC04,
                0x1FD77D,
                0x1FE06E,
                0x1FE767,
                0x1FECD6,
                0x1FF112,
                0x1FF45F,
                0x1FF6F1,
                0x1FF8F2,
                0x1FFA81,
                0x1FFBB8,
                0x1FFCAA,
                0x1FFD67,
                0x1FFDFA,
                0x1FFE6C,
                0x1FFEC6,
                0x1FFF0B,
                0x1FFF41,
                0x1FFF6B,
                0x1FFF8C,
                0x1FFFA6,
                0x1FFFB9,
                0x1FFFC9,
                0x1FFFD5,
                0x1FFFDE,
    };
    #endif // (defined(TINYMIND_USE_TANH_11_21))
    #if (defined(TINYMIND_USE_TANH_12_20))
    const uint32_t TanhValuesTableQ12_20::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFF0000D,
                0xFFF00011,
                0xFFF00016,
                0xFFF0001C,
                0xFFF00024,
                0xFFF0002D,
                0xFFF0003A,
                0xFFF0004B,
                0xFFF00060,
                0xFFF0007B,
                0xFFF0009D,
                0xFFF000CA,
                0xFFF00103,
                0xFFF0014D,
                0xFFF001AB,
                0xFFF00224,
                0xFFF002C0,
                0xFFF00387,
                0xFFF00488,
                0xFFF005D1,
                0xFFF00777,
                0xFFF00995,
                0xFFF00C4D,
                0xFFF00FC9,
                0xFFF01442,
                0xFFF019FE,
                0xFFF02158,
                0xFFF02AC4,
                0xFFF036D4,
                0xFFF04645,
                0xFFF05A02,
                0xFFF07336,
                0xFFF09358,
                0xFFF0BC3C,
                0xFFF0F021,
                0xFFF131C9,
                0xFFF18484,
                0xFFF1EC3B,
                0xFFF26D6F,
                0xFFF30D1B,
                0xFFF3D083,
                0xFFF4BCCE,
                0xFFF5D66F,
                0xFFF7205D,
                0xFFF89B2C,
                0xFFFA442C,
                0xFFFC14D1,
                0xFFFE02A7,
                0x0,
                0x1FD59,
                0x3EB2F,
                0x5BBD4,
                0x764D4,
                0x8DFA3,
                0xA2991,
                0xB4332,
                0xC2F7D,
                0xCF2E5,
                0xD9291,
                0xE13C5,
                0xE7B7C,
                0xECE37,
                0xF0FDF,
                0xF43C4,
                0xF6CA8,
                0xF8CCA,
                0xFA5FE,
                0xFB9BB,
                0xFC92C,
                0xFD53C,
                0xFDEA8,
                0xFE602,
                0xFEBBE,
                0xFF037,
                0xFF3B3,
                0xFF66B,
                0xFF889,
                0xFFA2F,
                0xFFB78,
                0xFFC79,
                0xFFD40,
                0xFFDDC,
                0xFFE55,
                0xFFEB3,
                0xFFEFD,
                0xFFF36,
                0xFFF63,
                0xFFF85,
                0xFFFA0,
                0xFFFB5,
                0xFFFC6,
                0xFFFD3,
                0xFFFDC,
                0xFFFE4,
                0xFFFEA,
                0xFFFEF,
    };
    #endif // (defined(TINYMIND_USE_TANH_12_20))
    #if (defined(TINYMIND_USE_TANH_13_19))
    const uint32_t TanhValuesTableQ13_19::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFF80007,
                0xFFF80009,
                0xFFF8000B,
                0xFFF8000E,
                0xFFF80012,
                0xFFF80017,
                0xFFF8001D,
                0xFFF80026,
                0xFFF80030,
                0xFFF8003E,
                0xFFF8004F,
                0xFFF80065,
                0xFFF80082,
                0xFFF800A7,
                0xFFF800D6,
                0xFFF80112,
                0xFFF80160,
                0xFFF801C4,
                0xFFF80244,
                0xFFF802E9,
                0xFFF803BC,
                0xFFF804CB,
                0xFFF80627,
                0xFFF807E5,
                0xFFF80A21,
                0xFFF80CFF,
                0xFFF810AC,
                0xFFF81562,
                0xFFF81B6A,
                0xFFF82323,
                0xFFF82D01,
                0xFFF8399B,
                0xFFF849AC,
                0xFFF85E1E,
                0xFFF87811,
                0xFFF898E5,
                0xFFF8C242,
                0xFFF8F61E,
                0xFFF936B8,
                0xFFF9868E,
                0xFFF9E842,
                0xFFFA5E67,
                0xFFFAEB38,
                0xFFFB902F,
                0xFFFC4D96,
                0xFFFD2216,
                0xFFFE0A69,
                0xFFFF0154,
                0x0,
                0xFEAC,
                0x1F597,
                0x2DDEA,
                0x3B26A,
                0x46FD1,
                0x514C8,
                0x5A199,
                0x617BE,
                0x67972,
                0x6C948,
                0x709E2,
                0x73DBE,
                0x7671B,
                0x787EF,
                0x7A1E2,
                0x7B654,
                0x7C665,
                0x7D2FF,
                0x7DCDD,
                0x7E496,
                0x7EA9E,
                0x7EF54,
                0x7F301,
                0x7F5DF,
                0x7F81B,
                0x7F9D9,
                0x7FB35,
                0x7FC44,
                0x7FD17,
                0x7FDBC,
                0x7FE3C,
                0x7FEA0,
                0x7FEEE,
                0x7FF2A,
                0x7FF59,
                0x7FF7E,
                0x7FF9B,
                0x7FFB1,
                0x7FFC2,
                0x7FFD0,
                0x7FFDA,
                0x7FFE3,
                0x7FFE9,
                0x7FFEE,
                0x7FFF2,
                0x7FFF5,
                0x7FFF7,
    };
    #endif // (defined(TINYMIND_USE_TANH_13_19))
    #if (defined(TINYMIND_USE_TANH_14_18))
    const uint32_t TanhValuesTableQ14_18::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFC0004,
                0xFFFC0005,
                0xFFFC0006,
                0xFFFC0007,
                0xFFFC0009,
                0xFFFC000C,
                0xFFFC000F,
                0xFFFC0013,
                0xFFFC0018,
                0xFFFC001F,
                0xFFFC0028,
                0xFFFC0033,
                0xFFFC0041,
                0xFFFC0054,
                0xFFFC006B,
                0xFFFC0089,
                0xFFFC00B0,
                0xFFFC00E2,
                0xFFFC0122,
                0xFFFC0175,
                0xFFFC01DE,
                0xFFFC0266,
                0xFFFC0314,
                0xFFFC03F3,
                0xFFFC0511,
                0xFFFC0680,
                0xFFFC0856,
                0xFFFC0AB1,
                0xFFFC0DB5,
                0xFFFC1192,
                0xFFFC1681,
                0xFFFC1CCE,
                0xFFFC24D6,
                0xFFFC2F0F,
                0xFFFC3C09,
                0xFFFC4C73,
                0xFFFC6121,
                0xFFFC7B0F,
                0xFFFC9B5C,
                0xFFFCC347,
                0xFFFCF421,
                0xFFFD2F34,
                0xFFFD759C,
                0xFFFDC818,
                0xFFFE26CB,
                0xFFFE910B,
                0xFFFF0535,
                0xFFFF80AA,
                0x0,
                0x7F56,
                0xFACB,
                0x16EF5,
                0x1D935,
                0x237E8,
                0x28A64,
                0x2D0CC,
                0x30BDF,
                0x33CB9,
                0x364A4,
                0x384F1,
                0x39EDF,
                0x3B38D,
                0x3C3F7,
                0x3D0F1,
                0x3DB2A,
                0x3E332,
                0x3E97F,
                0x3EE6E,
                0x3F24B,
                0x3F54F,
                0x3F7AA,
                0x3F980,
                0x3FAEF,
                0x3FC0D,
                0x3FCEC,
                0x3FD9A,
                0x3FE22,
                0x3FE8B,
                0x3FEDE,
                0x3FF1E,
                0x3FF50,
                0x3FF77,
                0x3FF95,
                0x3FFAC,
                0x3FFBF,
                0x3FFCD,
                0x3FFD8,
                0x3FFE1,
                0x3FFE8,
                0x3FFED,
                0x3FFF1,
                0x3FFF4,
                0x3FFF7,
                0x3FFF9,
                0x3FFFA,
                0x3FFFB,
    };
    #endif // (defined(TINYMIND_USE_TANH_14_18))
    #if (defined(TINYMIND_USE_TANH_15_17))
    const uint32_t TanhValuesTableQ15_17::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFE0002,
                0xFFFE0003,
                0xFFFE0003,
                0xFFFE0004,
                0xFFFE0005,
                0xFFFE0006,
                0xFFFE0008,
                0xFFFE000A,
                0xFFFE000C,
                0xFFFE0010,
                0xFFFE0014,
                0xFFFE001A,
                0xFFFE0021,
                0xFFFE002A,
                0xFFFE0036,
                0xFFFE0045,
                0xFFFE0058,
                0xFFFE0071,
                0xFFFE0091,
                0xFFFE00BB,
                0xFFFE00EF,
                0xFFFE0133,
                0xFFFE018A,
                0xFFFE01FA,
                0xFFFE0289,
                0xFFFE0340,
                0xFFFE042B,
                0xFFFE0559,
                0xFFFE06DB,
                0xFFFE08C9,
                0xFFFE0B41,
                0xFFFE0E67,
                0xFFFE126B,
                0xFFFE1788,
                0xFFFE1E05,
                0xFFFE263A,
                0xFFFE3091,
                0xFFFE3D88,
                0xFFFE4DAE,
                0xFFFE61A4,
                0xFFFE7A11,
                0xFFFE979A,
                0xFFFEBACE,
                0xFFFEE40C,
                0xFFFF1366,
                0xFFFF4886,
                0xFFFF829B,
                0xFFFFC055,
                0x0,
                0x3FAB,
                0x7D65,
                0xB77A,
                0xEC9A,
                0x11BF4,
                0x14532,
                0x16866,
                0x185EF,
                0x19E5C,
                0x1B252,
                0x1C278,
                0x1CF6F,
                0x1D9C6,
                0x1E1FB,
                0x1E878,
                0x1ED95,
                0x1F199,
                0x1F4BF,
                0x1F737,
                0x1F925,
                0x1FAA7,
                0x1FBD5,
                0x1FCC0,
                0x1FD77,
                0x1FE06,
                0x1FE76,
                0x1FECD,
                0x1FF11,
                0x1FF45,
                0x1FF6F,
                0x1FF8F,
                0x1FFA8,
                0x1FFBB,
                0x1FFCA,
                0x1FFD6,
                0x1FFDF,
                0x1FFE6,
                0x1FFEC,
                0x1FFF0,
                0x1FFF4,
                0x1FFF6,
                0x1FFF8,
                0x1FFFA,
                0x1FFFB,
                0x1FFFC,
                0x1FFFD,
                0x1FFFD,
    };
    #endif // (defined(TINYMIND_USE_TANH_15_17))
    #if (defined(TINYMIND_USE_TANH_16_16))
    const uint32_t TanhValuesTableQ16_16::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFF0001,
                0xFFFF0002,
                0xFFFF0002,
                0xFFFF0002,
                0xFFFF0003,
                0xFFFF0003,
                0xFFFF0004,
                0xFFFF0005,
                0xFFFF0006,
                0xFFFF0008,
                0xFFFF000A,
                0xFFFF000D,
                0xFFFF0011,
                0xFFFF0015,
                0xFFFF001B,
                0xFFFF0023,
                0xFFFF002C,
                0xFFFF0039,
                0xFFFF0049,
                0xFFFF005E,
                0xFFFF0078,
                0xFFFF009A,
                0xFFFF00C5,
                0xFFFF00FD,
                0xFFFF0145,
                0xFFFF01A0,
                0xFFFF0216,
                0xFFFF02AD,
                0xFFFF036E,
                0xFFFF0465,
                0xFFFF05A1,
                0xFFFF0734,
                0xFFFF0936,
                0xFFFF0BC4,
                0xFFFF0F03,
                0xFFFF131D,
                0xFFFF1849,
                0xFFFF1EC4,
                0xFFFF26D7,
                0xFFFF30D2,
                0xFFFF3D09,
                0xFFFF4BCD,
                0xFFFF5D67,
                0xFFFF7206,
                0xFFFF89B3,
                0xFFFFA443,
                0xFFFFC14E,
                0xFFFFE02B,
                0x0,
                0x1FD5,
                0x3EB2,
                0x5BBD,
                0x764D,
                0x8DFA,
                0xA299,
                0xB433,
                0xC2F7,
                0xCF2E,
                0xD929,
                0xE13C,
                0xE7B7,
                0xECE3,
                0xF0FD,
                0xF43C,
                0xF6CA,
                0xF8CC,
                0xFA5F,
                0xFB9B,
                0xFC92,
                0xFD53,
                0xFDEA,
                0xFE60,
                0xFEBB,
                0xFF03,
                0xFF3B,
                0xFF66,
                0xFF88,
                0xFFA2,
                0xFFB7,
                0xFFC7,
                0xFFD4,
                0xFFDD,
                0xFFE5,
                0xFFEB,
                0xFFEF,
                0xFFF3,
                0xFFF6,
                0xFFF8,
                0xFFFA,
                0xFFFB,
                0xFFFC,
                0xFFFD,
                0xFFFD,
                0xFFFE,
                0xFFFE,
                0xFFFE,
    };
    #endif // (defined(TINYMIND_USE_TANH_16_16))
    #if (defined(TINYMIND_USE_TANH_17_15))
    const uint32_t TanhValuesTableQ17_15::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFF8001,
                0xFFFF8001,
                0xFFFF8001,
                0xFFFF8001,
                0xFFFF8002,
                0xFFFF8002,
                0xFFFF8002,
                0xFFFF8003,
                0xFFFF8003,
                0xFFFF8004,
                0xFFFF8005,
                0xFFFF8007,
                0xFFFF8009,
                0xFFFF800B,
                0xFFFF800E,
                0xFFFF8012,
                0xFFFF8016,
                0xFFFF801D,
                0xFFFF8025,
                0xFFFF802F,
                0xFFFF803C,
                0xFFFF804D,
                0xFFFF8063,
                0xFFFF807F,
                0xFFFF80A3,
                0xFFFF80D0,
                0xFFFF810B,
                0xFFFF8157,
                0xFFFF81B7,
                0xFFFF8233,
                0xFFFF82D1,
                0xFFFF839A,
                0xFFFF849B,
                0xFFFF85E2,
                0xFFFF8782,
                0xFFFF898F,
                0xFFFF8C25,
                0xFFFF8F62,
                0xFFFF936C,
                0xFFFF9869,
                0xFFFF9E85,
                0xFFFFA5E7,
                0xFFFFAEB4,
                0xFFFFB903,
                0xFFFFC4DA,
                0xFFFFD222,
                0xFFFFE0A7,
                0xFFFFF016,
                0x0,
                0xFEA,
                0x1F59,
                0x2DDE,
                0x3B26,
                0x46FD,
                0x514C,
                0x5A19,
                0x617B,
                0x6797,
                0x6C94,
                0x709E,
                0x73DB,
                0x7671,
                0x787E,
                0x7A1E,
                0x7B65,
                0x7C66,
                0x7D2F,
                0x7DCD,
                0x7E49,
                0x7EA9,
                0x7EF5,
                0x7F30,
                0x7F5D,
                0x7F81,
                0x7F9D,
                0x7FB3,
                0x7FC4,
                0x7FD1,
                0x7FDB,
                0x7FE3,
                0x7FEA,
                0x7FEE,
                0x7FF2,
                0x7FF5,
                0x7FF7,
                0x7FF9,
                0x7FFB,
                0x7FFC,
                0x7FFD,
                0x7FFD,
                0x7FFE,
                0x7FFE,
                0x7FFE,
                0x7FFF,
                0x7FFF,
                0x7FFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_17_15))
    #if (defined(TINYMIND_USE_TANH_18_14))
    const uint32_t TanhValuesTableQ18_14::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFC001,
                0xFFFFC001,
                0xFFFFC001,
                0xFFFFC001,
                0xFFFFC001,
                0xFFFFC001,
                0xFFFFC001,
                0xFFFFC002,
                0xFFFFC002,
                0xFFFFC002,
                0xFFFFC003,
                0xFFFFC004,
                0xFFFFC005,
                0xFFFFC006,
                0xFFFFC007,
                0xFFFFC009,
                0xFFFFC00B,
                0xFFFFC00F,
                0xFFFFC013,
                0xFFFFC018,
                0xFFFFC01E,
                0xFFFFC027,
                0xFFFFC032,
                0xFFFFC040,
                0xFFFFC052,
                0xFFFFC068,
                0xFFFFC086,
                0xFFFFC0AC,
                0xFFFFC0DC,
                0xFFFFC11A,
                0xFFFFC169,
                0xFFFFC1CD,
                0xFFFFC24E,
                0xFFFFC2F1,
                0xFFFFC3C1,
                0xFFFFC4C8,
                0xFFFFC613,
                0xFFFFC7B1,
                0xFFFFC9B6,
                0xFFFFCC35,
                0xFFFFCF43,
                0xFFFFD2F4,
                0xFFFFD75A,
                0xFFFFDC82,
                0xFFFFE26D,
                0xFFFFE911,
                0xFFFFF054,
                0xFFFFF80B,
                0x0,
                0x7F5,
                0xFAC,
                0x16EF,
                0x1D93,
                0x237E,
                0x28A6,
                0x2D0C,
                0x30BD,
                0x33CB,
                0x364A,
                0x384F,
                0x39ED,
                0x3B38,
                0x3C3F,
                0x3D0F,
                0x3DB2,
                0x3E33,
                0x3E97,
                0x3EE6,
                0x3F24,
                0x3F54,
                0x3F7A,
                0x3F98,
                0x3FAE,
                0x3FC0,
                0x3FCE,
                0x3FD9,
                0x3FE2,
                0x3FE8,
                0x3FED,
                0x3FF1,
                0x3FF5,
                0x3FF7,
                0x3FF9,
                0x3FFA,
                0x3FFB,
                0x3FFC,
                0x3FFD,
                0x3FFE,
                0x3FFE,
                0x3FFE,
                0x3FFF,
                0x3FFF,
                0x3FFF,
                0x3FFF,
                0x3FFF,
                0x3FFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_18_14))
    #if (defined(TINYMIND_USE_TANH_19_13))
    const uint32_t TanhValuesTableQ19_13::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFE001,
                0xFFFFE001,
                0xFFFFE001,
                0xFFFFE001,
                0xFFFFE001,
                0xFFFFE001,
                0xFFFFE001,
                0xFFFFE001,
                0xFFFFE001,
                0xFFFFE001,
                0xFFFFE002,
                0xFFFFE002,
                0xFFFFE003,
                0xFFFFE003,
                0xFFFFE004,
                0xFFFFE005,
                0xFFFFE006,
                0xFFFFE008,
                0xFFFFE00A,
                0xFFFFE00C,
                0xFFFFE00F,
                0xFFFFE014,
                0xFFFFE019,
                0xFFFFE020,
                0xFFFFE029,
                0xFFFFE034,
                0xFFFFE043,
                0xFFFFE056,
                0xFFFFE06E,
                0xFFFFE08D,
                0xFFFFE0B5,
                0xFFFFE0E7,
                0xFFFFE127,
                0xFFFFE179,
                0xFFFFE1E1,
                0xFFFFE264,
                0xFFFFE30A,
                0xFFFFE3D9,
                0xFFFFE4DB,
                0xFFFFE61B,
                0xFFFFE7A2,
                0xFFFFE97A,
                0xFFFFEBAD,
                0xFFFFEE41,
                0xFFFFF137,
                0xFFFFF489,
                0xFFFFF82A,
                0xFFFFFC06,
                0x0,
                0x3FA,
                0x7D6,
                0xB77,
                0xEC9,
                0x11BF,
                0x1453,
                0x1686,
                0x185E,
                0x19E5,
                0x1B25,
                0x1C27,
                0x1CF6,
                0x1D9C,
                0x1E1F,
                0x1E87,
                0x1ED9,
                0x1F19,
                0x1F4B,
                0x1F73,
                0x1F92,
                0x1FAA,
                0x1FBD,
                0x1FCC,
                0x1FD7,
                0x1FE0,
                0x1FE7,
                0x1FEC,
                0x1FF1,
                0x1FF4,
                0x1FF6,
                0x1FF8,
                0x1FFA,
                0x1FFB,
                0x1FFC,
                0x1FFD,
                0x1FFD,
                0x1FFE,
                0x1FFE,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_19_13))
    #if (defined(TINYMIND_USE_TANH_20_12))
    const uint32_t TanhValuesTableQ20_12::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFF001,
                0xFFFFF001,
                0xFFFFF001,
                0xFFFFF001,
                0xFFFFF001,
                0xFFFFF001,
                0xFFFFF001,
                0xFFFFF001,
                0xFFFFF001,
                0xFFFFF001,
                0xFFFFF001,
                0xFFFFF001,
                0xFFFFF002,
                0xFFFFF002,
                0xFFFFF002,
                0xFFFFF003,
                0xFFFFF003,
                0xFFFFF004,
                0xFFFFF005,
                0xFFFFF006,
                0xFFFFF008,
                0xFFFFF00A,
                0xFFFFF00D,
                0xFFFFF010,
                0xFFFFF015,
                0xFFFFF01A,
                0xFFFFF022,
                0xFFFFF02B,
                0xFFFFF037,
                0xFFFFF047,
                0xFFFFF05B,
                0xFFFFF074,
                0xFFFFF094,
                0xFFFFF0BD,
                0xFFFFF0F1,
                0xFFFFF132,
                0xFFFFF185,
                0xFFFFF1ED,
                0xFFFFF26E,
                0xFFFFF30E,
                0xFFFFF3D1,
                0xFFFFF4BD,
                0xFFFFF5D7,
                0xFFFFF721,
                0xFFFFF89C,
                0xFFFFFA45,
                0xFFFFFC15,
                0xFFFFFE03,
                0x0,
                0x1FD,
                0x3EB,
                0x5BB,
                0x764,
                0x8DF,
                0xA29,
                0xB43,
                0xC2F,
                0xCF2,
                0xD92,
                0xE13,
                0xE7B,
                0xECE,
                0xF0F,
                0xF43,
                0xF6C,
                0xF8C,
                0xFA5,
                0xFB9,
                0xFC9,
                0xFD5,
                0xFDE,
                0xFE6,
                0xFEB,
                0xFF0,
                0xFF3,
                0xFF6,
                0xFF8,
                0xFFA,
                0xFFB,
                0xFFC,
                0xFFD,
                0xFFD,
                0xFFE,
                0xFFE,
                0xFFE,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_20_12))
    #if (defined(TINYMIND_USE_TANH_21_11))
    const uint32_t TanhValuesTableQ21_11::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFF801,
                0xFFFFF801,
                0xFFFFF801,
                0xFFFFF801,
                0xFFFFF801,
                0xFFFFF801,
                0xFFFFF801,
                0xFFFFF801,
                0xFFFFF801,
                0xFFFFF801,
                0xFFFFF801,
                0xFFFFF801,
                0xFFFFF801,
                0xFFFFF801,
                0xFFFFF801,
                0xFFFFF802,
                0xFFFFF802,
                0xFFFFF802,
                0xFFFFF803,
                0xFFFFF803,
                0xFFFFF804,
                0xFFFFF805,
                0xFFFFF807,
                0xFFFFF808,
                0xFFFFF80B,
                0xFFFFF80D,
                0xFFFFF811,
                0xFFFFF816,
                0xFFFFF81C,
                0xFFFFF824,
                0xFFFFF82E,
                0xFFFFF83A,
                0xFFFFF84A,
                0xFFFFF85F,
                0xFFFFF879,
                0xFFFFF899,
                0xFFFFF8C3,
                0xFFFFF8F7,
                0xFFFFF937,
                0xFFFFF987,
                0xFFFFF9E9,
                0xFFFFFA5F,
                0xFFFFFAEC,
                0xFFFFFB91,
                0xFFFFFC4E,
                0xFFFFFD23,
                0xFFFFFE0B,
                0xFFFFFF02,
                0x0,
                0xFE,
                0x1F5,
                0x2DD,
                0x3B2,
                0x46F,
                0x514,
                0x5A1,
                0x617,
                0x679,
                0x6C9,
                0x709,
                0x73D,
                0x767,
                0x787,
                0x7A1,
                0x7B6,
                0x7C6,
                0x7D2,
                0x7DC,
                0x7E4,
                0x7EA,
                0x7EF,
                0x7F3,
                0x7F5,
                0x7F8,
                0x7F9,
                0x7FB,
                0x7FC,
                0x7FD,
                0x7FD,
                0x7FE,
                0x7FE,
                0x7FE,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
    };
    #endif // (defined(TINYMIND_USE_TANH_21_11))
    #if (defined(TINYMIND_USE_TANH_22_10))
    const uint32_t TanhValuesTableQ22_10::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC01,
                0xFFFFFC02,
                0xFFFFFC02,
                0xFFFFFC02,
                0xFFFFFC03,
                0xFFFFFC04,
                0xFFFFFC04,
                0xFFFFFC06,
                0xFFFFFC07,
                0xFFFFFC09,
                0xFFFFFC0B,
                0xFFFFFC0E,
                0xFFFFFC12,
                0xFFFFFC17,
                0xFFFFFC1D,
                0xFFFFFC25,
                0xFFFFFC30,
                0xFFFFFC3D,
                0xFFFFFC4D,
                0xFFFFFC62,
                0xFFFFFC7C,
                0xFFFFFC9C,
                0xFFFFFCC4,
                0xFFFFFCF5,
                0xFFFFFD30,
                0xFFFFFD76,
                0xFFFFFDC9,
                0xFFFFFE27,
                0xFFFFFE92,
                0xFFFFFF06,
                0xFFFFFF81,
                0x0,
                0x7F,
                0xFA,
                0x16E,
                0x1D9,
                0x237,
                0x28A,
                0x2D0,
                0x30B,
                0x33C,
                0x364,
                0x384,
                0x39E,
                0x3B3,
                0x3C3,
                0x3D0,
                0x3DB,
                0x3E3,
                0x3E9,
                0x3EE,
                0x3F2,
                0x3F5,
                0x3F7,
                0x3F9,
                0x3FA,
                0x3FC,
                0x3FC,
                0x3FD,
                0x3FE,
                0x3FE,
                0x3FE,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
    };
    #endif // (defined(TINYMIND_USE_TANH_22_10))
    #if (defined(TINYMIND_USE_TANH_23_9))
    const uint32_t TanhValuesTableQ23_9::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE01,
                0xFFFFFE02,
                0xFFFFFE02,
                0xFFFFFE02,
                0xFFFFFE03,
                0xFFFFFE04,
                0xFFFFFE05,
                0xFFFFFE06,
                0xFFFFFE07,
                0xFFFFFE09,
                0xFFFFFE0C,
                0xFFFFFE0F,
                0xFFFFFE13,
                0xFFFFFE18,
                0xFFFFFE1F,
                0xFFFFFE27,
                0xFFFFFE31,
                0xFFFFFE3E,
                0xFFFFFE4E,
                0xFFFFFE62,
                0xFFFFFE7B,
                0xFFFFFE98,
                0xFFFFFEBB,
                0xFFFFFEE5,
                0xFFFFFF14,
                0xFFFFFF49,
                0xFFFFFF83,
                0xFFFFFFC1,
                0x0,
                0x3F,
                0x7D,
                0xB7,
                0xEC,
                0x11B,
                0x145,
                0x168,
                0x185,
                0x19E,
                0x1B2,
                0x1C2,
                0x1CF,
                0x1D9,
                0x1E1,
                0x1E8,
                0x1ED,
                0x1F1,
                0x1F4,
                0x1F7,
                0x1F9,
                0x1FA,
                0x1FB,
                0x1FC,
                0x1FD,
                0x1FE,
                0x1FE,
                0x1FE,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
    };
    #endif // (defined(TINYMIND_USE_TANH_23_9))
    #if (defined(TINYMIND_USE_TANH_24_8))
    const uint32_t TanhValuesTableQ24_8::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF01,
                0xFFFFFF02,
                0xFFFFFF02,
                0xFFFFFF03,
                0xFFFFFF03,
                0xFFFFFF04,
                0xFFFFFF05,
                0xFFFFFF06,
                0xFFFFFF08,
                0xFFFFFF0A,
                0xFFFFFF0C,
                0xFFFFFF10,
                0xFFFFFF14,
                0xFFFFFF19,
                0xFFFFFF1F,
                0xFFFFFF27,
                0xFFFFFF31,
                0xFFFFFF3E,
                0xFFFFFF4C,
                0xFFFFFF5E,
                0xFFFFFF73,
                0xFFFFFF8A,
                0xFFFFFFA5,
                0xFFFFFFC2,
                0xFFFFFFE1,
                0x0,
                0x1F,
                0x3E,
                0x5B,
                0x76,
                0x8D,
                0xA2,
                0xB4,
                0xC2,
                0xCF,
                0xD9,
                0xE1,
                0xE7,
                0xEC,
                0xF0,
                0xF4,
                0xF6,
                0xF8,
                0xFA,
                0xFB,
                0xFC,
                0xFD,
                0xFD,
                0xFE,
                0xFE,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_24_8))
    #if (defined(TINYMIND_USE_TANH_25_7))
    const uint32_t TanhValuesTableQ25_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF81,
                0xFFFFFF82,
                0xFFFFFF82,
                0xFFFFFF82,
                0xFFFFFF83,
                0xFFFFFF83,
                0xFFFFFF84,
                0xFFFFFF85,
                0xFFFFFF86,
                0xFFFFFF88,
                0xFFFFFF8A,
                0xFFFFFF8D,
                0xFFFFFF90,
                0xFFFFFF94,
                0xFFFFFF99,
                0xFFFFFF9F,
                0xFFFFFFA6,
                0xFFFFFFAF,
                0xFFFFFFBA,
                0xFFFFFFC5,
                0xFFFFFFD3,
                0xFFFFFFE1,
                0xFFFFFFF1,
                0x0,
                0xF,
                0x1F,
                0x2D,
                0x3B,
                0x46,
                0x51,
                0x5A,
                0x61,
                0x67,
                0x6C,
                0x70,
                0x73,
                0x76,
                0x78,
                0x7A,
                0x7B,
                0x7C,
                0x7D,
                0x7D,
                0x7E,
                0x7E,
                0x7E,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
    };
    #endif // (defined(TINYMIND_USE_TANH_25_7))
    #if (defined(TINYMIND_USE_TANH_26_6))
    const uint32_t TanhValuesTableQ26_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC1,
                0xFFFFFFC2,
                0xFFFFFFC2,
                0xFFFFFFC2,
                0xFFFFFFC3,
                0xFFFFFFC3,
                0xFFFFFFC4,
                0xFFFFFFC5,
                0xFFFFFFC7,
                0xFFFFFFC8,
                0xFFFFFFCA,
                0xFFFFFFCD,
                0xFFFFFFD0,
                0xFFFFFFD3,
                0xFFFFFFD8,
                0xFFFFFFDD,
                0xFFFFFFE3,
                0xFFFFFFEA,
                0xFFFFFFF1,
                0xFFFFFFF9,
                0x0,
                0x7,
                0xF,
                0x16,
                0x1D,
                0x23,
                0x28,
                0x2D,
                0x30,
                0x33,
                0x36,
                0x38,
                0x39,
                0x3B,
                0x3C,
                0x3D,
                0x3D,
                0x3E,
                0x3E,
                0x3E,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
    };
    #endif // (defined(TINYMIND_USE_TANH_26_6))
    #if (defined(TINYMIND_USE_TANH_27_5))
    const uint32_t TanhValuesTableQ27_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE1,
                0xFFFFFFE2,
                0xFFFFFFE2,
                0xFFFFFFE2,
                0xFFFFFFE3,
                0xFFFFFFE4,
                0xFFFFFFE4,
                0xFFFFFFE5,
                0xFFFFFFE7,
                0xFFFFFFE8,
                0xFFFFFFEA,
                0xFFFFFFEC,
                0xFFFFFFEF,
                0xFFFFFFF2,
                0xFFFFFFF5,
                0xFFFFFFF9,
                0xFFFFFFFD,
                0x0,
                0x3,
                0x7,
                0xB,
                0xE,
                0x11,
                0x14,
                0x16,
                0x18,
                0x19,
                0x1B,
                0x1C,
                0x1C,
                0x1D,
                0x1E,
                0x1E,
                0x1E,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
    };
    #endif // (defined(TINYMIND_USE_TANH_27_5))
    #if (defined(TINYMIND_USE_TANH_28_4))
    const uint32_t TanhValuesTableQ28_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF1,
                0xFFFFFFF2,
                0xFFFFFFF2,
                0xFFFFFFF2,
                0xFFFFFFF3,
                0xFFFFFFF4,
                0xFFFFFFF4,
                0xFFFFFFF5,
                0xFFFFFFF6,
                0xFFFFFFF8,
                0xFFFFFFF9,
                0xFFFFFFFB,
                0xFFFFFFFD,
                0xFFFFFFFF,
                0x0,
                0x1,
                0x3,
                0x5,
                0x7,
                0x8,
                0xA,
                0xB,
                0xC,
                0xC,
                0xD,
                0xE,
                0xE,
                0xE,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
    };
    #endif // (defined(TINYMIND_USE_TANH_28_4))
    #if (defined(TINYMIND_USE_TANH_29_3))
    const uint32_t TanhValuesTableQ29_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFF9,
                0xFFFFFFFA,
                0xFFFFFFFA,
                0xFFFFFFFA,
                0xFFFFFFFB,
                0xFFFFFFFB,
                0xFFFFFFFC,
                0xFFFFFFFD,
                0xFFFFFFFE,
                0xFFFFFFFF,
                0x0,
                0x0,
                0x0,
                0x1,
                0x2,
                0x3,
                0x4,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
    };
    #endif // (defined(TINYMIND_USE_TANH_29_3))
    #if (defined(TINYMIND_USE_TANH_30_2))
    const uint32_t TanhValuesTableQ30_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFD,
                0xFFFFFFFE,
                0xFFFFFFFE,
                0xFFFFFFFE,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
    };
    #endif // (defined(TINYMIND_USE_TANH_30_2))
    #if (defined(TINYMIND_USE_TANH_31_1))
    const uint32_t TanhValuesTableQ31_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
    };
    #endif // (defined(TINYMIND_USE_TANH_31_1))
    #if (defined(TINYMIND_USE_TANH_1_63))
    const uint64_t TanhValuesTableQ1_63::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x80006715076B1000,
                0x8000845C1FF2BC00,
                0x8000A9F3FADF6C00,
                0x8000DA3930FE2C00,
                0x800118340F85BC00,
                0x800167C95A255800,
                0x8001CDF8E48F3000,
                0x8002512DF0CE1C00,
                0x8002F9A65C83BC00,
                0x8003D1F714646800,
                0x8004E7B619717000,
                0x80064C54BB4C8C00,
                0x80081637AB19F400,
                0x800A621E612A0400,
                0x800D54F037C66800,
                0x80111E0BE0E88400,
                0x8015FA3DD7D2F800,
                0x801C378C95567400,
                0x80243A162AE23800,
                0x802E824B27B31400,
                0x803BB4E715BE2400,
                0x804CA520573B6000,
                0x806261A8B2B18000,
                0x807E453E5DF7B800,
                0x80A20BBB97D40000,
                0x80CFECC90C8ED000,
                0x810ABD9461470800,
                0x81561B2D22850C00,
                0x81B69F67D638F800,
                0x8232225355749400,
                0x82D00A4F480B8800,
                0x8399AC8236C0E000,
                0x849ABE8790F0B000,
                0x85E1D84C4FC89800,
                0x878101A0732B6400,
                0x898E4140678E2000,
                0x8C241A1E482A2400,
                0x8F61D6B56C6E2000,
                0x936B711253484800,
                0x9868D2916ECA5C00,
                0x9E84152BAC31B000,
                0xA5E66BD1CF7FAC00,
                0xAEB3706AB4376000,
                0xB902E05511C1AC00,
                0xC4D9585152EA1A00,
                0xD2215842E6E0A000,
                0xE0A6815965E37A00,
                0xF015336A1DA3E580,
                0x0,
                0xFEACC95E25C1A80,
                0x1F597EA69A1C8600,
                0x2DDEA7BD191F6000,
                0x3B26A7AEAD15E600,
                0x46FD1FAAEE3E5400,
                0x514C8F954BC8A000,
                0x5A19942E30805400,
                0x617BEAD453CE5000,
                0x67972D6E9135A400,
                0x6C948EEDACB7B800,
                0x709E294A9391E000,
                0x73DBE5E1B7D5DC00,
                0x7671BEBF9871E000,
                0x787EFE5F8CD49C00,
                0x7A1E27B3B0376800,
                0x7B6541786F0F5000,
                0x7C66537DC93F2000,
                0x7D2FF5B0B7F47800,
                0x7DCDDDACAA8B6C00,
                0x7E49609829C70800,
                0x7EA9E4D2DD7AF400,
                0x7EF5426B9EB8F800,
                0x7F301336F3713000,
                0x7F5DF444682C0000,
                0x7F81BAC1A2084800,
                0x7F9D9E574D4E8000,
                0x7FB35ADFA8C4A000,
                0x7FC44B18EA41DC00,
                0x7FD17DB4D84CEC00,
                0x7FDBC5E9D51DC800,
                0x7FE3C8736AA98C00,
                0x7FEA05C2282D0800,
                0x7FEEE1F41F177C00,
                0x7FF2AB0FC8399800,
                0x7FF59DE19ED5FC00,
                0x7FF7E9C854E60C00,
                0x7FF9B3AB44B37400,
                0x7FFB1849E68E9000,
                0x7FFC2E08EB9B9800,
                0x7FFD0659A37C4400,
                0x7FFDAED20F31E400,
                0x7FFE32071B70D000,
                0x7FFE9836A5DAA800,
                0x7FFEE7CBF07A4400,
                0x7FFF25C6CF01D400,
                0x7FFF560C05209400,
                0x7FFF7BA3E00D4400,
    };
    #endif // (defined(TINYMIND_USE_TANH_1_63))
    #if (defined(TINYMIND_USE_TANH_2_62))
    const uint64_t TanhValuesTableQ2_62::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xC000338A83B58800,
                0xC000422E0FF95E00,
                0xC00054F9FD6FB600,
                0xC0006D1C987F1600,
                0xC0008C1A07C2DE00,
                0xC000B3E4AD12AC00,
                0xC000E6FC72479800,
                0xC0012896F8670E00,
                0xC0017CD32E41DE00,
                0xC001E8FB8A323400,
                0xC00273DB0CB8B800,
                0xC003262A5DA64600,
                0xC0040B1BD58CFA00,
                0xC005310F30950200,
                0xC006AA781BE33400,
                0xC0088F05F0744200,
                0xC00AFD1EEBE97C00,
                0xC00E1BC64AAB3A00,
                0xC0121D0B15711C00,
                0xC017412593D98A00,
                0xC01DDA738ADF1200,
                0xC02652902B9DB000,
                0xC03130D45958C000,
                0xC03F229F2EFBDC00,
                0xC05105DDCBEA0000,
                0xC067F66486476800,
                0xC0855ECA30A38400,
                0xC0AB0D9691428600,
                0xC0DB4FB3EB1C7C00,
                0xC1191129AABA4A00,
                0xC1680527A405C400,
                0xC1CCD6411B607000,
                0xC24D5F43C8785800,
                0xC2F0EC2627E44C00,
                0xC3C080D03995B200,
                0xC4C720A033C71000,
                0xC6120D0F24151200,
                0xC7B0EB5AB6371000,
                0xC9B5B88929A42400,
                0xCC346948B7652E00,
                0xCF420A95D618D800,
                0xD2F335E8E7BFD600,
                0xD759B8355A1BB000,
                0xDC81702A88E0D600,
                0xE26CAC28A9750D00,
                0xE910AC2173705000,
                0xF05340ACB2F1BD00,
                0xF80A99B50ED1F2C0,
                0x0,
                0x7F5664AF12E0D40,
                0xFACBF534D0E4300,
                0x16EF53DE8C8FB000,
                0x1D9353D7568AF300,
                0x237E8FD5771F2A00,
                0x28A647CAA5E45000,
                0x2D0CCA1718402A00,
                0x30BDF56A29E72800,
                0x33CB96B7489AD200,
                0x364A4776D65BDC00,
                0x384F14A549C8F000,
                0x39EDF2F0DBEAEE00,
                0x3B38DF5FCC38F000,
                0x3C3F7F2FC66A4E00,
                0x3D0F13D9D81BB400,
                0x3DB2A0BC3787A800,
                0x3E3329BEE49F9000,
                0x3E97FAD85BFA3C00,
                0x3EE6EED65545B600,
                0x3F24B04C14E38400,
                0x3F54F2696EBD7A00,
                0x3F7AA135CF5C7C00,
                0x3F98099B79B89800,
                0x3FAEFA2234160000,
                0x3FC0DD60D1042400,
                0x3FCECF2BA6A74000,
                0x3FD9AD6FD4625000,
                0x3FE2258C7520EE00,
                0x3FE8BEDA6C267600,
                0x3FEDE2F4EA8EE400,
                0x3FF1E439B554C600,
                0x3FF502E114168400,
                0x3FF770FA0F8BBE00,
                0x3FF95587E41CCC00,
                0x3FFACEF0CF6AFE00,
                0x3FFBF4E42A730600,
                0x3FFCD9D5A259BA00,
                0x3FFD8C24F3474800,
                0x3FFE170475CDCC00,
                0x3FFE832CD1BE2200,
                0x3FFED7690798F200,
                0x3FFF19038DB86800,
                0x3FFF4C1B52ED5400,
                0x3FFF73E5F83D2200,
                0x3FFF92E36780EA00,
                0x3FFFAB0602904A00,
                0x3FFFBDD1F006A200,
    };
    #endif // (defined(TINYMIND_USE_TANH_2_62))
    #if (defined(TINYMIND_USE_TANH_3_61))
    const uint64_t TanhValuesTableQ3_61::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xE00019C541DAC400,
                0xE000211707FCAF00,
                0xE0002A7CFEB7DB00,
                0xE000368E4C3F8B00,
                0xE000460D03E16F00,
                0xE00059F256895600,
                0xE000737E3923CC00,
                0xE000944B7C338700,
                0xE000BE699720EF00,
                0xE000F47DC5191A00,
                0xE00139ED865C5C00,
                0xE00193152ED32300,
                0xE002058DEAC67D00,
                0xE0029887984A8100,
                0xE003553C0DF19A00,
                0xE0044782F83A2100,
                0xE0057E8F75F4BE00,
                0xE0070DE325559D00,
                0xE0090E858AB88E00,
                0xE00BA092C9ECC500,
                0xE00EED39C56F8900,
                0xE013294815CED800,
                0xE018986A2CAC6000,
                0xE01F914F977DEE00,
                0xE02882EEE5F50000,
                0xE033FB324323B400,
                0xE042AF651851C200,
                0xE05586CB48A14300,
                0xE06DA7D9F58E3E00,
                0xE08C8894D55D2500,
                0xE0B40293D202E200,
                0xE0E66B208DB03800,
                0xE126AFA1E43C2C00,
                0xE178761313F22600,
                0xE1E040681CCAD900,
                0xE263905019E38800,
                0xE3090687920A8900,
                0xE3D875AD5B1B8800,
                0xE4DADC4494D21200,
                0xE61A34A45BB29700,
                0xE7A1054AEB0C6C00,
                0xE9799AF473DFEB00,
                0xEBACDC1AAD0DD800,
                0xEE40B81544706B00,
                0xF136561454BA8680,
                0xF4885610B9B82800,
                0xF829A0565978DE80,
                0xFC054CDA8768F960,
                0x0,
                0x3FAB325789706A0,
                0x7D65FA9A6872180,
                0xB77A9EF4647D800,
                0xEC9A9EBAB457980,
                0x11BF47EABB8F9500,
                0x145323E552F22800,
                0x1686650B8C201500,
                0x185EFAB514F39400,
                0x19E5CB5BA44D6900,
                0x1B2523BB6B2DEE00,
                0x1C278A52A4E47800,
                0x1CF6F9786DF57700,
                0x1D9C6FAFE61C7800,
                0x1E1FBF97E3352700,
                0x1E8789ECEC0DDA00,
                0x1ED9505E1BC3D400,
                0x1F1994DF724FC800,
                0x1F4BFD6C2DFD1E00,
                0x1F73776B2AA2DB00,
                0x1F9258260A71C200,
                0x1FAA7934B75EBD00,
                0x1FBD509AE7AE3E00,
                0x1FCC04CDBCDC4C00,
                0x1FD77D111A0B0000,
                0x1FE06EB068821200,
                0x1FE76795D353A000,
                0x1FECD6B7EA312800,
                0x1FF112C63A907700,
                0x1FF45F6D36133B00,
                0x1FF6F17A75477200,
                0x1FF8F21CDAAA6300,
                0x1FFA81708A0B4200,
                0x1FFBB87D07C5DF00,
                0x1FFCAAC3F20E6600,
                0x1FFD677867B57F00,
                0x1FFDFA7215398300,
                0x1FFE6CEAD12CDD00,
                0x1FFEC61279A3A400,
                0x1FFF0B823AE6E600,
                0x1FFF419668DF1100,
                0x1FFF6BB483CC7900,
                0x1FFF8C81C6DC3400,
                0x1FFFA60DA976AA00,
                0x1FFFB9F2FC1E9100,
                0x1FFFC971B3C07500,
                0x1FFFD58301482500,
                0x1FFFDEE8F8035100,
    };
    #endif // (defined(TINYMIND_USE_TANH_3_61))
    #if (defined(TINYMIND_USE_TANH_4_60))
    const uint64_t TanhValuesTableQ4_60::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xF0000CE2A0ED6200,
                0xF000108B83FE5780,
                0xF000153E7F5BED80,
                0xF0001B47261FC580,
                0xF000230681F0B780,
                0xF0002CF92B44AB00,
                0xF00039BF1C91E600,
                0xF0004A25BE19C380,
                0xF0005F34CB907780,
                0xF0007A3EE28C8D00,
                0xF0009CF6C32E2E00,
                0xF000C98A97699180,
                0xF00102C6F5633E80,
                0xF0014C43CC254080,
                0xF001AA9E06F8CD00,
                0xF00223C17C1D1080,
                0xF002BF47BAFA5F00,
                0xF00386F192AACE80,
                0xF0048742C55C4700,
                0xF005D04964F66280,
                0xF007769CE2B7C480,
                0xF00994A40AE76C00,
                0xF00C4C3516563000,
                0xF00FC8A7CBBEF700,
                0xF014417772FA8000,
                0xF019FD992191DA00,
                0xF02157B28C28E100,
                0xF02AC365A450A180,
                0xF036D3ECFAC71F00,
                0xF046444A6AAE9280,
                0xF05A0149E9017100,
                0xF073359046D81C00,
                0xF09357D0F21E1600,
                0xF0BC3B0989F91300,
                0xF0F020340E656C80,
                0xF131C8280CF1C400,
                0xF1848343C9054480,
                0xF1EC3AD6AD8DC400,
                0xF26D6E224A690900,
                0xF30D1A522DD94B80,
                0xF3D082A575863600,
                0xF4BCCD7A39EFF580,
                0xF5D66E0D5686EC00,
                0xF7205C0AA2383580,
                0xF89B2B0A2A5D4340,
                0xFA442B085CDC1400,
                0xFC14D02B2CBC6F40,
                0xFE02A66D43B47CB0,
                0x0,
                0x1FD5992BC4B8350,
                0x3EB2FD4D34390C0,
                0x5BBD4F7A323EC00,
                0x764D4F5D5A2BCC0,
                0x8DFA3F55DC7CA80,
                0xA2991F2A9791400,
                0xB433285C6100A80,
                0xC2F7D5A8A79CA00,
                0xCF2E5ADD226B480,
                0xD9291DDB596F700,
                0xE13C52952723C00,
                0xE7B7CBC36FABB80,
                0xECE37D7F30E3C00,
                0xF0FDFCBF19A9380,
                0xF43C4F67606ED00,
                0xF6CA82F0DE1EA00,
                0xF8CCA6FB927E400,
                0xFA5FEB616FE8F00,
                0xFB9BBB595516D80,
                0xFC92C130538E100,
                0xFD53C9A5BAF5E80,
                0xFDEA84D73D71F00,
                0xFE60266DE6E2600,
                0xFEBBE888D058000,
                0xFF0375834410900,
                0xFF3B3CAE9A9D000,
                0xFF66B5BF5189400,
                0xFF889631D483B80,
                0xFFA2FB69B099D80,
                0xFFB78BD3AA3B900,
                0xFFC790E6D553180,
                0xFFD40B84505A100,
                0xFFDDC3E83E2EF80,
                0xFFE5561F9073300,
                0xFFEB3BC33DABF80,
                0xFFEFD390A9CC180,
                0xFFF367568966E80,
                0xFFF63093CD1D200,
                0xFFF85C11D737300,
                0xFFFA0CB346F8880,
                0xFFFB5DA41E63C80,
                0xFFFC640E36E1A00,
                0xFFFD306D4BB5500,
                0xFFFDCF97E0F4880,
                0xFFFE4B8D9E03A80,
                0xFFFEAC180A41280,
                0xFFFEF747C01A880,
    };
    #endif // (defined(TINYMIND_USE_TANH_4_60))
    #if (defined(TINYMIND_USE_TANH_5_59))
    const uint64_t TanhValuesTableQ5_59::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xF80006715076B100,
                0xF8000845C1FF2BC0,
                0xF8000A9F3FADF6C0,
                0xF8000DA3930FE2C0,
                0xF800118340F85BC0,
                0xF800167C95A25580,
                0xF8001CDF8E48F300,
                0xF8002512DF0CE1C0,
                0xF8002F9A65C83BC0,
                0xF8003D1F71464680,
                0xF8004E7B61971700,
                0xF80064C54BB4C8C0,
                0xF80081637AB19F40,
                0xF800A621E612A040,
                0xF800D54F037C6680,
                0xF80111E0BE0E8840,
                0xF8015FA3DD7D2F80,
                0xF801C378C9556740,
                0xF80243A162AE2380,
                0xF802E824B27B3140,
                0xF803BB4E715BE240,
                0xF804CA520573B600,
                0xF806261A8B2B1800,
                0xF807E453E5DF7B80,
                0xF80A20BBB97D4000,
                0xF80CFECC90C8ED00,
                0xF810ABD946147080,
                0xF81561B2D22850C0,
                0xF81B69F67D638F80,
                0xF823222535574940,
                0xF82D00A4F480B880,
                0xF8399AC8236C0E00,
                0xF849ABE8790F0B00,
                0xF85E1D84C4FC8980,
                0xF878101A0732B640,
                0xF898E4140678E200,
                0xF8C241A1E482A240,
                0xF8F61D6B56C6E200,
                0xF936B71125348480,
                0xF9868D2916ECA5C0,
                0xF9E84152BAC31B00,
                0xFA5E66BD1CF7FAC0,
                0xFAEB3706AB437600,
                0xFB902E05511C1AC0,
                0xFC4D9585152EA1A0,
                0xFD2215842E6E0A00,
                0xFE0A6815965E37A0,
                0xFF015336A1DA3E58,
                0x0,
                0xFEACC95E25C1A8,
                0x1F597EA69A1C860,
                0x2DDEA7BD191F600,
                0x3B26A7AEAD15E60,
                0x46FD1FAAEE3E540,
                0x514C8F954BC8A00,
                0x5A19942E3080540,
                0x617BEAD453CE500,
                0x67972D6E9135A40,
                0x6C948EEDACB7B80,
                0x709E294A9391E00,
                0x73DBE5E1B7D5DC0,
                0x7671BEBF9871E00,
                0x787EFE5F8CD49C0,
                0x7A1E27B3B037680,
                0x7B6541786F0F500,
                0x7C66537DC93F200,
                0x7D2FF5B0B7F4780,
                0x7DCDDDACAA8B6C0,
                0x7E49609829C7080,
                0x7EA9E4D2DD7AF40,
                0x7EF5426B9EB8F80,
                0x7F301336F371300,
                0x7F5DF444682C000,
                0x7F81BAC1A208480,
                0x7F9D9E574D4E800,
                0x7FB35ADFA8C4A00,
                0x7FC44B18EA41DC0,
                0x7FD17DB4D84CEC0,
                0x7FDBC5E9D51DC80,
                0x7FE3C8736AA98C0,
                0x7FEA05C2282D080,
                0x7FEEE1F41F177C0,
                0x7FF2AB0FC839980,
                0x7FF59DE19ED5FC0,
                0x7FF7E9C854E60C0,
                0x7FF9B3AB44B3740,
                0x7FFB1849E68E900,
                0x7FFC2E08EB9B980,
                0x7FFD0659A37C440,
                0x7FFDAED20F31E40,
                0x7FFE32071B70D00,
                0x7FFE9836A5DAA80,
                0x7FFEE7CBF07A440,
                0x7FFF25C6CF01D40,
                0x7FFF560C0520940,
                0x7FFF7BA3E00D440,
    };
    #endif // (defined(TINYMIND_USE_TANH_5_59))
    #if (defined(TINYMIND_USE_TANH_6_58))
    const uint64_t TanhValuesTableQ6_58::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFC000338A83B5880,
                0xFC000422E0FF95E0,
                0xFC00054F9FD6FB60,
                0xFC0006D1C987F160,
                0xFC0008C1A07C2DE0,
                0xFC000B3E4AD12AC0,
                0xFC000E6FC7247980,
                0xFC0012896F8670E0,
                0xFC0017CD32E41DE0,
                0xFC001E8FB8A32340,
                0xFC00273DB0CB8B80,
                0xFC003262A5DA6460,
                0xFC0040B1BD58CFA0,
                0xFC005310F3095020,
                0xFC006AA781BE3340,
                0xFC0088F05F074420,
                0xFC00AFD1EEBE97C0,
                0xFC00E1BC64AAB3A0,
                0xFC0121D0B15711C0,
                0xFC017412593D98A0,
                0xFC01DDA738ADF120,
                0xFC02652902B9DB00,
                0xFC03130D45958C00,
                0xFC03F229F2EFBDC0,
                0xFC05105DDCBEA000,
                0xFC067F6648647680,
                0xFC0855ECA30A3840,
                0xFC0AB0D969142860,
                0xFC0DB4FB3EB1C7C0,
                0xFC1191129AABA4A0,
                0xFC1680527A405C40,
                0xFC1CCD6411B60700,
                0xFC24D5F43C878580,
                0xFC2F0EC2627E44C0,
                0xFC3C080D03995B20,
                0xFC4C720A033C7100,
                0xFC6120D0F2415120,
                0xFC7B0EB5AB637100,
                0xFC9B5B88929A4240,
                0xFCC346948B7652E0,
                0xFCF420A95D618D80,
                0xFD2F335E8E7BFD60,
                0xFD759B8355A1BB00,
                0xFDC81702A88E0D60,
                0xFE26CAC28A9750D0,
                0xFE910AC217370500,
                0xFF05340ACB2F1BD0,
                0xFF80A99B50ED1F2C,
                0x0,
                0x7F5664AF12E0D4,
                0xFACBF534D0E430,
                0x16EF53DE8C8FB00,
                0x1D9353D7568AF30,
                0x237E8FD5771F2A0,
                0x28A647CAA5E4500,
                0x2D0CCA1718402A0,
                0x30BDF56A29E7280,
                0x33CB96B7489AD20,
                0x364A4776D65BDC0,
                0x384F14A549C8F00,
                0x39EDF2F0DBEAEE0,
                0x3B38DF5FCC38F00,
                0x3C3F7F2FC66A4E0,
                0x3D0F13D9D81BB40,
                0x3DB2A0BC3787A80,
                0x3E3329BEE49F900,
                0x3E97FAD85BFA3C0,
                0x3EE6EED65545B60,
                0x3F24B04C14E3840,
                0x3F54F2696EBD7A0,
                0x3F7AA135CF5C7C0,
                0x3F98099B79B8980,
                0x3FAEFA223416000,
                0x3FC0DD60D104240,
                0x3FCECF2BA6A7400,
                0x3FD9AD6FD462500,
                0x3FE2258C7520EE0,
                0x3FE8BEDA6C26760,
                0x3FEDE2F4EA8EE40,
                0x3FF1E439B554C60,
                0x3FF502E11416840,
                0x3FF770FA0F8BBE0,
                0x3FF95587E41CCC0,
                0x3FFACEF0CF6AFE0,
                0x3FFBF4E42A73060,
                0x3FFCD9D5A259BA0,
                0x3FFD8C24F347480,
                0x3FFE170475CDCC0,
                0x3FFE832CD1BE220,
                0x3FFED7690798F20,
                0x3FFF19038DB8680,
                0x3FFF4C1B52ED540,
                0x3FFF73E5F83D220,
                0x3FFF92E36780EA0,
                0x3FFFAB0602904A0,
                0x3FFFBDD1F006A20,
    };
    #endif // (defined(TINYMIND_USE_TANH_6_58))
    #if (defined(TINYMIND_USE_TANH_7_57))
    const uint64_t TanhValuesTableQ7_57::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFE00019C541DAC40,
                0xFE000211707FCAF0,
                0xFE0002A7CFEB7DB0,
                0xFE000368E4C3F8B0,
                0xFE000460D03E16F0,
                0xFE00059F25689560,
                0xFE000737E3923CC0,
                0xFE000944B7C33870,
                0xFE000BE699720EF0,
                0xFE000F47DC5191A0,
                0xFE00139ED865C5C0,
                0xFE00193152ED3230,
                0xFE002058DEAC67D0,
                0xFE0029887984A810,
                0xFE003553C0DF19A0,
                0xFE0044782F83A210,
                0xFE0057E8F75F4BE0,
                0xFE0070DE325559D0,
                0xFE0090E858AB88E0,
                0xFE00BA092C9ECC50,
                0xFE00EED39C56F890,
                0xFE013294815CED80,
                0xFE018986A2CAC600,
                0xFE01F914F977DEE0,
                0xFE02882EEE5F5000,
                0xFE033FB324323B40,
                0xFE042AF651851C20,
                0xFE05586CB48A1430,
                0xFE06DA7D9F58E3E0,
                0xFE08C8894D55D250,
                0xFE0B40293D202E20,
                0xFE0E66B208DB0380,
                0xFE126AFA1E43C2C0,
                0xFE178761313F2260,
                0xFE1E040681CCAD90,
                0xFE263905019E3880,
                0xFE3090687920A890,
                0xFE3D875AD5B1B880,
                0xFE4DADC4494D2120,
                0xFE61A34A45BB2970,
                0xFE7A1054AEB0C6C0,
                0xFE9799AF473DFEB0,
                0xFEBACDC1AAD0DD80,
                0xFEE40B81544706B0,
                0xFF136561454BA868,
                0xFF4885610B9B8280,
                0xFF829A0565978DE8,
                0xFFC054CDA8768F96,
                0x0,
                0x3FAB325789706A,
                0x7D65FA9A687218,
                0xB77A9EF4647D80,
                0xEC9A9EBAB45798,
                0x11BF47EABB8F950,
                0x145323E552F2280,
                0x1686650B8C20150,
                0x185EFAB514F3940,
                0x19E5CB5BA44D690,
                0x1B2523BB6B2DEE0,
                0x1C278A52A4E4780,
                0x1CF6F9786DF5770,
                0x1D9C6FAFE61C780,
                0x1E1FBF97E335270,
                0x1E8789ECEC0DDA0,
                0x1ED9505E1BC3D40,
                0x1F1994DF724FC80,
                0x1F4BFD6C2DFD1E0,
                0x1F73776B2AA2DB0,
                0x1F9258260A71C20,
                0x1FAA7934B75EBD0,
                0x1FBD509AE7AE3E0,
                0x1FCC04CDBCDC4C0,
                0x1FD77D111A0B000,
                0x1FE06EB06882120,
                0x1FE76795D353A00,
                0x1FECD6B7EA31280,
                0x1FF112C63A90770,
                0x1FF45F6D36133B0,
                0x1FF6F17A7547720,
                0x1FF8F21CDAAA630,
                0x1FFA81708A0B420,
                0x1FFBB87D07C5DF0,
                0x1FFCAAC3F20E660,
                0x1FFD677867B57F0,
                0x1FFDFA721539830,
                0x1FFE6CEAD12CDD0,
                0x1FFEC61279A3A40,
                0x1FFF0B823AE6E60,
                0x1FFF419668DF110,
                0x1FFF6BB483CC790,
                0x1FFF8C81C6DC340,
                0x1FFFA60DA976AA0,
                0x1FFFB9F2FC1E910,
                0x1FFFC971B3C0750,
                0x1FFFD5830148250,
                0x1FFFDEE8F803510,
    };
    #endif // (defined(TINYMIND_USE_TANH_7_57))
    #if (defined(TINYMIND_USE_TANH_8_56))
    const uint64_t TanhValuesTableQ8_56::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFF0000CE2A0ED620,
                0xFF000108B83FE578,
                0xFF000153E7F5BED8,
                0xFF0001B47261FC58,
                0xFF000230681F0B78,
                0xFF0002CF92B44AB0,
                0xFF00039BF1C91E60,
                0xFF0004A25BE19C38,
                0xFF0005F34CB90778,
                0xFF0007A3EE28C8D0,
                0xFF0009CF6C32E2E0,
                0xFF000C98A9769918,
                0xFF00102C6F5633E8,
                0xFF0014C43CC25408,
                0xFF001AA9E06F8CD0,
                0xFF00223C17C1D108,
                0xFF002BF47BAFA5F0,
                0xFF00386F192AACE8,
                0xFF0048742C55C470,
                0xFF005D04964F6628,
                0xFF007769CE2B7C48,
                0xFF00994A40AE76C0,
                0xFF00C4C351656300,
                0xFF00FC8A7CBBEF70,
                0xFF014417772FA800,
                0xFF019FD992191DA0,
                0xFF02157B28C28E10,
                0xFF02AC365A450A18,
                0xFF036D3ECFAC71F0,
                0xFF046444A6AAE928,
                0xFF05A0149E901710,
                0xFF073359046D81C0,
                0xFF09357D0F21E160,
                0xFF0BC3B0989F9130,
                0xFF0F020340E656C8,
                0xFF131C8280CF1C40,
                0xFF1848343C905448,
                0xFF1EC3AD6AD8DC40,
                0xFF26D6E224A69090,
                0xFF30D1A522DD94B8,
                0xFF3D082A57586360,
                0xFF4BCCD7A39EFF58,
                0xFF5D66E0D5686EC0,
                0xFF7205C0AA238358,
                0xFF89B2B0A2A5D434,
                0xFFA442B085CDC140,
                0xFFC14D02B2CBC6F4,
                0xFFE02A66D43B47CB,
                0x0,
                0x1FD5992BC4B835,
                0x3EB2FD4D34390C,
                0x5BBD4F7A323EC0,
                0x764D4F5D5A2BCC,
                0x8DFA3F55DC7CA8,
                0xA2991F2A979140,
                0xB433285C6100A8,
                0xC2F7D5A8A79CA0,
                0xCF2E5ADD226B48,
                0xD9291DDB596F70,
                0xE13C52952723C0,
                0xE7B7CBC36FABB8,
                0xECE37D7F30E3C0,
                0xF0FDFCBF19A938,
                0xF43C4F67606ED0,
                0xF6CA82F0DE1EA0,
                0xF8CCA6FB927E40,
                0xFA5FEB616FE8F0,
                0xFB9BBB595516D8,
                0xFC92C130538E10,
                0xFD53C9A5BAF5E8,
                0xFDEA84D73D71F0,
                0xFE60266DE6E260,
                0xFEBBE888D05800,
                0xFF037583441090,
                0xFF3B3CAE9A9D00,
                0xFF66B5BF518940,
                0xFF889631D483B8,
                0xFFA2FB69B099D8,
                0xFFB78BD3AA3B90,
                0xFFC790E6D55318,
                0xFFD40B84505A10,
                0xFFDDC3E83E2EF8,
                0xFFE5561F907330,
                0xFFEB3BC33DABF8,
                0xFFEFD390A9CC18,
                0xFFF367568966E8,
                0xFFF63093CD1D20,
                0xFFF85C11D73730,
                0xFFFA0CB346F888,
                0xFFFB5DA41E63C8,
                0xFFFC640E36E1A0,
                0xFFFD306D4BB550,
                0xFFFDCF97E0F488,
                0xFFFE4B8D9E03A8,
                0xFFFEAC180A4128,
                0xFFFEF747C01A88,
    };
    #endif // (defined(TINYMIND_USE_TANH_8_56))
    #if (defined(TINYMIND_USE_TANH_9_55))
    const uint64_t TanhValuesTableQ9_55::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFF80006715076B10,
                0xFF8000845C1FF2BC,
                0xFF8000A9F3FADF6C,
                0xFF8000DA3930FE2C,
                0xFF800118340F85BC,
                0xFF800167C95A2558,
                0xFF8001CDF8E48F30,
                0xFF8002512DF0CE1C,
                0xFF8002F9A65C83BC,
                0xFF8003D1F7146468,
                0xFF8004E7B6197170,
                0xFF80064C54BB4C8C,
                0xFF80081637AB19F4,
                0xFF800A621E612A04,
                0xFF800D54F037C668,
                0xFF80111E0BE0E884,
                0xFF8015FA3DD7D2F8,
                0xFF801C378C955674,
                0xFF80243A162AE238,
                0xFF802E824B27B314,
                0xFF803BB4E715BE24,
                0xFF804CA520573B60,
                0xFF806261A8B2B180,
                0xFF807E453E5DF7B8,
                0xFF80A20BBB97D400,
                0xFF80CFECC90C8ED0,
                0xFF810ABD94614708,
                0xFF81561B2D22850C,
                0xFF81B69F67D638F8,
                0xFF82322253557494,
                0xFF82D00A4F480B88,
                0xFF8399AC8236C0E0,
                0xFF849ABE8790F0B0,
                0xFF85E1D84C4FC898,
                0xFF878101A0732B64,
                0xFF898E4140678E20,
                0xFF8C241A1E482A24,
                0xFF8F61D6B56C6E20,
                0xFF936B7112534848,
                0xFF9868D2916ECA5C,
                0xFF9E84152BAC31B0,
                0xFFA5E66BD1CF7FAC,
                0xFFAEB3706AB43760,
                0xFFB902E05511C1AC,
                0xFFC4D9585152EA1A,
                0xFFD2215842E6E0A0,
                0xFFE0A6815965E37A,
                0xFFF015336A1DA3E6,
                0x0,
                0xFEACC95E25C1A,
                0x1F597EA69A1C86,
                0x2DDEA7BD191F60,
                0x3B26A7AEAD15E6,
                0x46FD1FAAEE3E54,
                0x514C8F954BC8A0,
                0x5A19942E308054,
                0x617BEAD453CE50,
                0x67972D6E9135A4,
                0x6C948EEDACB7B8,
                0x709E294A9391E0,
                0x73DBE5E1B7D5DC,
                0x7671BEBF9871E0,
                0x787EFE5F8CD49C,
                0x7A1E27B3B03768,
                0x7B6541786F0F50,
                0x7C66537DC93F20,
                0x7D2FF5B0B7F478,
                0x7DCDDDACAA8B6C,
                0x7E49609829C708,
                0x7EA9E4D2DD7AF4,
                0x7EF5426B9EB8F8,
                0x7F301336F37130,
                0x7F5DF444682C00,
                0x7F81BAC1A20848,
                0x7F9D9E574D4E80,
                0x7FB35ADFA8C4A0,
                0x7FC44B18EA41DC,
                0x7FD17DB4D84CEC,
                0x7FDBC5E9D51DC8,
                0x7FE3C8736AA98C,
                0x7FEA05C2282D08,
                0x7FEEE1F41F177C,
                0x7FF2AB0FC83998,
                0x7FF59DE19ED5FC,
                0x7FF7E9C854E60C,
                0x7FF9B3AB44B374,
                0x7FFB1849E68E90,
                0x7FFC2E08EB9B98,
                0x7FFD0659A37C44,
                0x7FFDAED20F31E4,
                0x7FFE32071B70D0,
                0x7FFE9836A5DAA8,
                0x7FFEE7CBF07A44,
                0x7FFF25C6CF01D4,
                0x7FFF560C052094,
                0x7FFF7BA3E00D44,
    };
    #endif // (defined(TINYMIND_USE_TANH_9_55))
    #if (defined(TINYMIND_USE_TANH_10_54))
    const uint64_t TanhValuesTableQ10_54::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFC000338A83B588,
                0xFFC000422E0FF95E,
                0xFFC00054F9FD6FB6,
                0xFFC0006D1C987F16,
                0xFFC0008C1A07C2DE,
                0xFFC000B3E4AD12AC,
                0xFFC000E6FC724798,
                0xFFC0012896F8670E,
                0xFFC0017CD32E41DE,
                0xFFC001E8FB8A3234,
                0xFFC00273DB0CB8B8,
                0xFFC003262A5DA646,
                0xFFC0040B1BD58CFA,
                0xFFC005310F309502,
                0xFFC006AA781BE334,
                0xFFC0088F05F07442,
                0xFFC00AFD1EEBE97C,
                0xFFC00E1BC64AAB3A,
                0xFFC0121D0B15711C,
                0xFFC017412593D98A,
                0xFFC01DDA738ADF12,
                0xFFC02652902B9DB0,
                0xFFC03130D45958C0,
                0xFFC03F229F2EFBDC,
                0xFFC05105DDCBEA00,
                0xFFC067F664864768,
                0xFFC0855ECA30A384,
                0xFFC0AB0D96914286,
                0xFFC0DB4FB3EB1C7C,
                0xFFC1191129AABA4A,
                0xFFC1680527A405C4,
                0xFFC1CCD6411B6070,
                0xFFC24D5F43C87858,
                0xFFC2F0EC2627E44C,
                0xFFC3C080D03995B2,
                0xFFC4C720A033C710,
                0xFFC6120D0F241512,
                0xFFC7B0EB5AB63710,
                0xFFC9B5B88929A424,
                0xFFCC346948B7652E,
                0xFFCF420A95D618D8,
                0xFFD2F335E8E7BFD6,
                0xFFD759B8355A1BB0,
                0xFFDC81702A88E0D6,
                0xFFE26CAC28A9750D,
                0xFFE910AC21737050,
                0xFFF05340ACB2F1BD,
                0xFFF80A99B50ED1F3,
                0x0,
                0x7F5664AF12E0D,
                0xFACBF534D0E43,
                0x16EF53DE8C8FB0,
                0x1D9353D7568AF3,
                0x237E8FD5771F2A,
                0x28A647CAA5E450,
                0x2D0CCA1718402A,
                0x30BDF56A29E728,
                0x33CB96B7489AD2,
                0x364A4776D65BDC,
                0x384F14A549C8F0,
                0x39EDF2F0DBEAEE,
                0x3B38DF5FCC38F0,
                0x3C3F7F2FC66A4E,
                0x3D0F13D9D81BB4,
                0x3DB2A0BC3787A8,
                0x3E3329BEE49F90,
                0x3E97FAD85BFA3C,
                0x3EE6EED65545B6,
                0x3F24B04C14E384,
                0x3F54F2696EBD7A,
                0x3F7AA135CF5C7C,
                0x3F98099B79B898,
                0x3FAEFA22341600,
                0x3FC0DD60D10424,
                0x3FCECF2BA6A740,
                0x3FD9AD6FD46250,
                0x3FE2258C7520EE,
                0x3FE8BEDA6C2676,
                0x3FEDE2F4EA8EE4,
                0x3FF1E439B554C6,
                0x3FF502E1141684,
                0x3FF770FA0F8BBE,
                0x3FF95587E41CCC,
                0x3FFACEF0CF6AFE,
                0x3FFBF4E42A7306,
                0x3FFCD9D5A259BA,
                0x3FFD8C24F34748,
                0x3FFE170475CDCC,
                0x3FFE832CD1BE22,
                0x3FFED7690798F2,
                0x3FFF19038DB868,
                0x3FFF4C1B52ED54,
                0x3FFF73E5F83D22,
                0x3FFF92E36780EA,
                0x3FFFAB0602904A,
                0x3FFFBDD1F006A2,
    };
    #endif // (defined(TINYMIND_USE_TANH_10_54))
    #if (defined(TINYMIND_USE_TANH_11_53))
    const uint64_t TanhValuesTableQ11_53::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFE00019C541DAC4,
                0xFFE000211707FCAF,
                0xFFE0002A7CFEB7DB,
                0xFFE000368E4C3F8B,
                0xFFE000460D03E16F,
                0xFFE00059F2568956,
                0xFFE000737E3923CC,
                0xFFE000944B7C3387,
                0xFFE000BE699720EF,
                0xFFE000F47DC5191A,
                0xFFE00139ED865C5C,
                0xFFE00193152ED323,
                0xFFE002058DEAC67D,
                0xFFE0029887984A81,
                0xFFE003553C0DF19A,
                0xFFE0044782F83A21,
                0xFFE0057E8F75F4BE,
                0xFFE0070DE325559D,
                0xFFE0090E858AB88E,
                0xFFE00BA092C9ECC5,
                0xFFE00EED39C56F89,
                0xFFE013294815CED8,
                0xFFE018986A2CAC60,
                0xFFE01F914F977DEE,
                0xFFE02882EEE5F500,
                0xFFE033FB324323B4,
                0xFFE042AF651851C2,
                0xFFE05586CB48A143,
                0xFFE06DA7D9F58E3E,
                0xFFE08C8894D55D25,
                0xFFE0B40293D202E2,
                0xFFE0E66B208DB038,
                0xFFE126AFA1E43C2C,
                0xFFE178761313F226,
                0xFFE1E040681CCAD9,
                0xFFE263905019E388,
                0xFFE3090687920A89,
                0xFFE3D875AD5B1B88,
                0xFFE4DADC4494D212,
                0xFFE61A34A45BB297,
                0xFFE7A1054AEB0C6C,
                0xFFE9799AF473DFEB,
                0xFFEBACDC1AAD0DD8,
                0xFFEE40B81544706B,
                0xFFF136561454BA87,
                0xFFF4885610B9B828,
                0xFFF829A0565978DF,
                0xFFFC054CDA8768FA,
                0x0,
                0x3FAB325789706,
                0x7D65FA9A68721,
                0xB77A9EF4647D8,
                0xEC9A9EBAB4579,
                0x11BF47EABB8F95,
                0x145323E552F228,
                0x1686650B8C2015,
                0x185EFAB514F394,
                0x19E5CB5BA44D69,
                0x1B2523BB6B2DEE,
                0x1C278A52A4E478,
                0x1CF6F9786DF577,
                0x1D9C6FAFE61C78,
                0x1E1FBF97E33527,
                0x1E8789ECEC0DDA,
                0x1ED9505E1BC3D4,
                0x1F1994DF724FC8,
                0x1F4BFD6C2DFD1E,
                0x1F73776B2AA2DB,
                0x1F9258260A71C2,
                0x1FAA7934B75EBD,
                0x1FBD509AE7AE3E,
                0x1FCC04CDBCDC4C,
                0x1FD77D111A0B00,
                0x1FE06EB0688212,
                0x1FE76795D353A0,
                0x1FECD6B7EA3128,
                0x1FF112C63A9077,
                0x1FF45F6D36133B,
                0x1FF6F17A754772,
                0x1FF8F21CDAAA63,
                0x1FFA81708A0B42,
                0x1FFBB87D07C5DF,
                0x1FFCAAC3F20E66,
                0x1FFD677867B57F,
                0x1FFDFA72153983,
                0x1FFE6CEAD12CDD,
                0x1FFEC61279A3A4,
                0x1FFF0B823AE6E6,
                0x1FFF419668DF11,
                0x1FFF6BB483CC79,
                0x1FFF8C81C6DC34,
                0x1FFFA60DA976AA,
                0x1FFFB9F2FC1E91,
                0x1FFFC971B3C075,
                0x1FFFD583014825,
                0x1FFFDEE8F80351,
    };
    #endif // (defined(TINYMIND_USE_TANH_11_53))
    #if (defined(TINYMIND_USE_TANH_12_52))
    const uint64_t TanhValuesTableQ12_52::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFF0000CE2A0ED62,
                0xFFF000108B83FE58,
                0xFFF000153E7F5BEE,
                0xFFF0001B47261FC6,
                0xFFF000230681F0B8,
                0xFFF0002CF92B44AB,
                0xFFF00039BF1C91E6,
                0xFFF0004A25BE19C4,
                0xFFF0005F34CB9078,
                0xFFF0007A3EE28C8D,
                0xFFF0009CF6C32E2E,
                0xFFF000C98A976992,
                0xFFF00102C6F5633F,
                0xFFF0014C43CC2541,
                0xFFF001AA9E06F8CD,
                0xFFF00223C17C1D11,
                0xFFF002BF47BAFA5F,
                0xFFF00386F192AACF,
                0xFFF0048742C55C47,
                0xFFF005D04964F663,
                0xFFF007769CE2B7C5,
                0xFFF00994A40AE76C,
                0xFFF00C4C35165630,
                0xFFF00FC8A7CBBEF7,
                0xFFF014417772FA80,
                0xFFF019FD992191DA,
                0xFFF02157B28C28E1,
                0xFFF02AC365A450A2,
                0xFFF036D3ECFAC71F,
                0xFFF046444A6AAE93,
                0xFFF05A0149E90171,
                0xFFF073359046D81C,
                0xFFF09357D0F21E16,
                0xFFF0BC3B0989F913,
                0xFFF0F020340E656D,
                0xFFF131C8280CF1C4,
                0xFFF1848343C90545,
                0xFFF1EC3AD6AD8DC4,
                0xFFF26D6E224A6909,
                0xFFF30D1A522DD94C,
                0xFFF3D082A5758636,
                0xFFF4BCCD7A39EFF6,
                0xFFF5D66E0D5686EC,
                0xFFF7205C0AA23836,
                0xFFF89B2B0A2A5D44,
                0xFFFA442B085CDC14,
                0xFFFC14D02B2CBC70,
                0xFFFE02A66D43B47D,
                0x0,
                0x1FD5992BC4B83,
                0x3EB2FD4D34390,
                0x5BBD4F7A323EC,
                0x764D4F5D5A2BC,
                0x8DFA3F55DC7CA,
                0xA2991F2A97914,
                0xB433285C6100A,
                0xC2F7D5A8A79CA,
                0xCF2E5ADD226B4,
                0xD9291DDB596F7,
                0xE13C52952723C,
                0xE7B7CBC36FABB,
                0xECE37D7F30E3C,
                0xF0FDFCBF19A93,
                0xF43C4F67606ED,
                0xF6CA82F0DE1EA,
                0xF8CCA6FB927E4,
                0xFA5FEB616FE8F,
                0xFB9BBB595516D,
                0xFC92C130538E1,
                0xFD53C9A5BAF5E,
                0xFDEA84D73D71F,
                0xFE60266DE6E26,
                0xFEBBE888D0580,
                0xFF03758344109,
                0xFF3B3CAE9A9D0,
                0xFF66B5BF51894,
                0xFF889631D483B,
                0xFFA2FB69B099D,
                0xFFB78BD3AA3B9,
                0xFFC790E6D5531,
                0xFFD40B84505A1,
                0xFFDDC3E83E2EF,
                0xFFE5561F90733,
                0xFFEB3BC33DABF,
                0xFFEFD390A9CC1,
                0xFFF367568966E,
                0xFFF63093CD1D2,
                0xFFF85C11D7373,
                0xFFFA0CB346F88,
                0xFFFB5DA41E63C,
                0xFFFC640E36E1A,
                0xFFFD306D4BB55,
                0xFFFDCF97E0F48,
                0xFFFE4B8D9E03A,
                0xFFFEAC180A412,
                0xFFFEF747C01A8,
    };
    #endif // (defined(TINYMIND_USE_TANH_12_52))
    #if (defined(TINYMIND_USE_TANH_13_51))
    const uint64_t TanhValuesTableQ13_51::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFF80006715076B1,
                0xFFF8000845C1FF2C,
                0xFFF8000A9F3FADF7,
                0xFFF8000DA3930FE3,
                0xFFF800118340F85C,
                0xFFF800167C95A256,
                0xFFF8001CDF8E48F3,
                0xFFF8002512DF0CE2,
                0xFFF8002F9A65C83C,
                0xFFF8003D1F714647,
                0xFFF8004E7B619717,
                0xFFF80064C54BB4C9,
                0xFFF80081637AB1A0,
                0xFFF800A621E612A1,
                0xFFF800D54F037C67,
                0xFFF80111E0BE0E89,
                0xFFF8015FA3DD7D30,
                0xFFF801C378C95568,
                0xFFF80243A162AE24,
                0xFFF802E824B27B32,
                0xFFF803BB4E715BE3,
                0xFFF804CA520573B6,
                0xFFF806261A8B2B18,
                0xFFF807E453E5DF7C,
                0xFFF80A20BBB97D40,
                0xFFF80CFECC90C8ED,
                0xFFF810ABD9461471,
                0xFFF81561B2D22851,
                0xFFF81B69F67D6390,
                0xFFF823222535574A,
                0xFFF82D00A4F480B9,
                0xFFF8399AC8236C0E,
                0xFFF849ABE8790F0B,
                0xFFF85E1D84C4FC8A,
                0xFFF878101A0732B7,
                0xFFF898E4140678E2,
                0xFFF8C241A1E482A3,
                0xFFF8F61D6B56C6E2,
                0xFFF936B711253485,
                0xFFF9868D2916ECA6,
                0xFFF9E84152BAC31B,
                0xFFFA5E66BD1CF7FB,
                0xFFFAEB3706AB4376,
                0xFFFB902E05511C1B,
                0xFFFC4D9585152EA2,
                0xFFFD2215842E6E0A,
                0xFFFE0A6815965E38,
                0xFFFF015336A1DA3F,
                0x0,
                0xFEACC95E25C1,
                0x1F597EA69A1C8,
                0x2DDEA7BD191F6,
                0x3B26A7AEAD15E,
                0x46FD1FAAEE3E5,
                0x514C8F954BC8A,
                0x5A19942E30805,
                0x617BEAD453CE5,
                0x67972D6E9135A,
                0x6C948EEDACB7B,
                0x709E294A9391E,
                0x73DBE5E1B7D5D,
                0x7671BEBF9871E,
                0x787EFE5F8CD49,
                0x7A1E27B3B0376,
                0x7B6541786F0F5,
                0x7C66537DC93F2,
                0x7D2FF5B0B7F47,
                0x7DCDDDACAA8B6,
                0x7E49609829C70,
                0x7EA9E4D2DD7AF,
                0x7EF5426B9EB8F,
                0x7F301336F3713,
                0x7F5DF444682C0,
                0x7F81BAC1A2084,
                0x7F9D9E574D4E8,
                0x7FB35ADFA8C4A,
                0x7FC44B18EA41D,
                0x7FD17DB4D84CE,
                0x7FDBC5E9D51DC,
                0x7FE3C8736AA98,
                0x7FEA05C2282D0,
                0x7FEEE1F41F177,
                0x7FF2AB0FC8399,
                0x7FF59DE19ED5F,
                0x7FF7E9C854E60,
                0x7FF9B3AB44B37,
                0x7FFB1849E68E9,
                0x7FFC2E08EB9B9,
                0x7FFD0659A37C4,
                0x7FFDAED20F31E,
                0x7FFE32071B70D,
                0x7FFE9836A5DAA,
                0x7FFEE7CBF07A4,
                0x7FFF25C6CF01D,
                0x7FFF560C05209,
                0x7FFF7BA3E00D4,
    };
    #endif // (defined(TINYMIND_USE_TANH_13_51))
    #if (defined(TINYMIND_USE_TANH_14_50))
    const uint64_t TanhValuesTableQ14_50::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFC000338A83B59,
                0xFFFC000422E0FF96,
                0xFFFC00054F9FD6FC,
                0xFFFC0006D1C987F2,
                0xFFFC0008C1A07C2E,
                0xFFFC000B3E4AD12B,
                0xFFFC000E6FC7247A,
                0xFFFC0012896F8671,
                0xFFFC0017CD32E41E,
                0xFFFC001E8FB8A324,
                0xFFFC00273DB0CB8C,
                0xFFFC003262A5DA65,
                0xFFFC0040B1BD58D0,
                0xFFFC005310F30951,
                0xFFFC006AA781BE34,
                0xFFFC0088F05F0745,
                0xFFFC00AFD1EEBE98,
                0xFFFC00E1BC64AAB4,
                0xFFFC0121D0B15712,
                0xFFFC017412593D99,
                0xFFFC01DDA738ADF2,
                0xFFFC02652902B9DB,
                0xFFFC03130D45958C,
                0xFFFC03F229F2EFBE,
                0xFFFC05105DDCBEA0,
                0xFFFC067F66486477,
                0xFFFC0855ECA30A39,
                0xFFFC0AB0D9691429,
                0xFFFC0DB4FB3EB1C8,
                0xFFFC1191129AABA5,
                0xFFFC1680527A405D,
                0xFFFC1CCD6411B607,
                0xFFFC24D5F43C8786,
                0xFFFC2F0EC2627E45,
                0xFFFC3C080D03995C,
                0xFFFC4C720A033C71,
                0xFFFC6120D0F24152,
                0xFFFC7B0EB5AB6371,
                0xFFFC9B5B88929A43,
                0xFFFCC346948B7653,
                0xFFFCF420A95D618E,
                0xFFFD2F335E8E7BFE,
                0xFFFD759B8355A1BB,
                0xFFFDC81702A88E0E,
                0xFFFE26CAC28A9751,
                0xFFFE910AC2173705,
                0xFFFF05340ACB2F1C,
                0xFFFF80A99B50ED20,
                0x0,
                0x7F5664AF12E0,
                0xFACBF534D0E4,
                0x16EF53DE8C8FB,
                0x1D9353D7568AF,
                0x237E8FD5771F2,
                0x28A647CAA5E45,
                0x2D0CCA1718402,
                0x30BDF56A29E72,
                0x33CB96B7489AD,
                0x364A4776D65BD,
                0x384F14A549C8F,
                0x39EDF2F0DBEAE,
                0x3B38DF5FCC38F,
                0x3C3F7F2FC66A4,
                0x3D0F13D9D81BB,
                0x3DB2A0BC3787A,
                0x3E3329BEE49F9,
                0x3E97FAD85BFA3,
                0x3EE6EED65545B,
                0x3F24B04C14E38,
                0x3F54F2696EBD7,
                0x3F7AA135CF5C7,
                0x3F98099B79B89,
                0x3FAEFA2234160,
                0x3FC0DD60D1042,
                0x3FCECF2BA6A74,
                0x3FD9AD6FD4625,
                0x3FE2258C7520E,
                0x3FE8BEDA6C267,
                0x3FEDE2F4EA8EE,
                0x3FF1E439B554C,
                0x3FF502E114168,
                0x3FF770FA0F8BB,
                0x3FF95587E41CC,
                0x3FFACEF0CF6AF,
                0x3FFBF4E42A730,
                0x3FFCD9D5A259B,
                0x3FFD8C24F3474,
                0x3FFE170475CDC,
                0x3FFE832CD1BE2,
                0x3FFED7690798F,
                0x3FFF19038DB86,
                0x3FFF4C1B52ED5,
                0x3FFF73E5F83D2,
                0x3FFF92E36780E,
                0x3FFFAB0602904,
                0x3FFFBDD1F006A,
    };
    #endif // (defined(TINYMIND_USE_TANH_14_50))
    #if (defined(TINYMIND_USE_TANH_15_49))
    const uint64_t TanhValuesTableQ15_49::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFE00019C541DAD,
                0xFFFE000211707FCB,
                0xFFFE0002A7CFEB7E,
                0xFFFE000368E4C3F9,
                0xFFFE000460D03E17,
                0xFFFE00059F256896,
                0xFFFE000737E3923D,
                0xFFFE000944B7C339,
                0xFFFE000BE699720F,
                0xFFFE000F47DC5192,
                0xFFFE00139ED865C6,
                0xFFFE00193152ED33,
                0xFFFE002058DEAC68,
                0xFFFE0029887984A9,
                0xFFFE003553C0DF1A,
                0xFFFE0044782F83A3,
                0xFFFE0057E8F75F4C,
                0xFFFE0070DE32555A,
                0xFFFE0090E858AB89,
                0xFFFE00BA092C9ECD,
                0xFFFE00EED39C56F9,
                0xFFFE013294815CEE,
                0xFFFE018986A2CAC6,
                0xFFFE01F914F977DF,
                0xFFFE02882EEE5F50,
                0xFFFE033FB324323C,
                0xFFFE042AF651851D,
                0xFFFE05586CB48A15,
                0xFFFE06DA7D9F58E4,
                0xFFFE08C8894D55D3,
                0xFFFE0B40293D202F,
                0xFFFE0E66B208DB04,
                0xFFFE126AFA1E43C3,
                0xFFFE178761313F23,
                0xFFFE1E040681CCAE,
                0xFFFE263905019E39,
                0xFFFE3090687920A9,
                0xFFFE3D875AD5B1B9,
                0xFFFE4DADC4494D22,
                0xFFFE61A34A45BB2A,
                0xFFFE7A1054AEB0C7,
                0xFFFE9799AF473DFF,
                0xFFFEBACDC1AAD0DE,
                0xFFFEE40B81544707,
                0xFFFF136561454BA9,
                0xFFFF4885610B9B83,
                0xFFFF829A0565978E,
                0xFFFFC054CDA87690,
                0x0,
                0x3FAB32578970,
                0x7D65FA9A6872,
                0xB77A9EF4647D,
                0xEC9A9EBAB457,
                0x11BF47EABB8F9,
                0x145323E552F22,
                0x1686650B8C201,
                0x185EFAB514F39,
                0x19E5CB5BA44D6,
                0x1B2523BB6B2DE,
                0x1C278A52A4E47,
                0x1CF6F9786DF57,
                0x1D9C6FAFE61C7,
                0x1E1FBF97E3352,
                0x1E8789ECEC0DD,
                0x1ED9505E1BC3D,
                0x1F1994DF724FC,
                0x1F4BFD6C2DFD1,
                0x1F73776B2AA2D,
                0x1F9258260A71C,
                0x1FAA7934B75EB,
                0x1FBD509AE7AE3,
                0x1FCC04CDBCDC4,
                0x1FD77D111A0B0,
                0x1FE06EB068821,
                0x1FE76795D353A,
                0x1FECD6B7EA312,
                0x1FF112C63A907,
                0x1FF45F6D36133,
                0x1FF6F17A75477,
                0x1FF8F21CDAAA6,
                0x1FFA81708A0B4,
                0x1FFBB87D07C5D,
                0x1FFCAAC3F20E6,
                0x1FFD677867B57,
                0x1FFDFA7215398,
                0x1FFE6CEAD12CD,
                0x1FFEC61279A3A,
                0x1FFF0B823AE6E,
                0x1FFF419668DF1,
                0x1FFF6BB483CC7,
                0x1FFF8C81C6DC3,
                0x1FFFA60DA976A,
                0x1FFFB9F2FC1E9,
                0x1FFFC971B3C07,
                0x1FFFD58301482,
                0x1FFFDEE8F8035,
    };
    #endif // (defined(TINYMIND_USE_TANH_15_49))
    #if (defined(TINYMIND_USE_TANH_16_48))
    const uint64_t TanhValuesTableQ16_48::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFF0000CE2A0ED7,
                0xFFFF000108B83FE6,
                0xFFFF000153E7F5BF,
                0xFFFF0001B47261FD,
                0xFFFF000230681F0C,
                0xFFFF0002CF92B44B,
                0xFFFF00039BF1C91F,
                0xFFFF0004A25BE19D,
                0xFFFF0005F34CB908,
                0xFFFF0007A3EE28C9,
                0xFFFF0009CF6C32E3,
                0xFFFF000C98A9769A,
                0xFFFF00102C6F5634,
                0xFFFF0014C43CC255,
                0xFFFF001AA9E06F8D,
                0xFFFF00223C17C1D2,
                0xFFFF002BF47BAFA6,
                0xFFFF00386F192AAD,
                0xFFFF0048742C55C5,
                0xFFFF005D04964F67,
                0xFFFF007769CE2B7D,
                0xFFFF00994A40AE77,
                0xFFFF00C4C3516563,
                0xFFFF00FC8A7CBBF0,
                0xFFFF014417772FA8,
                0xFFFF019FD992191E,
                0xFFFF02157B28C28F,
                0xFFFF02AC365A450B,
                0xFFFF036D3ECFAC72,
                0xFFFF046444A6AAEA,
                0xFFFF05A0149E9018,
                0xFFFF073359046D82,
                0xFFFF09357D0F21E2,
                0xFFFF0BC3B0989F92,
                0xFFFF0F020340E657,
                0xFFFF131C8280CF1D,
                0xFFFF1848343C9055,
                0xFFFF1EC3AD6AD8DD,
                0xFFFF26D6E224A691,
                0xFFFF30D1A522DD95,
                0xFFFF3D082A575864,
                0xFFFF4BCCD7A39F00,
                0xFFFF5D66E0D5686F,
                0xFFFF7205C0AA2384,
                0xFFFF89B2B0A2A5D5,
                0xFFFFA442B085CDC2,
                0xFFFFC14D02B2CBC7,
                0xFFFFE02A66D43B48,
                0x0,
                0x1FD5992BC4B8,
                0x3EB2FD4D3439,
                0x5BBD4F7A323E,
                0x764D4F5D5A2B,
                0x8DFA3F55DC7C,
                0xA2991F2A9791,
                0xB433285C6100,
                0xC2F7D5A8A79C,
                0xCF2E5ADD226B,
                0xD9291DDB596F,
                0xE13C52952723,
                0xE7B7CBC36FAB,
                0xECE37D7F30E3,
                0xF0FDFCBF19A9,
                0xF43C4F67606E,
                0xF6CA82F0DE1E,
                0xF8CCA6FB927E,
                0xFA5FEB616FE8,
                0xFB9BBB595516,
                0xFC92C130538E,
                0xFD53C9A5BAF5,
                0xFDEA84D73D71,
                0xFE60266DE6E2,
                0xFEBBE888D058,
                0xFF0375834410,
                0xFF3B3CAE9A9D,
                0xFF66B5BF5189,
                0xFF889631D483,
                0xFFA2FB69B099,
                0xFFB78BD3AA3B,
                0xFFC790E6D553,
                0xFFD40B84505A,
                0xFFDDC3E83E2E,
                0xFFE5561F9073,
                0xFFEB3BC33DAB,
                0xFFEFD390A9CC,
                0xFFF367568966,
                0xFFF63093CD1D,
                0xFFF85C11D737,
                0xFFFA0CB346F8,
                0xFFFB5DA41E63,
                0xFFFC640E36E1,
                0xFFFD306D4BB5,
                0xFFFDCF97E0F4,
                0xFFFE4B8D9E03,
                0xFFFEAC180A41,
                0xFFFEF747C01A,
    };
    #endif // (defined(TINYMIND_USE_TANH_16_48))
    #if (defined(TINYMIND_USE_TANH_17_47))
    const uint64_t TanhValuesTableQ17_47::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFF80006715076C,
                0xFFFF8000845C1FF3,
                0xFFFF8000A9F3FAE0,
                0xFFFF8000DA3930FF,
                0xFFFF800118340F86,
                0xFFFF800167C95A26,
                0xFFFF8001CDF8E490,
                0xFFFF8002512DF0CF,
                0xFFFF8002F9A65C84,
                0xFFFF8003D1F71465,
                0xFFFF8004E7B61972,
                0xFFFF80064C54BB4D,
                0xFFFF80081637AB1A,
                0xFFFF800A621E612B,
                0xFFFF800D54F037C7,
                0xFFFF80111E0BE0E9,
                0xFFFF8015FA3DD7D3,
                0xFFFF801C378C9557,
                0xFFFF80243A162AE3,
                0xFFFF802E824B27B4,
                0xFFFF803BB4E715BF,
                0xFFFF804CA520573C,
                0xFFFF806261A8B2B2,
                0xFFFF807E453E5DF8,
                0xFFFF80A20BBB97D4,
                0xFFFF80CFECC90C8F,
                0xFFFF810ABD946148,
                0xFFFF81561B2D2286,
                0xFFFF81B69F67D639,
                0xFFFF823222535575,
                0xFFFF82D00A4F480C,
                0xFFFF8399AC8236C1,
                0xFFFF849ABE8790F1,
                0xFFFF85E1D84C4FC9,
                0xFFFF878101A0732C,
                0xFFFF898E4140678F,
                0xFFFF8C241A1E482B,
                0xFFFF8F61D6B56C6F,
                0xFFFF936B71125349,
                0xFFFF9868D2916ECB,
                0xFFFF9E84152BAC32,
                0xFFFFA5E66BD1CF80,
                0xFFFFAEB3706AB438,
                0xFFFFB902E05511C2,
                0xFFFFC4D9585152EB,
                0xFFFFD2215842E6E1,
                0xFFFFE0A6815965E4,
                0xFFFFF015336A1DA4,
                0x0,
                0xFEACC95E25C,
                0x1F597EA69A1C,
                0x2DDEA7BD191F,
                0x3B26A7AEAD15,
                0x46FD1FAAEE3E,
                0x514C8F954BC8,
                0x5A19942E3080,
                0x617BEAD453CE,
                0x67972D6E9135,
                0x6C948EEDACB7,
                0x709E294A9391,
                0x73DBE5E1B7D5,
                0x7671BEBF9871,
                0x787EFE5F8CD4,
                0x7A1E27B3B037,
                0x7B6541786F0F,
                0x7C66537DC93F,
                0x7D2FF5B0B7F4,
                0x7DCDDDACAA8B,
                0x7E49609829C7,
                0x7EA9E4D2DD7A,
                0x7EF5426B9EB8,
                0x7F301336F371,
                0x7F5DF444682C,
                0x7F81BAC1A208,
                0x7F9D9E574D4E,
                0x7FB35ADFA8C4,
                0x7FC44B18EA41,
                0x7FD17DB4D84C,
                0x7FDBC5E9D51D,
                0x7FE3C8736AA9,
                0x7FEA05C2282D,
                0x7FEEE1F41F17,
                0x7FF2AB0FC839,
                0x7FF59DE19ED5,
                0x7FF7E9C854E6,
                0x7FF9B3AB44B3,
                0x7FFB1849E68E,
                0x7FFC2E08EB9B,
                0x7FFD0659A37C,
                0x7FFDAED20F31,
                0x7FFE32071B70,
                0x7FFE9836A5DA,
                0x7FFEE7CBF07A,
                0x7FFF25C6CF01,
                0x7FFF560C0520,
                0x7FFF7BA3E00D,
    };
    #endif // (defined(TINYMIND_USE_TANH_17_47))
    #if (defined(TINYMIND_USE_TANH_18_46))
    const uint64_t TanhValuesTableQ18_46::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFC000338A83B6,
                0xFFFFC000422E0FFA,
                0xFFFFC00054F9FD70,
                0xFFFFC0006D1C9880,
                0xFFFFC0008C1A07C3,
                0xFFFFC000B3E4AD13,
                0xFFFFC000E6FC7248,
                0xFFFFC0012896F868,
                0xFFFFC0017CD32E42,
                0xFFFFC001E8FB8A33,
                0xFFFFC00273DB0CB9,
                0xFFFFC003262A5DA7,
                0xFFFFC0040B1BD58D,
                0xFFFFC005310F3096,
                0xFFFFC006AA781BE4,
                0xFFFFC0088F05F075,
                0xFFFFC00AFD1EEBEA,
                0xFFFFC00E1BC64AAC,
                0xFFFFC0121D0B1572,
                0xFFFFC017412593DA,
                0xFFFFC01DDA738AE0,
                0xFFFFC02652902B9E,
                0xFFFFC03130D45959,
                0xFFFFC03F229F2EFC,
                0xFFFFC05105DDCBEA,
                0xFFFFC067F6648648,
                0xFFFFC0855ECA30A4,
                0xFFFFC0AB0D969143,
                0xFFFFC0DB4FB3EB1D,
                0xFFFFC1191129AABB,
                0xFFFFC1680527A406,
                0xFFFFC1CCD6411B61,
                0xFFFFC24D5F43C879,
                0xFFFFC2F0EC2627E5,
                0xFFFFC3C080D03996,
                0xFFFFC4C720A033C8,
                0xFFFFC6120D0F2416,
                0xFFFFC7B0EB5AB638,
                0xFFFFC9B5B88929A5,
                0xFFFFCC346948B766,
                0xFFFFCF420A95D619,
                0xFFFFD2F335E8E7C0,
                0xFFFFD759B8355A1C,
                0xFFFFDC81702A88E1,
                0xFFFFE26CAC28A976,
                0xFFFFE910AC217371,
                0xFFFFF05340ACB2F2,
                0xFFFFF80A99B50ED2,
                0x0,
                0x7F5664AF12E,
                0xFACBF534D0E,
                0x16EF53DE8C8F,
                0x1D9353D7568A,
                0x237E8FD5771F,
                0x28A647CAA5E4,
                0x2D0CCA171840,
                0x30BDF56A29E7,
                0x33CB96B7489A,
                0x364A4776D65B,
                0x384F14A549C8,
                0x39EDF2F0DBEA,
                0x3B38DF5FCC38,
                0x3C3F7F2FC66A,
                0x3D0F13D9D81B,
                0x3DB2A0BC3787,
                0x3E3329BEE49F,
                0x3E97FAD85BFA,
                0x3EE6EED65545,
                0x3F24B04C14E3,
                0x3F54F2696EBD,
                0x3F7AA135CF5C,
                0x3F98099B79B8,
                0x3FAEFA223416,
                0x3FC0DD60D104,
                0x3FCECF2BA6A7,
                0x3FD9AD6FD462,
                0x3FE2258C7520,
                0x3FE8BEDA6C26,
                0x3FEDE2F4EA8E,
                0x3FF1E439B554,
                0x3FF502E11416,
                0x3FF770FA0F8B,
                0x3FF95587E41C,
                0x3FFACEF0CF6A,
                0x3FFBF4E42A73,
                0x3FFCD9D5A259,
                0x3FFD8C24F347,
                0x3FFE170475CD,
                0x3FFE832CD1BE,
                0x3FFED7690798,
                0x3FFF19038DB8,
                0x3FFF4C1B52ED,
                0x3FFF73E5F83D,
                0x3FFF92E36780,
                0x3FFFAB060290,
                0x3FFFBDD1F006,
    };
    #endif // (defined(TINYMIND_USE_TANH_18_46))
    #if (defined(TINYMIND_USE_TANH_19_45))
    const uint64_t TanhValuesTableQ19_45::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFE00019C541DB,
                0xFFFFE000211707FD,
                0xFFFFE0002A7CFEB8,
                0xFFFFE000368E4C40,
                0xFFFFE000460D03E2,
                0xFFFFE00059F2568A,
                0xFFFFE000737E3924,
                0xFFFFE000944B7C34,
                0xFFFFE000BE699721,
                0xFFFFE000F47DC51A,
                0xFFFFE00139ED865D,
                0xFFFFE00193152ED4,
                0xFFFFE002058DEAC7,
                0xFFFFE0029887984B,
                0xFFFFE003553C0DF2,
                0xFFFFE0044782F83B,
                0xFFFFE0057E8F75F5,
                0xFFFFE0070DE32556,
                0xFFFFE0090E858AB9,
                0xFFFFE00BA092C9ED,
                0xFFFFE00EED39C570,
                0xFFFFE013294815CF,
                0xFFFFE018986A2CAD,
                0xFFFFE01F914F977E,
                0xFFFFE02882EEE5F5,
                0xFFFFE033FB324324,
                0xFFFFE042AF651852,
                0xFFFFE05586CB48A2,
                0xFFFFE06DA7D9F58F,
                0xFFFFE08C8894D55E,
                0xFFFFE0B40293D203,
                0xFFFFE0E66B208DB1,
                0xFFFFE126AFA1E43D,
                0xFFFFE178761313F3,
                0xFFFFE1E040681CCB,
                0xFFFFE263905019E4,
                0xFFFFE3090687920B,
                0xFFFFE3D875AD5B1C,
                0xFFFFE4DADC4494D3,
                0xFFFFE61A34A45BB3,
                0xFFFFE7A1054AEB0D,
                0xFFFFE9799AF473E0,
                0xFFFFEBACDC1AAD0E,
                0xFFFFEE40B8154471,
                0xFFFFF136561454BB,
                0xFFFFF4885610B9B9,
                0xFFFFF829A0565979,
                0xFFFFFC054CDA8769,
                0x0,
                0x3FAB3257897,
                0x7D65FA9A687,
                0xB77A9EF4647,
                0xEC9A9EBAB45,
                0x11BF47EABB8F,
                0x145323E552F2,
                0x1686650B8C20,
                0x185EFAB514F3,
                0x19E5CB5BA44D,
                0x1B2523BB6B2D,
                0x1C278A52A4E4,
                0x1CF6F9786DF5,
                0x1D9C6FAFE61C,
                0x1E1FBF97E335,
                0x1E8789ECEC0D,
                0x1ED9505E1BC3,
                0x1F1994DF724F,
                0x1F4BFD6C2DFD,
                0x1F73776B2AA2,
                0x1F9258260A71,
                0x1FAA7934B75E,
                0x1FBD509AE7AE,
                0x1FCC04CDBCDC,
                0x1FD77D111A0B,
                0x1FE06EB06882,
                0x1FE76795D353,
                0x1FECD6B7EA31,
                0x1FF112C63A90,
                0x1FF45F6D3613,
                0x1FF6F17A7547,
                0x1FF8F21CDAAA,
                0x1FFA81708A0B,
                0x1FFBB87D07C5,
                0x1FFCAAC3F20E,
                0x1FFD677867B5,
                0x1FFDFA721539,
                0x1FFE6CEAD12C,
                0x1FFEC61279A3,
                0x1FFF0B823AE6,
                0x1FFF419668DF,
                0x1FFF6BB483CC,
                0x1FFF8C81C6DC,
                0x1FFFA60DA976,
                0x1FFFB9F2FC1E,
                0x1FFFC971B3C0,
                0x1FFFD5830148,
                0x1FFFDEE8F803,
    };
    #endif // (defined(TINYMIND_USE_TANH_19_45))
    #if (defined(TINYMIND_USE_TANH_20_44))
    const uint64_t TanhValuesTableQ20_44::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFF0000CE2A0EE,
                0xFFFFF000108B83FF,
                0xFFFFF000153E7F5C,
                0xFFFFF0001B472620,
                0xFFFFF000230681F1,
                0xFFFFF0002CF92B45,
                0xFFFFF00039BF1C92,
                0xFFFFF0004A25BE1A,
                0xFFFFF0005F34CB91,
                0xFFFFF0007A3EE28D,
                0xFFFFF0009CF6C32F,
                0xFFFFF000C98A976A,
                0xFFFFF00102C6F564,
                0xFFFFF0014C43CC26,
                0xFFFFF001AA9E06F9,
                0xFFFFF00223C17C1E,
                0xFFFFF002BF47BAFB,
                0xFFFFF00386F192AB,
                0xFFFFF0048742C55D,
                0xFFFFF005D04964F7,
                0xFFFFF007769CE2B8,
                0xFFFFF00994A40AE8,
                0xFFFFF00C4C351657,
                0xFFFFF00FC8A7CBBF,
                0xFFFFF014417772FB,
                0xFFFFF019FD992192,
                0xFFFFF02157B28C29,
                0xFFFFF02AC365A451,
                0xFFFFF036D3ECFAC8,
                0xFFFFF046444A6AAF,
                0xFFFFF05A0149E902,
                0xFFFFF073359046D9,
                0xFFFFF09357D0F21F,
                0xFFFFF0BC3B0989FA,
                0xFFFFF0F020340E66,
                0xFFFFF131C8280CF2,
                0xFFFFF1848343C906,
                0xFFFFF1EC3AD6AD8E,
                0xFFFFF26D6E224A6A,
                0xFFFFF30D1A522DDA,
                0xFFFFF3D082A57587,
                0xFFFFF4BCCD7A39F0,
                0xFFFFF5D66E0D5687,
                0xFFFFF7205C0AA239,
                0xFFFFF89B2B0A2A5E,
                0xFFFFFA442B085CDD,
                0xFFFFFC14D02B2CBD,
                0xFFFFFE02A66D43B5,
                0x0,
                0x1FD5992BC4B,
                0x3EB2FD4D343,
                0x5BBD4F7A323,
                0x764D4F5D5A2,
                0x8DFA3F55DC7,
                0xA2991F2A979,
                0xB433285C610,
                0xC2F7D5A8A79,
                0xCF2E5ADD226,
                0xD9291DDB596,
                0xE13C5295272,
                0xE7B7CBC36FA,
                0xECE37D7F30E,
                0xF0FDFCBF19A,
                0xF43C4F67606,
                0xF6CA82F0DE1,
                0xF8CCA6FB927,
                0xFA5FEB616FE,
                0xFB9BBB59551,
                0xFC92C130538,
                0xFD53C9A5BAF,
                0xFDEA84D73D7,
                0xFE60266DE6E,
                0xFEBBE888D05,
                0xFF037583441,
                0xFF3B3CAE9A9,
                0xFF66B5BF518,
                0xFF889631D48,
                0xFFA2FB69B09,
                0xFFB78BD3AA3,
                0xFFC790E6D55,
                0xFFD40B84505,
                0xFFDDC3E83E2,
                0xFFE5561F907,
                0xFFEB3BC33DA,
                0xFFEFD390A9C,
                0xFFF36756896,
                0xFFF63093CD1,
                0xFFF85C11D73,
                0xFFFA0CB346F,
                0xFFFB5DA41E6,
                0xFFFC640E36E,
                0xFFFD306D4BB,
                0xFFFDCF97E0F,
                0xFFFE4B8D9E0,
                0xFFFEAC180A4,
                0xFFFEF747C01,
    };
    #endif // (defined(TINYMIND_USE_TANH_20_44))
    #if (defined(TINYMIND_USE_TANH_21_43))
    const uint64_t TanhValuesTableQ21_43::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFF80006715077,
                0xFFFFF8000845C200,
                0xFFFFF8000A9F3FAE,
                0xFFFFF8000DA39310,
                0xFFFFF800118340F9,
                0xFFFFF800167C95A3,
                0xFFFFF8001CDF8E49,
                0xFFFFF8002512DF0D,
                0xFFFFF8002F9A65C9,
                0xFFFFF8003D1F7147,
                0xFFFFF8004E7B6198,
                0xFFFFF80064C54BB5,
                0xFFFFF80081637AB2,
                0xFFFFF800A621E613,
                0xFFFFF800D54F037D,
                0xFFFFF80111E0BE0F,
                0xFFFFF8015FA3DD7E,
                0xFFFFF801C378C956,
                0xFFFFF80243A162AF,
                0xFFFFF802E824B27C,
                0xFFFFF803BB4E715C,
                0xFFFFF804CA520574,
                0xFFFFF806261A8B2C,
                0xFFFFF807E453E5E0,
                0xFFFFF80A20BBB97E,
                0xFFFFF80CFECC90C9,
                0xFFFFF810ABD94615,
                0xFFFFF81561B2D229,
                0xFFFFF81B69F67D64,
                0xFFFFF82322253558,
                0xFFFFF82D00A4F481,
                0xFFFFF8399AC8236D,
                0xFFFFF849ABE87910,
                0xFFFFF85E1D84C4FD,
                0xFFFFF878101A0733,
                0xFFFFF898E4140679,
                0xFFFFF8C241A1E483,
                0xFFFFF8F61D6B56C7,
                0xFFFFF936B7112535,
                0xFFFFF9868D2916ED,
                0xFFFFF9E84152BAC4,
                0xFFFFFA5E66BD1CF8,
                0xFFFFFAEB3706AB44,
                0xFFFFFB902E05511D,
                0xFFFFFC4D9585152F,
                0xFFFFFD2215842E6F,
                0xFFFFFE0A6815965F,
                0xFFFFFF015336A1DB,
                0x0,
                0xFEACC95E25,
                0x1F597EA69A1,
                0x2DDEA7BD191,
                0x3B26A7AEAD1,
                0x46FD1FAAEE3,
                0x514C8F954BC,
                0x5A19942E308,
                0x617BEAD453C,
                0x67972D6E913,
                0x6C948EEDACB,
                0x709E294A939,
                0x73DBE5E1B7D,
                0x7671BEBF987,
                0x787EFE5F8CD,
                0x7A1E27B3B03,
                0x7B6541786F0,
                0x7C66537DC93,
                0x7D2FF5B0B7F,
                0x7DCDDDACAA8,
                0x7E49609829C,
                0x7EA9E4D2DD7,
                0x7EF5426B9EB,
                0x7F301336F37,
                0x7F5DF444682,
                0x7F81BAC1A20,
                0x7F9D9E574D4,
                0x7FB35ADFA8C,
                0x7FC44B18EA4,
                0x7FD17DB4D84,
                0x7FDBC5E9D51,
                0x7FE3C8736AA,
                0x7FEA05C2282,
                0x7FEEE1F41F1,
                0x7FF2AB0FC83,
                0x7FF59DE19ED,
                0x7FF7E9C854E,
                0x7FF9B3AB44B,
                0x7FFB1849E68,
                0x7FFC2E08EB9,
                0x7FFD0659A37,
                0x7FFDAED20F3,
                0x7FFE32071B7,
                0x7FFE9836A5D,
                0x7FFEE7CBF07,
                0x7FFF25C6CF0,
                0x7FFF560C052,
                0x7FFF7BA3E00,
    };
    #endif // (defined(TINYMIND_USE_TANH_21_43))
    #if (defined(TINYMIND_USE_TANH_22_42))
    const uint64_t TanhValuesTableQ22_42::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFC000338A83C,
                0xFFFFFC000422E100,
                0xFFFFFC00054F9FD7,
                0xFFFFFC0006D1C988,
                0xFFFFFC0008C1A07D,
                0xFFFFFC000B3E4AD2,
                0xFFFFFC000E6FC725,
                0xFFFFFC0012896F87,
                0xFFFFFC0017CD32E5,
                0xFFFFFC001E8FB8A4,
                0xFFFFFC00273DB0CC,
                0xFFFFFC003262A5DB,
                0xFFFFFC0040B1BD59,
                0xFFFFFC005310F30A,
                0xFFFFFC006AA781BF,
                0xFFFFFC0088F05F08,
                0xFFFFFC00AFD1EEBF,
                0xFFFFFC00E1BC64AB,
                0xFFFFFC0121D0B158,
                0xFFFFFC017412593E,
                0xFFFFFC01DDA738AE,
                0xFFFFFC02652902BA,
                0xFFFFFC03130D4596,
                0xFFFFFC03F229F2F0,
                0xFFFFFC05105DDCBF,
                0xFFFFFC067F664865,
                0xFFFFFC0855ECA30B,
                0xFFFFFC0AB0D96915,
                0xFFFFFC0DB4FB3EB2,
                0xFFFFFC1191129AAC,
                0xFFFFFC1680527A41,
                0xFFFFFC1CCD6411B7,
                0xFFFFFC24D5F43C88,
                0xFFFFFC2F0EC2627F,
                0xFFFFFC3C080D039A,
                0xFFFFFC4C720A033D,
                0xFFFFFC6120D0F242,
                0xFFFFFC7B0EB5AB64,
                0xFFFFFC9B5B88929B,
                0xFFFFFCC346948B77,
                0xFFFFFCF420A95D62,
                0xFFFFFD2F335E8E7C,
                0xFFFFFD759B8355A2,
                0xFFFFFDC81702A88F,
                0xFFFFFE26CAC28A98,
                0xFFFFFE910AC21738,
                0xFFFFFF05340ACB30,
                0xFFFFFF80A99B50EE,
                0x0,
                0x7F5664AF12,
                0xFACBF534D0,
                0x16EF53DE8C8,
                0x1D9353D7568,
                0x237E8FD5771,
                0x28A647CAA5E,
                0x2D0CCA17184,
                0x30BDF56A29E,
                0x33CB96B7489,
                0x364A4776D65,
                0x384F14A549C,
                0x39EDF2F0DBE,
                0x3B38DF5FCC3,
                0x3C3F7F2FC66,
                0x3D0F13D9D81,
                0x3DB2A0BC378,
                0x3E3329BEE49,
                0x3E97FAD85BF,
                0x3EE6EED6554,
                0x3F24B04C14E,
                0x3F54F2696EB,
                0x3F7AA135CF5,
                0x3F98099B79B,
                0x3FAEFA22341,
                0x3FC0DD60D10,
                0x3FCECF2BA6A,
                0x3FD9AD6FD46,
                0x3FE2258C752,
                0x3FE8BEDA6C2,
                0x3FEDE2F4EA8,
                0x3FF1E439B55,
                0x3FF502E1141,
                0x3FF770FA0F8,
                0x3FF95587E41,
                0x3FFACEF0CF6,
                0x3FFBF4E42A7,
                0x3FFCD9D5A25,
                0x3FFD8C24F34,
                0x3FFE170475C,
                0x3FFE832CD1B,
                0x3FFED769079,
                0x3FFF19038DB,
                0x3FFF4C1B52E,
                0x3FFF73E5F83,
                0x3FFF92E3678,
                0x3FFFAB06029,
                0x3FFFBDD1F00,
    };
    #endif // (defined(TINYMIND_USE_TANH_22_42))
    #if (defined(TINYMIND_USE_TANH_23_41))
    const uint64_t TanhValuesTableQ23_41::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFE00019C541E,
                0xFFFFFE0002117080,
                0xFFFFFE0002A7CFEC,
                0xFFFFFE000368E4C4,
                0xFFFFFE000460D03F,
                0xFFFFFE00059F2569,
                0xFFFFFE000737E393,
                0xFFFFFE000944B7C4,
                0xFFFFFE000BE69973,
                0xFFFFFE000F47DC52,
                0xFFFFFE00139ED866,
                0xFFFFFE00193152EE,
                0xFFFFFE002058DEAD,
                0xFFFFFE0029887985,
                0xFFFFFE003553C0E0,
                0xFFFFFE0044782F84,
                0xFFFFFE0057E8F760,
                0xFFFFFE0070DE3256,
                0xFFFFFE0090E858AC,
                0xFFFFFE00BA092C9F,
                0xFFFFFE00EED39C57,
                0xFFFFFE013294815D,
                0xFFFFFE018986A2CB,
                0xFFFFFE01F914F978,
                0xFFFFFE02882EEE60,
                0xFFFFFE033FB32433,
                0xFFFFFE042AF65186,
                0xFFFFFE05586CB48B,
                0xFFFFFE06DA7D9F59,
                0xFFFFFE08C8894D56,
                0xFFFFFE0B40293D21,
                0xFFFFFE0E66B208DC,
                0xFFFFFE126AFA1E44,
                0xFFFFFE1787613140,
                0xFFFFFE1E040681CD,
                0xFFFFFE263905019F,
                0xFFFFFE3090687921,
                0xFFFFFE3D875AD5B2,
                0xFFFFFE4DADC4494E,
                0xFFFFFE61A34A45BC,
                0xFFFFFE7A1054AEB1,
                0xFFFFFE9799AF473E,
                0xFFFFFEBACDC1AAD1,
                0xFFFFFEE40B815448,
                0xFFFFFF136561454C,
                0xFFFFFF4885610B9C,
                0xFFFFFF829A056598,
                0xFFFFFFC054CDA877,
                0x0,
                0x3FAB325789,
                0x7D65FA9A68,
                0xB77A9EF464,
                0xEC9A9EBAB4,
                0x11BF47EABB8,
                0x145323E552F,
                0x1686650B8C2,
                0x185EFAB514F,
                0x19E5CB5BA44,
                0x1B2523BB6B2,
                0x1C278A52A4E,
                0x1CF6F9786DF,
                0x1D9C6FAFE61,
                0x1E1FBF97E33,
                0x1E8789ECEC0,
                0x1ED9505E1BC,
                0x1F1994DF724,
                0x1F4BFD6C2DF,
                0x1F73776B2AA,
                0x1F9258260A7,
                0x1FAA7934B75,
                0x1FBD509AE7A,
                0x1FCC04CDBCD,
                0x1FD77D111A0,
                0x1FE06EB0688,
                0x1FE76795D35,
                0x1FECD6B7EA3,
                0x1FF112C63A9,
                0x1FF45F6D361,
                0x1FF6F17A754,
                0x1FF8F21CDAA,
                0x1FFA81708A0,
                0x1FFBB87D07C,
                0x1FFCAAC3F20,
                0x1FFD677867B,
                0x1FFDFA72153,
                0x1FFE6CEAD12,
                0x1FFEC61279A,
                0x1FFF0B823AE,
                0x1FFF419668D,
                0x1FFF6BB483C,
                0x1FFF8C81C6D,
                0x1FFFA60DA97,
                0x1FFFB9F2FC1,
                0x1FFFC971B3C,
                0x1FFFD583014,
                0x1FFFDEE8F80,
    };
    #endif // (defined(TINYMIND_USE_TANH_23_41))
    #if (defined(TINYMIND_USE_TANH_24_40))
    const uint64_t TanhValuesTableQ24_40::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFF0000CE2A0F,
                0xFFFFFF000108B840,
                0xFFFFFF000153E7F6,
                0xFFFFFF0001B47262,
                0xFFFFFF0002306820,
                0xFFFFFF0002CF92B5,
                0xFFFFFF00039BF1CA,
                0xFFFFFF0004A25BE2,
                0xFFFFFF0005F34CBA,
                0xFFFFFF0007A3EE29,
                0xFFFFFF0009CF6C33,
                0xFFFFFF000C98A977,
                0xFFFFFF00102C6F57,
                0xFFFFFF0014C43CC3,
                0xFFFFFF001AA9E070,
                0xFFFFFF00223C17C2,
                0xFFFFFF002BF47BB0,
                0xFFFFFF00386F192B,
                0xFFFFFF0048742C56,
                0xFFFFFF005D049650,
                0xFFFFFF007769CE2C,
                0xFFFFFF00994A40AF,
                0xFFFFFF00C4C35166,
                0xFFFFFF00FC8A7CBC,
                0xFFFFFF0144177730,
                0xFFFFFF019FD9921A,
                0xFFFFFF02157B28C3,
                0xFFFFFF02AC365A46,
                0xFFFFFF036D3ECFAD,
                0xFFFFFF046444A6AB,
                0xFFFFFF05A0149E91,
                0xFFFFFF073359046E,
                0xFFFFFF09357D0F22,
                0xFFFFFF0BC3B098A0,
                0xFFFFFF0F020340E7,
                0xFFFFFF131C8280D0,
                0xFFFFFF1848343C91,
                0xFFFFFF1EC3AD6AD9,
                0xFFFFFF26D6E224A7,
                0xFFFFFF30D1A522DE,
                0xFFFFFF3D082A5759,
                0xFFFFFF4BCCD7A39F,
                0xFFFFFF5D66E0D569,
                0xFFFFFF7205C0AA24,
                0xFFFFFF89B2B0A2A6,
                0xFFFFFFA442B085CE,
                0xFFFFFFC14D02B2CC,
                0xFFFFFFE02A66D43C,
                0x0,
                0x1FD5992BC4,
                0x3EB2FD4D34,
                0x5BBD4F7A32,
                0x764D4F5D5A,
                0x8DFA3F55DC,
                0xA2991F2A97,
                0xB433285C61,
                0xC2F7D5A8A7,
                0xCF2E5ADD22,
                0xD9291DDB59,
                0xE13C529527,
                0xE7B7CBC36F,
                0xECE37D7F30,
                0xF0FDFCBF19,
                0xF43C4F6760,
                0xF6CA82F0DE,
                0xF8CCA6FB92,
                0xFA5FEB616F,
                0xFB9BBB5955,
                0xFC92C13053,
                0xFD53C9A5BA,
                0xFDEA84D73D,
                0xFE60266DE6,
                0xFEBBE888D0,
                0xFF03758344,
                0xFF3B3CAE9A,
                0xFF66B5BF51,
                0xFF889631D4,
                0xFFA2FB69B0,
                0xFFB78BD3AA,
                0xFFC790E6D5,
                0xFFD40B8450,
                0xFFDDC3E83E,
                0xFFE5561F90,
                0xFFEB3BC33D,
                0xFFEFD390A9,
                0xFFF3675689,
                0xFFF63093CD,
                0xFFF85C11D7,
                0xFFFA0CB346,
                0xFFFB5DA41E,
                0xFFFC640E36,
                0xFFFD306D4B,
                0xFFFDCF97E0,
                0xFFFE4B8D9E,
                0xFFFEAC180A,
                0xFFFEF747C0,
    };
    #endif // (defined(TINYMIND_USE_TANH_24_40))
    #if (defined(TINYMIND_USE_TANH_25_39))
    const uint64_t TanhValuesTableQ25_39::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFF8000671508,
                0xFFFFFF8000845C20,
                0xFFFFFF8000A9F3FB,
                0xFFFFFF8000DA3931,
                0xFFFFFF8001183410,
                0xFFFFFF800167C95B,
                0xFFFFFF8001CDF8E5,
                0xFFFFFF8002512DF1,
                0xFFFFFF8002F9A65D,
                0xFFFFFF8003D1F715,
                0xFFFFFF8004E7B61A,
                0xFFFFFF80064C54BC,
                0xFFFFFF80081637AC,
                0xFFFFFF800A621E62,
                0xFFFFFF800D54F038,
                0xFFFFFF80111E0BE1,
                0xFFFFFF8015FA3DD8,
                0xFFFFFF801C378C96,
                0xFFFFFF80243A162B,
                0xFFFFFF802E824B28,
                0xFFFFFF803BB4E716,
                0xFFFFFF804CA52058,
                0xFFFFFF806261A8B3,
                0xFFFFFF807E453E5E,
                0xFFFFFF80A20BBB98,
                0xFFFFFF80CFECC90D,
                0xFFFFFF810ABD9462,
                0xFFFFFF81561B2D23,
                0xFFFFFF81B69F67D7,
                0xFFFFFF8232225356,
                0xFFFFFF82D00A4F49,
                0xFFFFFF8399AC8237,
                0xFFFFFF849ABE8791,
                0xFFFFFF85E1D84C50,
                0xFFFFFF878101A074,
                0xFFFFFF898E414068,
                0xFFFFFF8C241A1E49,
                0xFFFFFF8F61D6B56D,
                0xFFFFFF936B711254,
                0xFFFFFF9868D2916F,
                0xFFFFFF9E84152BAD,
                0xFFFFFFA5E66BD1D0,
                0xFFFFFFAEB3706AB5,
                0xFFFFFFB902E05512,
                0xFFFFFFC4D9585153,
                0xFFFFFFD2215842E7,
                0xFFFFFFE0A6815966,
                0xFFFFFFF015336A1E,
                0x0,
                0xFEACC95E2,
                0x1F597EA69A,
                0x2DDEA7BD19,
                0x3B26A7AEAD,
                0x46FD1FAAEE,
                0x514C8F954B,
                0x5A19942E30,
                0x617BEAD453,
                0x67972D6E91,
                0x6C948EEDAC,
                0x709E294A93,
                0x73DBE5E1B7,
                0x7671BEBF98,
                0x787EFE5F8C,
                0x7A1E27B3B0,
                0x7B6541786F,
                0x7C66537DC9,
                0x7D2FF5B0B7,
                0x7DCDDDACAA,
                0x7E49609829,
                0x7EA9E4D2DD,
                0x7EF5426B9E,
                0x7F301336F3,
                0x7F5DF44468,
                0x7F81BAC1A2,
                0x7F9D9E574D,
                0x7FB35ADFA8,
                0x7FC44B18EA,
                0x7FD17DB4D8,
                0x7FDBC5E9D5,
                0x7FE3C8736A,
                0x7FEA05C228,
                0x7FEEE1F41F,
                0x7FF2AB0FC8,
                0x7FF59DE19E,
                0x7FF7E9C854,
                0x7FF9B3AB44,
                0x7FFB1849E6,
                0x7FFC2E08EB,
                0x7FFD0659A3,
                0x7FFDAED20F,
                0x7FFE32071B,
                0x7FFE9836A5,
                0x7FFEE7CBF0,
                0x7FFF25C6CF,
                0x7FFF560C05,
                0x7FFF7BA3E0,
    };
    #endif // (defined(TINYMIND_USE_TANH_25_39))
    #if (defined(TINYMIND_USE_TANH_26_38))
    const uint64_t TanhValuesTableQ26_38::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFC000338A84,
                0xFFFFFFC000422E10,
                0xFFFFFFC00054F9FE,
                0xFFFFFFC0006D1C99,
                0xFFFFFFC0008C1A08,
                0xFFFFFFC000B3E4AE,
                0xFFFFFFC000E6FC73,
                0xFFFFFFC0012896F9,
                0xFFFFFFC0017CD32F,
                0xFFFFFFC001E8FB8B,
                0xFFFFFFC00273DB0D,
                0xFFFFFFC003262A5E,
                0xFFFFFFC0040B1BD6,
                0xFFFFFFC005310F31,
                0xFFFFFFC006AA781C,
                0xFFFFFFC0088F05F1,
                0xFFFFFFC00AFD1EEC,
                0xFFFFFFC00E1BC64B,
                0xFFFFFFC0121D0B16,
                0xFFFFFFC017412594,
                0xFFFFFFC01DDA738B,
                0xFFFFFFC02652902C,
                0xFFFFFFC03130D45A,
                0xFFFFFFC03F229F2F,
                0xFFFFFFC05105DDCC,
                0xFFFFFFC067F66487,
                0xFFFFFFC0855ECA31,
                0xFFFFFFC0AB0D9692,
                0xFFFFFFC0DB4FB3EC,
                0xFFFFFFC1191129AB,
                0xFFFFFFC1680527A5,
                0xFFFFFFC1CCD6411C,
                0xFFFFFFC24D5F43C9,
                0xFFFFFFC2F0EC2628,
                0xFFFFFFC3C080D03A,
                0xFFFFFFC4C720A034,
                0xFFFFFFC6120D0F25,
                0xFFFFFFC7B0EB5AB7,
                0xFFFFFFC9B5B8892A,
                0xFFFFFFCC346948B8,
                0xFFFFFFCF420A95D7,
                0xFFFFFFD2F335E8E8,
                0xFFFFFFD759B8355B,
                0xFFFFFFDC81702A89,
                0xFFFFFFE26CAC28AA,
                0xFFFFFFE910AC2174,
                0xFFFFFFF05340ACB3,
                0xFFFFFFF80A99B50F,
                0x0,
                0x7F5664AF1,
                0xFACBF534D,
                0x16EF53DE8C,
                0x1D9353D756,
                0x237E8FD577,
                0x28A647CAA5,
                0x2D0CCA1718,
                0x30BDF56A29,
                0x33CB96B748,
                0x364A4776D6,
                0x384F14A549,
                0x39EDF2F0DB,
                0x3B38DF5FCC,
                0x3C3F7F2FC6,
                0x3D0F13D9D8,
                0x3DB2A0BC37,
                0x3E3329BEE4,
                0x3E97FAD85B,
                0x3EE6EED655,
                0x3F24B04C14,
                0x3F54F2696E,
                0x3F7AA135CF,
                0x3F98099B79,
                0x3FAEFA2234,
                0x3FC0DD60D1,
                0x3FCECF2BA6,
                0x3FD9AD6FD4,
                0x3FE2258C75,
                0x3FE8BEDA6C,
                0x3FEDE2F4EA,
                0x3FF1E439B5,
                0x3FF502E114,
                0x3FF770FA0F,
                0x3FF95587E4,
                0x3FFACEF0CF,
                0x3FFBF4E42A,
                0x3FFCD9D5A2,
                0x3FFD8C24F3,
                0x3FFE170475,
                0x3FFE832CD1,
                0x3FFED76907,
                0x3FFF19038D,
                0x3FFF4C1B52,
                0x3FFF73E5F8,
                0x3FFF92E367,
                0x3FFFAB0602,
                0x3FFFBDD1F0,
    };
    #endif // (defined(TINYMIND_USE_TANH_26_38))
    #if (defined(TINYMIND_USE_TANH_27_37))
    const uint64_t TanhValuesTableQ27_37::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFE00019C542,
                0xFFFFFFE000211708,
                0xFFFFFFE0002A7CFF,
                0xFFFFFFE000368E4D,
                0xFFFFFFE000460D04,
                0xFFFFFFE00059F257,
                0xFFFFFFE000737E3A,
                0xFFFFFFE000944B7D,
                0xFFFFFFE000BE6998,
                0xFFFFFFE000F47DC6,
                0xFFFFFFE00139ED87,
                0xFFFFFFE00193152F,
                0xFFFFFFE002058DEB,
                0xFFFFFFE002988799,
                0xFFFFFFE003553C0E,
                0xFFFFFFE0044782F9,
                0xFFFFFFE0057E8F76,
                0xFFFFFFE0070DE326,
                0xFFFFFFE0090E858B,
                0xFFFFFFE00BA092CA,
                0xFFFFFFE00EED39C6,
                0xFFFFFFE013294816,
                0xFFFFFFE018986A2D,
                0xFFFFFFE01F914F98,
                0xFFFFFFE02882EEE6,
                0xFFFFFFE033FB3244,
                0xFFFFFFE042AF6519,
                0xFFFFFFE05586CB49,
                0xFFFFFFE06DA7D9F6,
                0xFFFFFFE08C8894D6,
                0xFFFFFFE0B40293D3,
                0xFFFFFFE0E66B208E,
                0xFFFFFFE126AFA1E5,
                0xFFFFFFE178761314,
                0xFFFFFFE1E040681D,
                0xFFFFFFE26390501A,
                0xFFFFFFE309068793,
                0xFFFFFFE3D875AD5C,
                0xFFFFFFE4DADC4495,
                0xFFFFFFE61A34A45C,
                0xFFFFFFE7A1054AEC,
                0xFFFFFFE9799AF474,
                0xFFFFFFEBACDC1AAE,
                0xFFFFFFEE40B81545,
                0xFFFFFFF136561455,
                0xFFFFFFF4885610BA,
                0xFFFFFFF829A0565A,
                0xFFFFFFFC054CDA88,
                0x0,
                0x3FAB32578,
                0x7D65FA9A6,
                0xB77A9EF46,
                0xEC9A9EBAB,
                0x11BF47EABB,
                0x145323E552,
                0x1686650B8C,
                0x185EFAB514,
                0x19E5CB5BA4,
                0x1B2523BB6B,
                0x1C278A52A4,
                0x1CF6F9786D,
                0x1D9C6FAFE6,
                0x1E1FBF97E3,
                0x1E8789ECEC,
                0x1ED9505E1B,
                0x1F1994DF72,
                0x1F4BFD6C2D,
                0x1F73776B2A,
                0x1F9258260A,
                0x1FAA7934B7,
                0x1FBD509AE7,
                0x1FCC04CDBC,
                0x1FD77D111A,
                0x1FE06EB068,
                0x1FE76795D3,
                0x1FECD6B7EA,
                0x1FF112C63A,
                0x1FF45F6D36,
                0x1FF6F17A75,
                0x1FF8F21CDA,
                0x1FFA81708A,
                0x1FFBB87D07,
                0x1FFCAAC3F2,
                0x1FFD677867,
                0x1FFDFA7215,
                0x1FFE6CEAD1,
                0x1FFEC61279,
                0x1FFF0B823A,
                0x1FFF419668,
                0x1FFF6BB483,
                0x1FFF8C81C6,
                0x1FFFA60DA9,
                0x1FFFB9F2FC,
                0x1FFFC971B3,
                0x1FFFD58301,
                0x1FFFDEE8F8,
    };
    #endif // (defined(TINYMIND_USE_TANH_27_37))
    #if (defined(TINYMIND_USE_TANH_28_36))
    const uint64_t TanhValuesTableQ28_36::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFF0000CE2A1,
                0xFFFFFFF000108B84,
                0xFFFFFFF000153E80,
                0xFFFFFFF0001B4727,
                0xFFFFFFF000230682,
                0xFFFFFFF0002CF92C,
                0xFFFFFFF00039BF1D,
                0xFFFFFFF0004A25BF,
                0xFFFFFFF0005F34CC,
                0xFFFFFFF0007A3EE3,
                0xFFFFFFF0009CF6C4,
                0xFFFFFFF000C98A98,
                0xFFFFFFF00102C6F6,
                0xFFFFFFF0014C43CD,
                0xFFFFFFF001AA9E07,
                0xFFFFFFF00223C17D,
                0xFFFFFFF002BF47BB,
                0xFFFFFFF00386F193,
                0xFFFFFFF0048742C6,
                0xFFFFFFF005D04965,
                0xFFFFFFF007769CE3,
                0xFFFFFFF00994A40B,
                0xFFFFFFF00C4C3517,
                0xFFFFFFF00FC8A7CC,
                0xFFFFFFF014417773,
                0xFFFFFFF019FD9922,
                0xFFFFFFF02157B28D,
                0xFFFFFFF02AC365A5,
                0xFFFFFFF036D3ECFB,
                0xFFFFFFF046444A6B,
                0xFFFFFFF05A0149EA,
                0xFFFFFFF073359047,
                0xFFFFFFF09357D0F3,
                0xFFFFFFF0BC3B098A,
                0xFFFFFFF0F020340F,
                0xFFFFFFF131C8280D,
                0xFFFFFFF1848343CA,
                0xFFFFFFF1EC3AD6AE,
                0xFFFFFFF26D6E224B,
                0xFFFFFFF30D1A522E,
                0xFFFFFFF3D082A576,
                0xFFFFFFF4BCCD7A3A,
                0xFFFFFFF5D66E0D57,
                0xFFFFFFF7205C0AA3,
                0xFFFFFFF89B2B0A2B,
                0xFFFFFFFA442B085D,
                0xFFFFFFFC14D02B2D,
                0xFFFFFFFE02A66D44,
                0x0,
                0x1FD5992BC,
                0x3EB2FD4D3,
                0x5BBD4F7A3,
                0x764D4F5D5,
                0x8DFA3F55D,
                0xA2991F2A9,
                0xB433285C6,
                0xC2F7D5A8A,
                0xCF2E5ADD2,
                0xD9291DDB5,
                0xE13C52952,
                0xE7B7CBC36,
                0xECE37D7F3,
                0xF0FDFCBF1,
                0xF43C4F676,
                0xF6CA82F0D,
                0xF8CCA6FB9,
                0xFA5FEB616,
                0xFB9BBB595,
                0xFC92C1305,
                0xFD53C9A5B,
                0xFDEA84D73,
                0xFE60266DE,
                0xFEBBE888D,
                0xFF0375834,
                0xFF3B3CAE9,
                0xFF66B5BF5,
                0xFF889631D,
                0xFFA2FB69B,
                0xFFB78BD3A,
                0xFFC790E6D,
                0xFFD40B845,
                0xFFDDC3E83,
                0xFFE5561F9,
                0xFFEB3BC33,
                0xFFEFD390A,
                0xFFF367568,
                0xFFF63093C,
                0xFFF85C11D,
                0xFFFA0CB34,
                0xFFFB5DA41,
                0xFFFC640E3,
                0xFFFD306D4,
                0xFFFDCF97E,
                0xFFFE4B8D9,
                0xFFFEAC180,
                0xFFFEF747C,
    };
    #endif // (defined(TINYMIND_USE_TANH_28_36))
    #if (defined(TINYMIND_USE_TANH_29_35))
    const uint64_t TanhValuesTableQ29_35::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFF800067151,
                0xFFFFFFF8000845C2,
                0xFFFFFFF8000A9F40,
                0xFFFFFFF8000DA394,
                0xFFFFFFF800118341,
                0xFFFFFFF800167C96,
                0xFFFFFFF8001CDF8F,
                0xFFFFFFF8002512E0,
                0xFFFFFFF8002F9A66,
                0xFFFFFFF8003D1F72,
                0xFFFFFFF8004E7B62,
                0xFFFFFFF80064C54C,
                0xFFFFFFF80081637B,
                0xFFFFFFF800A621E7,
                0xFFFFFFF800D54F04,
                0xFFFFFFF80111E0BF,
                0xFFFFFFF8015FA3DE,
                0xFFFFFFF801C378CA,
                0xFFFFFFF80243A163,
                0xFFFFFFF802E824B3,
                0xFFFFFFF803BB4E72,
                0xFFFFFFF804CA5206,
                0xFFFFFFF806261A8C,
                0xFFFFFFF807E453E6,
                0xFFFFFFF80A20BBBA,
                0xFFFFFFF80CFECC91,
                0xFFFFFFF810ABD947,
                0xFFFFFFF81561B2D3,
                0xFFFFFFF81B69F67E,
                0xFFFFFFF823222536,
                0xFFFFFFF82D00A4F5,
                0xFFFFFFF8399AC824,
                0xFFFFFFF849ABE87A,
                0xFFFFFFF85E1D84C5,
                0xFFFFFFF878101A08,
                0xFFFFFFF898E41407,
                0xFFFFFFF8C241A1E5,
                0xFFFFFFF8F61D6B57,
                0xFFFFFFF936B71126,
                0xFFFFFFF9868D2917,
                0xFFFFFFF9E84152BB,
                0xFFFFFFFA5E66BD1D,
                0xFFFFFFFAEB3706AC,
                0xFFFFFFFB902E0552,
                0xFFFFFFFC4D958516,
                0xFFFFFFFD2215842F,
                0xFFFFFFFE0A681597,
                0xFFFFFFFF015336A2,
                0x0,
                0xFEACC95E,
                0x1F597EA69,
                0x2DDEA7BD1,
                0x3B26A7AEA,
                0x46FD1FAAE,
                0x514C8F954,
                0x5A19942E3,
                0x617BEAD45,
                0x67972D6E9,
                0x6C948EEDA,
                0x709E294A9,
                0x73DBE5E1B,
                0x7671BEBF9,
                0x787EFE5F8,
                0x7A1E27B3B,
                0x7B6541786,
                0x7C66537DC,
                0x7D2FF5B0B,
                0x7DCDDDACA,
                0x7E4960982,
                0x7EA9E4D2D,
                0x7EF5426B9,
                0x7F301336F,
                0x7F5DF4446,
                0x7F81BAC1A,
                0x7F9D9E574,
                0x7FB35ADFA,
                0x7FC44B18E,
                0x7FD17DB4D,
                0x7FDBC5E9D,
                0x7FE3C8736,
                0x7FEA05C22,
                0x7FEEE1F41,
                0x7FF2AB0FC,
                0x7FF59DE19,
                0x7FF7E9C85,
                0x7FF9B3AB4,
                0x7FFB1849E,
                0x7FFC2E08E,
                0x7FFD0659A,
                0x7FFDAED20,
                0x7FFE32071,
                0x7FFE9836A,
                0x7FFEE7CBF,
                0x7FFF25C6C,
                0x7FFF560C0,
                0x7FFF7BA3E,
    };
    #endif // (defined(TINYMIND_USE_TANH_29_35))
    #if (defined(TINYMIND_USE_TANH_30_34))
    const uint64_t TanhValuesTableQ30_34::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFC000338A9,
                0xFFFFFFFC000422E1,
                0xFFFFFFFC00054FA0,
                0xFFFFFFFC0006D1CA,
                0xFFFFFFFC0008C1A1,
                0xFFFFFFFC000B3E4B,
                0xFFFFFFFC000E6FC8,
                0xFFFFFFFC00128970,
                0xFFFFFFFC0017CD33,
                0xFFFFFFFC001E8FB9,
                0xFFFFFFFC00273DB1,
                0xFFFFFFFC003262A6,
                0xFFFFFFFC0040B1BE,
                0xFFFFFFFC005310F4,
                0xFFFFFFFC006AA782,
                0xFFFFFFFC0088F060,
                0xFFFFFFFC00AFD1EF,
                0xFFFFFFFC00E1BC65,
                0xFFFFFFFC0121D0B2,
                0xFFFFFFFC0174125A,
                0xFFFFFFFC01DDA739,
                0xFFFFFFFC02652903,
                0xFFFFFFFC03130D46,
                0xFFFFFFFC03F229F3,
                0xFFFFFFFC05105DDD,
                0xFFFFFFFC067F6649,
                0xFFFFFFFC0855ECA4,
                0xFFFFFFFC0AB0D96A,
                0xFFFFFFFC0DB4FB3F,
                0xFFFFFFFC1191129B,
                0xFFFFFFFC1680527B,
                0xFFFFFFFC1CCD6412,
                0xFFFFFFFC24D5F43D,
                0xFFFFFFFC2F0EC263,
                0xFFFFFFFC3C080D04,
                0xFFFFFFFC4C720A04,
                0xFFFFFFFC6120D0F3,
                0xFFFFFFFC7B0EB5AC,
                0xFFFFFFFC9B5B8893,
                0xFFFFFFFCC346948C,
                0xFFFFFFFCF420A95E,
                0xFFFFFFFD2F335E8F,
                0xFFFFFFFD759B8356,
                0xFFFFFFFDC81702A9,
                0xFFFFFFFE26CAC28B,
                0xFFFFFFFE910AC218,
                0xFFFFFFFF05340ACC,
                0xFFFFFFFF80A99B51,
                0x0,
                0x7F5664AF,
                0xFACBF534,
                0x16EF53DE8,
                0x1D9353D75,
                0x237E8FD57,
                0x28A647CAA,
                0x2D0CCA171,
                0x30BDF56A2,
                0x33CB96B74,
                0x364A4776D,
                0x384F14A54,
                0x39EDF2F0D,
                0x3B38DF5FC,
                0x3C3F7F2FC,
                0x3D0F13D9D,
                0x3DB2A0BC3,
                0x3E3329BEE,
                0x3E97FAD85,
                0x3EE6EED65,
                0x3F24B04C1,
                0x3F54F2696,
                0x3F7AA135C,
                0x3F98099B7,
                0x3FAEFA223,
                0x3FC0DD60D,
                0x3FCECF2BA,
                0x3FD9AD6FD,
                0x3FE2258C7,
                0x3FE8BEDA6,
                0x3FEDE2F4E,
                0x3FF1E439B,
                0x3FF502E11,
                0x3FF770FA0,
                0x3FF95587E,
                0x3FFACEF0C,
                0x3FFBF4E42,
                0x3FFCD9D5A,
                0x3FFD8C24F,
                0x3FFE17047,
                0x3FFE832CD,
                0x3FFED7690,
                0x3FFF19038,
                0x3FFF4C1B5,
                0x3FFF73E5F,
                0x3FFF92E36,
                0x3FFFAB060,
                0x3FFFBDD1F,
    };
    #endif // (defined(TINYMIND_USE_TANH_30_34))
    #if (defined(TINYMIND_USE_TANH_31_33))
    const uint64_t TanhValuesTableQ31_33::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFE00019C55,
                0xFFFFFFFE00021171,
                0xFFFFFFFE0002A7D0,
                0xFFFFFFFE000368E5,
                0xFFFFFFFE000460D1,
                0xFFFFFFFE00059F26,
                0xFFFFFFFE000737E4,
                0xFFFFFFFE000944B8,
                0xFFFFFFFE000BE69A,
                0xFFFFFFFE000F47DD,
                0xFFFFFFFE00139ED9,
                0xFFFFFFFE00193153,
                0xFFFFFFFE002058DF,
                0xFFFFFFFE0029887A,
                0xFFFFFFFE003553C1,
                0xFFFFFFFE00447830,
                0xFFFFFFFE0057E8F8,
                0xFFFFFFFE0070DE33,
                0xFFFFFFFE0090E859,
                0xFFFFFFFE00BA092D,
                0xFFFFFFFE00EED39D,
                0xFFFFFFFE01329482,
                0xFFFFFFFE018986A3,
                0xFFFFFFFE01F914FA,
                0xFFFFFFFE02882EEF,
                0xFFFFFFFE033FB325,
                0xFFFFFFFE042AF652,
                0xFFFFFFFE05586CB5,
                0xFFFFFFFE06DA7DA0,
                0xFFFFFFFE08C8894E,
                0xFFFFFFFE0B40293E,
                0xFFFFFFFE0E66B209,
                0xFFFFFFFE126AFA1F,
                0xFFFFFFFE17876132,
                0xFFFFFFFE1E040682,
                0xFFFFFFFE26390502,
                0xFFFFFFFE3090687A,
                0xFFFFFFFE3D875AD6,
                0xFFFFFFFE4DADC44A,
                0xFFFFFFFE61A34A46,
                0xFFFFFFFE7A1054AF,
                0xFFFFFFFE9799AF48,
                0xFFFFFFFEBACDC1AB,
                0xFFFFFFFEE40B8155,
                0xFFFFFFFF13656146,
                0xFFFFFFFF4885610C,
                0xFFFFFFFF829A0566,
                0xFFFFFFFFC054CDA9,
                0x0,
                0x3FAB3257,
                0x7D65FA9A,
                0xB77A9EF4,
                0xEC9A9EBA,
                0x11BF47EAB,
                0x145323E55,
                0x1686650B8,
                0x185EFAB51,
                0x19E5CB5BA,
                0x1B2523BB6,
                0x1C278A52A,
                0x1CF6F9786,
                0x1D9C6FAFE,
                0x1E1FBF97E,
                0x1E8789ECE,
                0x1ED9505E1,
                0x1F1994DF7,
                0x1F4BFD6C2,
                0x1F73776B2,
                0x1F9258260,
                0x1FAA7934B,
                0x1FBD509AE,
                0x1FCC04CDB,
                0x1FD77D111,
                0x1FE06EB06,
                0x1FE76795D,
                0x1FECD6B7E,
                0x1FF112C63,
                0x1FF45F6D3,
                0x1FF6F17A7,
                0x1FF8F21CD,
                0x1FFA81708,
                0x1FFBB87D0,
                0x1FFCAAC3F,
                0x1FFD67786,
                0x1FFDFA721,
                0x1FFE6CEAD,
                0x1FFEC6127,
                0x1FFF0B823,
                0x1FFF41966,
                0x1FFF6BB48,
                0x1FFF8C81C,
                0x1FFFA60DA,
                0x1FFFB9F2F,
                0x1FFFC971B,
                0x1FFFD5830,
                0x1FFFDEE8F,
    };
    #endif // (defined(TINYMIND_USE_TANH_31_33))
    #if (defined(TINYMIND_USE_TANH_32_32))
    const uint64_t TanhValuesTableQ32_32::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFF0000CE2B,
                0xFFFFFFFF000108B9,
                0xFFFFFFFF000153E8,
                0xFFFFFFFF0001B473,
                0xFFFFFFFF00023069,
                0xFFFFFFFF0002CF93,
                0xFFFFFFFF00039BF2,
                0xFFFFFFFF0004A25C,
                0xFFFFFFFF0005F34D,
                0xFFFFFFFF0007A3EF,
                0xFFFFFFFF0009CF6D,
                0xFFFFFFFF000C98AA,
                0xFFFFFFFF00102C70,
                0xFFFFFFFF0014C43D,
                0xFFFFFFFF001AA9E1,
                0xFFFFFFFF00223C18,
                0xFFFFFFFF002BF47C,
                0xFFFFFFFF00386F1A,
                0xFFFFFFFF0048742D,
                0xFFFFFFFF005D0497,
                0xFFFFFFFF007769CF,
                0xFFFFFFFF00994A41,
                0xFFFFFFFF00C4C352,
                0xFFFFFFFF00FC8A7D,
                0xFFFFFFFF01441778,
                0xFFFFFFFF019FD993,
                0xFFFFFFFF02157B29,
                0xFFFFFFFF02AC365B,
                0xFFFFFFFF036D3ED0,
                0xFFFFFFFF046444A7,
                0xFFFFFFFF05A0149F,
                0xFFFFFFFF07335905,
                0xFFFFFFFF09357D10,
                0xFFFFFFFF0BC3B099,
                0xFFFFFFFF0F020341,
                0xFFFFFFFF131C8281,
                0xFFFFFFFF1848343D,
                0xFFFFFFFF1EC3AD6B,
                0xFFFFFFFF26D6E225,
                0xFFFFFFFF30D1A523,
                0xFFFFFFFF3D082A58,
                0xFFFFFFFF4BCCD7A4,
                0xFFFFFFFF5D66E0D6,
                0xFFFFFFFF7205C0AB,
                0xFFFFFFFF89B2B0A3,
                0xFFFFFFFFA442B086,
                0xFFFFFFFFC14D02B3,
                0xFFFFFFFFE02A66D5,
                0x0,
                0x1FD5992B,
                0x3EB2FD4D,
                0x5BBD4F7A,
                0x764D4F5D,
                0x8DFA3F55,
                0xA2991F2A,
                0xB433285C,
                0xC2F7D5A8,
                0xCF2E5ADD,
                0xD9291DDB,
                0xE13C5295,
                0xE7B7CBC3,
                0xECE37D7F,
                0xF0FDFCBF,
                0xF43C4F67,
                0xF6CA82F0,
                0xF8CCA6FB,
                0xFA5FEB61,
                0xFB9BBB59,
                0xFC92C130,
                0xFD53C9A5,
                0xFDEA84D7,
                0xFE60266D,
                0xFEBBE888,
                0xFF037583,
                0xFF3B3CAE,
                0xFF66B5BF,
                0xFF889631,
                0xFFA2FB69,
                0xFFB78BD3,
                0xFFC790E6,
                0xFFD40B84,
                0xFFDDC3E8,
                0xFFE5561F,
                0xFFEB3BC3,
                0xFFEFD390,
                0xFFF36756,
                0xFFF63093,
                0xFFF85C11,
                0xFFFA0CB3,
                0xFFFB5DA4,
                0xFFFC640E,
                0xFFFD306D,
                0xFFFDCF97,
                0xFFFE4B8D,
                0xFFFEAC18,
                0xFFFEF747,
    };
    #endif // (defined(TINYMIND_USE_TANH_32_32))
    #if (defined(TINYMIND_USE_TANH_33_31))
    const uint64_t TanhValuesTableQ33_31::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFF80006716,
                0xFFFFFFFF8000845D,
                0xFFFFFFFF8000A9F4,
                0xFFFFFFFF8000DA3A,
                0xFFFFFFFF80011835,
                0xFFFFFFFF800167CA,
                0xFFFFFFFF8001CDF9,
                0xFFFFFFFF8002512E,
                0xFFFFFFFF8002F9A7,
                0xFFFFFFFF8003D1F8,
                0xFFFFFFFF8004E7B7,
                0xFFFFFFFF80064C55,
                0xFFFFFFFF80081638,
                0xFFFFFFFF800A621F,
                0xFFFFFFFF800D54F1,
                0xFFFFFFFF80111E0C,
                0xFFFFFFFF8015FA3E,
                0xFFFFFFFF801C378D,
                0xFFFFFFFF80243A17,
                0xFFFFFFFF802E824C,
                0xFFFFFFFF803BB4E8,
                0xFFFFFFFF804CA521,
                0xFFFFFFFF806261A9,
                0xFFFFFFFF807E453F,
                0xFFFFFFFF80A20BBC,
                0xFFFFFFFF80CFECCA,
                0xFFFFFFFF810ABD95,
                0xFFFFFFFF81561B2E,
                0xFFFFFFFF81B69F68,
                0xFFFFFFFF82322254,
                0xFFFFFFFF82D00A50,
                0xFFFFFFFF8399AC83,
                0xFFFFFFFF849ABE88,
                0xFFFFFFFF85E1D84D,
                0xFFFFFFFF878101A1,
                0xFFFFFFFF898E4141,
                0xFFFFFFFF8C241A1F,
                0xFFFFFFFF8F61D6B6,
                0xFFFFFFFF936B7113,
                0xFFFFFFFF9868D292,
                0xFFFFFFFF9E84152C,
                0xFFFFFFFFA5E66BD2,
                0xFFFFFFFFAEB3706B,
                0xFFFFFFFFB902E056,
                0xFFFFFFFFC4D95852,
                0xFFFFFFFFD2215843,
                0xFFFFFFFFE0A6815A,
                0xFFFFFFFFF015336B,
                0x0,
                0xFEACC95,
                0x1F597EA6,
                0x2DDEA7BD,
                0x3B26A7AE,
                0x46FD1FAA,
                0x514C8F95,
                0x5A19942E,
                0x617BEAD4,
                0x67972D6E,
                0x6C948EED,
                0x709E294A,
                0x73DBE5E1,
                0x7671BEBF,
                0x787EFE5F,
                0x7A1E27B3,
                0x7B654178,
                0x7C66537D,
                0x7D2FF5B0,
                0x7DCDDDAC,
                0x7E496098,
                0x7EA9E4D2,
                0x7EF5426B,
                0x7F301336,
                0x7F5DF444,
                0x7F81BAC1,
                0x7F9D9E57,
                0x7FB35ADF,
                0x7FC44B18,
                0x7FD17DB4,
                0x7FDBC5E9,
                0x7FE3C873,
                0x7FEA05C2,
                0x7FEEE1F4,
                0x7FF2AB0F,
                0x7FF59DE1,
                0x7FF7E9C8,
                0x7FF9B3AB,
                0x7FFB1849,
                0x7FFC2E08,
                0x7FFD0659,
                0x7FFDAED2,
                0x7FFE3207,
                0x7FFE9836,
                0x7FFEE7CB,
                0x7FFF25C6,
                0x7FFF560C,
                0x7FFF7BA3,
    };
    #endif // (defined(TINYMIND_USE_TANH_33_31))
    #if (defined(TINYMIND_USE_TANH_34_30))
    const uint64_t TanhValuesTableQ34_30::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFC000338B,
                0xFFFFFFFFC000422F,
                0xFFFFFFFFC00054FA,
                0xFFFFFFFFC0006D1D,
                0xFFFFFFFFC0008C1B,
                0xFFFFFFFFC000B3E5,
                0xFFFFFFFFC000E6FD,
                0xFFFFFFFFC0012897,
                0xFFFFFFFFC0017CD4,
                0xFFFFFFFFC001E8FC,
                0xFFFFFFFFC00273DC,
                0xFFFFFFFFC003262B,
                0xFFFFFFFFC0040B1C,
                0xFFFFFFFFC0053110,
                0xFFFFFFFFC006AA79,
                0xFFFFFFFFC0088F06,
                0xFFFFFFFFC00AFD1F,
                0xFFFFFFFFC00E1BC7,
                0xFFFFFFFFC0121D0C,
                0xFFFFFFFFC0174126,
                0xFFFFFFFFC01DDA74,
                0xFFFFFFFFC0265291,
                0xFFFFFFFFC03130D5,
                0xFFFFFFFFC03F22A0,
                0xFFFFFFFFC05105DE,
                0xFFFFFFFFC067F665,
                0xFFFFFFFFC0855ECB,
                0xFFFFFFFFC0AB0D97,
                0xFFFFFFFFC0DB4FB4,
                0xFFFFFFFFC119112A,
                0xFFFFFFFFC1680528,
                0xFFFFFFFFC1CCD642,
                0xFFFFFFFFC24D5F44,
                0xFFFFFFFFC2F0EC27,
                0xFFFFFFFFC3C080D1,
                0xFFFFFFFFC4C720A1,
                0xFFFFFFFFC6120D10,
                0xFFFFFFFFC7B0EB5B,
                0xFFFFFFFFC9B5B88A,
                0xFFFFFFFFCC346949,
                0xFFFFFFFFCF420A96,
                0xFFFFFFFFD2F335E9,
                0xFFFFFFFFD759B836,
                0xFFFFFFFFDC81702B,
                0xFFFFFFFFE26CAC29,
                0xFFFFFFFFE910AC22,
                0xFFFFFFFFF05340AD,
                0xFFFFFFFFF80A99B6,
                0x0,
                0x7F5664A,
                0xFACBF53,
                0x16EF53DE,
                0x1D9353D7,
                0x237E8FD5,
                0x28A647CA,
                0x2D0CCA17,
                0x30BDF56A,
                0x33CB96B7,
                0x364A4776,
                0x384F14A5,
                0x39EDF2F0,
                0x3B38DF5F,
                0x3C3F7F2F,
                0x3D0F13D9,
                0x3DB2A0BC,
                0x3E3329BE,
                0x3E97FAD8,
                0x3EE6EED6,
                0x3F24B04C,
                0x3F54F269,
                0x3F7AA135,
                0x3F98099B,
                0x3FAEFA22,
                0x3FC0DD60,
                0x3FCECF2B,
                0x3FD9AD6F,
                0x3FE2258C,
                0x3FE8BEDA,
                0x3FEDE2F4,
                0x3FF1E439,
                0x3FF502E1,
                0x3FF770FA,
                0x3FF95587,
                0x3FFACEF0,
                0x3FFBF4E4,
                0x3FFCD9D5,
                0x3FFD8C24,
                0x3FFE1704,
                0x3FFE832C,
                0x3FFED769,
                0x3FFF1903,
                0x3FFF4C1B,
                0x3FFF73E5,
                0x3FFF92E3,
                0x3FFFAB06,
                0x3FFFBDD1,
    };
    #endif // (defined(TINYMIND_USE_TANH_34_30))
    #if (defined(TINYMIND_USE_TANH_35_29))
    const uint64_t TanhValuesTableQ35_29::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFE00019C6,
                0xFFFFFFFFE0002118,
                0xFFFFFFFFE0002A7D,
                0xFFFFFFFFE000368F,
                0xFFFFFFFFE000460E,
                0xFFFFFFFFE00059F3,
                0xFFFFFFFFE000737F,
                0xFFFFFFFFE000944C,
                0xFFFFFFFFE000BE6A,
                0xFFFFFFFFE000F47E,
                0xFFFFFFFFE00139EE,
                0xFFFFFFFFE0019316,
                0xFFFFFFFFE002058E,
                0xFFFFFFFFE0029888,
                0xFFFFFFFFE003553D,
                0xFFFFFFFFE0044783,
                0xFFFFFFFFE0057E90,
                0xFFFFFFFFE0070DE4,
                0xFFFFFFFFE0090E86,
                0xFFFFFFFFE00BA093,
                0xFFFFFFFFE00EED3A,
                0xFFFFFFFFE0132949,
                0xFFFFFFFFE018986B,
                0xFFFFFFFFE01F9150,
                0xFFFFFFFFE02882EF,
                0xFFFFFFFFE033FB33,
                0xFFFFFFFFE042AF66,
                0xFFFFFFFFE05586CC,
                0xFFFFFFFFE06DA7DA,
                0xFFFFFFFFE08C8895,
                0xFFFFFFFFE0B40294,
                0xFFFFFFFFE0E66B21,
                0xFFFFFFFFE126AFA2,
                0xFFFFFFFFE1787614,
                0xFFFFFFFFE1E04069,
                0xFFFFFFFFE2639051,
                0xFFFFFFFFE3090688,
                0xFFFFFFFFE3D875AE,
                0xFFFFFFFFE4DADC45,
                0xFFFFFFFFE61A34A5,
                0xFFFFFFFFE7A1054B,
                0xFFFFFFFFE9799AF5,
                0xFFFFFFFFEBACDC1B,
                0xFFFFFFFFEE40B816,
                0xFFFFFFFFF1365615,
                0xFFFFFFFFF4885611,
                0xFFFFFFFFF829A057,
                0xFFFFFFFFFC054CDB,
                0x0,
                0x3FAB325,
                0x7D65FA9,
                0xB77A9EF,
                0xEC9A9EB,
                0x11BF47EA,
                0x145323E5,
                0x1686650B,
                0x185EFAB5,
                0x19E5CB5B,
                0x1B2523BB,
                0x1C278A52,
                0x1CF6F978,
                0x1D9C6FAF,
                0x1E1FBF97,
                0x1E8789EC,
                0x1ED9505E,
                0x1F1994DF,
                0x1F4BFD6C,
                0x1F73776B,
                0x1F925826,
                0x1FAA7934,
                0x1FBD509A,
                0x1FCC04CD,
                0x1FD77D11,
                0x1FE06EB0,
                0x1FE76795,
                0x1FECD6B7,
                0x1FF112C6,
                0x1FF45F6D,
                0x1FF6F17A,
                0x1FF8F21C,
                0x1FFA8170,
                0x1FFBB87D,
                0x1FFCAAC3,
                0x1FFD6778,
                0x1FFDFA72,
                0x1FFE6CEA,
                0x1FFEC612,
                0x1FFF0B82,
                0x1FFF4196,
                0x1FFF6BB4,
                0x1FFF8C81,
                0x1FFFA60D,
                0x1FFFB9F2,
                0x1FFFC971,
                0x1FFFD583,
                0x1FFFDEE8,
    };
    #endif // (defined(TINYMIND_USE_TANH_35_29))
    #if (defined(TINYMIND_USE_TANH_36_28))
    const uint64_t TanhValuesTableQ36_28::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFF0000CE3,
                0xFFFFFFFFF000108C,
                0xFFFFFFFFF000153F,
                0xFFFFFFFFF0001B48,
                0xFFFFFFFFF0002307,
                0xFFFFFFFFF0002CFA,
                0xFFFFFFFFF00039C0,
                0xFFFFFFFFF0004A26,
                0xFFFFFFFFF0005F35,
                0xFFFFFFFFF0007A3F,
                0xFFFFFFFFF0009CF7,
                0xFFFFFFFFF000C98B,
                0xFFFFFFFFF00102C7,
                0xFFFFFFFFF0014C44,
                0xFFFFFFFFF001AA9F,
                0xFFFFFFFFF00223C2,
                0xFFFFFFFFF002BF48,
                0xFFFFFFFFF00386F2,
                0xFFFFFFFFF0048743,
                0xFFFFFFFFF005D04A,
                0xFFFFFFFFF007769D,
                0xFFFFFFFFF00994A5,
                0xFFFFFFFFF00C4C36,
                0xFFFFFFFFF00FC8A8,
                0xFFFFFFFFF0144178,
                0xFFFFFFFFF019FD9A,
                0xFFFFFFFFF02157B3,
                0xFFFFFFFFF02AC366,
                0xFFFFFFFFF036D3ED,
                0xFFFFFFFFF046444B,
                0xFFFFFFFFF05A014A,
                0xFFFFFFFFF0733591,
                0xFFFFFFFFF09357D1,
                0xFFFFFFFFF0BC3B0A,
                0xFFFFFFFFF0F02035,
                0xFFFFFFFFF131C829,
                0xFFFFFFFFF1848344,
                0xFFFFFFFFF1EC3AD7,
                0xFFFFFFFFF26D6E23,
                0xFFFFFFFFF30D1A53,
                0xFFFFFFFFF3D082A6,
                0xFFFFFFFFF4BCCD7B,
                0xFFFFFFFFF5D66E0E,
                0xFFFFFFFFF7205C0B,
                0xFFFFFFFFF89B2B0B,
                0xFFFFFFFFFA442B09,
                0xFFFFFFFFFC14D02C,
                0xFFFFFFFFFE02A66E,
                0x0,
                0x1FD5992,
                0x3EB2FD4,
                0x5BBD4F7,
                0x764D4F5,
                0x8DFA3F5,
                0xA2991F2,
                0xB433285,
                0xC2F7D5A,
                0xCF2E5AD,
                0xD9291DD,
                0xE13C529,
                0xE7B7CBC,
                0xECE37D7,
                0xF0FDFCB,
                0xF43C4F6,
                0xF6CA82F,
                0xF8CCA6F,
                0xFA5FEB6,
                0xFB9BBB5,
                0xFC92C13,
                0xFD53C9A,
                0xFDEA84D,
                0xFE60266,
                0xFEBBE88,
                0xFF03758,
                0xFF3B3CA,
                0xFF66B5B,
                0xFF88963,
                0xFFA2FB6,
                0xFFB78BD,
                0xFFC790E,
                0xFFD40B8,
                0xFFDDC3E,
                0xFFE5561,
                0xFFEB3BC,
                0xFFEFD39,
                0xFFF3675,
                0xFFF6309,
                0xFFF85C1,
                0xFFFA0CB,
                0xFFFB5DA,
                0xFFFC640,
                0xFFFD306,
                0xFFFDCF9,
                0xFFFE4B8,
                0xFFFEAC1,
                0xFFFEF74,
    };
    #endif // (defined(TINYMIND_USE_TANH_36_28))
    #if (defined(TINYMIND_USE_TANH_37_27))
    const uint64_t TanhValuesTableQ37_27::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFF8000672,
                0xFFFFFFFFF8000846,
                0xFFFFFFFFF8000AA0,
                0xFFFFFFFFF8000DA4,
                0xFFFFFFFFF8001184,
                0xFFFFFFFFF800167D,
                0xFFFFFFFFF8001CE0,
                0xFFFFFFFFF8002513,
                0xFFFFFFFFF8002F9B,
                0xFFFFFFFFF8003D20,
                0xFFFFFFFFF8004E7C,
                0xFFFFFFFFF80064C6,
                0xFFFFFFFFF8008164,
                0xFFFFFFFFF800A622,
                0xFFFFFFFFF800D550,
                0xFFFFFFFFF80111E1,
                0xFFFFFFFFF8015FA4,
                0xFFFFFFFFF801C379,
                0xFFFFFFFFF80243A2,
                0xFFFFFFFFF802E825,
                0xFFFFFFFFF803BB4F,
                0xFFFFFFFFF804CA53,
                0xFFFFFFFFF806261B,
                0xFFFFFFFFF807E454,
                0xFFFFFFFFF80A20BC,
                0xFFFFFFFFF80CFECD,
                0xFFFFFFFFF810ABDA,
                0xFFFFFFFFF81561B3,
                0xFFFFFFFFF81B69F7,
                0xFFFFFFFFF8232226,
                0xFFFFFFFFF82D00A5,
                0xFFFFFFFFF8399AC9,
                0xFFFFFFFFF849ABE9,
                0xFFFFFFFFF85E1D85,
                0xFFFFFFFFF878101B,
                0xFFFFFFFFF898E415,
                0xFFFFFFFFF8C241A2,
                0xFFFFFFFFF8F61D6C,
                0xFFFFFFFFF936B712,
                0xFFFFFFFFF9868D2A,
                0xFFFFFFFFF9E84153,
                0xFFFFFFFFFA5E66BE,
                0xFFFFFFFFFAEB3707,
                0xFFFFFFFFFB902E06,
                0xFFFFFFFFFC4D9586,
                0xFFFFFFFFFD221585,
                0xFFFFFFFFFE0A6816,
                0xFFFFFFFFFF015337,
                0x0,
                0xFEACC9,
                0x1F597EA,
                0x2DDEA7B,
                0x3B26A7A,
                0x46FD1FA,
                0x514C8F9,
                0x5A19942,
                0x617BEAD,
                0x67972D6,
                0x6C948EE,
                0x709E294,
                0x73DBE5E,
                0x7671BEB,
                0x787EFE5,
                0x7A1E27B,
                0x7B65417,
                0x7C66537,
                0x7D2FF5B,
                0x7DCDDDA,
                0x7E49609,
                0x7EA9E4D,
                0x7EF5426,
                0x7F30133,
                0x7F5DF44,
                0x7F81BAC,
                0x7F9D9E5,
                0x7FB35AD,
                0x7FC44B1,
                0x7FD17DB,
                0x7FDBC5E,
                0x7FE3C87,
                0x7FEA05C,
                0x7FEEE1F,
                0x7FF2AB0,
                0x7FF59DE,
                0x7FF7E9C,
                0x7FF9B3A,
                0x7FFB184,
                0x7FFC2E0,
                0x7FFD065,
                0x7FFDAED,
                0x7FFE320,
                0x7FFE983,
                0x7FFEE7C,
                0x7FFF25C,
                0x7FFF560,
                0x7FFF7BA,
    };
    #endif // (defined(TINYMIND_USE_TANH_37_27))
    #if (defined(TINYMIND_USE_TANH_38_26))
    const uint64_t TanhValuesTableQ38_26::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFC000339,
                0xFFFFFFFFFC000423,
                0xFFFFFFFFFC000550,
                0xFFFFFFFFFC0006D2,
                0xFFFFFFFFFC0008C2,
                0xFFFFFFFFFC000B3F,
                0xFFFFFFFFFC000E70,
                0xFFFFFFFFFC00128A,
                0xFFFFFFFFFC0017CE,
                0xFFFFFFFFFC001E90,
                0xFFFFFFFFFC00273E,
                0xFFFFFFFFFC003263,
                0xFFFFFFFFFC0040B2,
                0xFFFFFFFFFC005311,
                0xFFFFFFFFFC006AA8,
                0xFFFFFFFFFC0088F1,
                0xFFFFFFFFFC00AFD2,
                0xFFFFFFFFFC00E1BD,
                0xFFFFFFFFFC0121D1,
                0xFFFFFFFFFC017413,
                0xFFFFFFFFFC01DDA8,
                0xFFFFFFFFFC02652A,
                0xFFFFFFFFFC03130E,
                0xFFFFFFFFFC03F22A,
                0xFFFFFFFFFC05105E,
                0xFFFFFFFFFC067F67,
                0xFFFFFFFFFC0855ED,
                0xFFFFFFFFFC0AB0DA,
                0xFFFFFFFFFC0DB4FC,
                0xFFFFFFFFFC119113,
                0xFFFFFFFFFC168053,
                0xFFFFFFFFFC1CCD65,
                0xFFFFFFFFFC24D5F5,
                0xFFFFFFFFFC2F0EC3,
                0xFFFFFFFFFC3C080E,
                0xFFFFFFFFFC4C720B,
                0xFFFFFFFFFC6120D1,
                0xFFFFFFFFFC7B0EB6,
                0xFFFFFFFFFC9B5B89,
                0xFFFFFFFFFCC34695,
                0xFFFFFFFFFCF420AA,
                0xFFFFFFFFFD2F335F,
                0xFFFFFFFFFD759B84,
                0xFFFFFFFFFDC81703,
                0xFFFFFFFFFE26CAC3,
                0xFFFFFFFFFE910AC3,
                0xFFFFFFFFFF05340B,
                0xFFFFFFFFFF80A99C,
                0x0,
                0x7F5664,
                0xFACBF5,
                0x16EF53D,
                0x1D9353D,
                0x237E8FD,
                0x28A647C,
                0x2D0CCA1,
                0x30BDF56,
                0x33CB96B,
                0x364A477,
                0x384F14A,
                0x39EDF2F,
                0x3B38DF5,
                0x3C3F7F2,
                0x3D0F13D,
                0x3DB2A0B,
                0x3E3329B,
                0x3E97FAD,
                0x3EE6EED,
                0x3F24B04,
                0x3F54F26,
                0x3F7AA13,
                0x3F98099,
                0x3FAEFA2,
                0x3FC0DD6,
                0x3FCECF2,
                0x3FD9AD6,
                0x3FE2258,
                0x3FE8BED,
                0x3FEDE2F,
                0x3FF1E43,
                0x3FF502E,
                0x3FF770F,
                0x3FF9558,
                0x3FFACEF,
                0x3FFBF4E,
                0x3FFCD9D,
                0x3FFD8C2,
                0x3FFE170,
                0x3FFE832,
                0x3FFED76,
                0x3FFF190,
                0x3FFF4C1,
                0x3FFF73E,
                0x3FFF92E,
                0x3FFFAB0,
                0x3FFFBDD,
    };
    #endif // (defined(TINYMIND_USE_TANH_38_26))
    #if (defined(TINYMIND_USE_TANH_39_25))
    const uint64_t TanhValuesTableQ39_25::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFE00019D,
                0xFFFFFFFFFE000212,
                0xFFFFFFFFFE0002A8,
                0xFFFFFFFFFE000369,
                0xFFFFFFFFFE000461,
                0xFFFFFFFFFE0005A0,
                0xFFFFFFFFFE000738,
                0xFFFFFFFFFE000945,
                0xFFFFFFFFFE000BE7,
                0xFFFFFFFFFE000F48,
                0xFFFFFFFFFE00139F,
                0xFFFFFFFFFE001932,
                0xFFFFFFFFFE002059,
                0xFFFFFFFFFE002989,
                0xFFFFFFFFFE003554,
                0xFFFFFFFFFE004479,
                0xFFFFFFFFFE0057E9,
                0xFFFFFFFFFE0070DF,
                0xFFFFFFFFFE0090E9,
                0xFFFFFFFFFE00BA0A,
                0xFFFFFFFFFE00EED4,
                0xFFFFFFFFFE013295,
                0xFFFFFFFFFE018987,
                0xFFFFFFFFFE01F915,
                0xFFFFFFFFFE02882F,
                0xFFFFFFFFFE033FB4,
                0xFFFFFFFFFE042AF7,
                0xFFFFFFFFFE05586D,
                0xFFFFFFFFFE06DA7E,
                0xFFFFFFFFFE08C88A,
                0xFFFFFFFFFE0B402A,
                0xFFFFFFFFFE0E66B3,
                0xFFFFFFFFFE126AFB,
                0xFFFFFFFFFE178762,
                0xFFFFFFFFFE1E0407,
                0xFFFFFFFFFE263906,
                0xFFFFFFFFFE309069,
                0xFFFFFFFFFE3D875B,
                0xFFFFFFFFFE4DADC5,
                0xFFFFFFFFFE61A34B,
                0xFFFFFFFFFE7A1055,
                0xFFFFFFFFFE9799B0,
                0xFFFFFFFFFEBACDC2,
                0xFFFFFFFFFEE40B82,
                0xFFFFFFFFFF136562,
                0xFFFFFFFFFF488562,
                0xFFFFFFFFFF829A06,
                0xFFFFFFFFFFC054CE,
                0x0,
                0x3FAB32,
                0x7D65FA,
                0xB77A9E,
                0xEC9A9E,
                0x11BF47E,
                0x145323E,
                0x1686650,
                0x185EFAB,
                0x19E5CB5,
                0x1B2523B,
                0x1C278A5,
                0x1CF6F97,
                0x1D9C6FA,
                0x1E1FBF9,
                0x1E8789E,
                0x1ED9505,
                0x1F1994D,
                0x1F4BFD6,
                0x1F73776,
                0x1F92582,
                0x1FAA793,
                0x1FBD509,
                0x1FCC04C,
                0x1FD77D1,
                0x1FE06EB,
                0x1FE7679,
                0x1FECD6B,
                0x1FF112C,
                0x1FF45F6,
                0x1FF6F17,
                0x1FF8F21,
                0x1FFA817,
                0x1FFBB87,
                0x1FFCAAC,
                0x1FFD677,
                0x1FFDFA7,
                0x1FFE6CE,
                0x1FFEC61,
                0x1FFF0B8,
                0x1FFF419,
                0x1FFF6BB,
                0x1FFF8C8,
                0x1FFFA60,
                0x1FFFB9F,
                0x1FFFC97,
                0x1FFFD58,
                0x1FFFDEE,
    };
    #endif // (defined(TINYMIND_USE_TANH_39_25))
    #if (defined(TINYMIND_USE_TANH_40_24))
    const uint64_t TanhValuesTableQ40_24::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFF0000CF,
                0xFFFFFFFFFF000109,
                0xFFFFFFFFFF000154,
                0xFFFFFFFFFF0001B5,
                0xFFFFFFFFFF000231,
                0xFFFFFFFFFF0002D0,
                0xFFFFFFFFFF00039C,
                0xFFFFFFFFFF0004A3,
                0xFFFFFFFFFF0005F4,
                0xFFFFFFFFFF0007A4,
                0xFFFFFFFFFF0009D0,
                0xFFFFFFFFFF000C99,
                0xFFFFFFFFFF00102D,
                0xFFFFFFFFFF0014C5,
                0xFFFFFFFFFF001AAA,
                0xFFFFFFFFFF00223D,
                0xFFFFFFFFFF002BF5,
                0xFFFFFFFFFF003870,
                0xFFFFFFFFFF004875,
                0xFFFFFFFFFF005D05,
                0xFFFFFFFFFF00776A,
                0xFFFFFFFFFF00994B,
                0xFFFFFFFFFF00C4C4,
                0xFFFFFFFFFF00FC8B,
                0xFFFFFFFFFF014418,
                0xFFFFFFFFFF019FDA,
                0xFFFFFFFFFF02157C,
                0xFFFFFFFFFF02AC37,
                0xFFFFFFFFFF036D3F,
                0xFFFFFFFFFF046445,
                0xFFFFFFFFFF05A015,
                0xFFFFFFFFFF07335A,
                0xFFFFFFFFFF09357E,
                0xFFFFFFFFFF0BC3B1,
                0xFFFFFFFFFF0F0204,
                0xFFFFFFFFFF131C83,
                0xFFFFFFFFFF184835,
                0xFFFFFFFFFF1EC3AE,
                0xFFFFFFFFFF26D6E3,
                0xFFFFFFFFFF30D1A6,
                0xFFFFFFFFFF3D082B,
                0xFFFFFFFFFF4BCCD8,
                0xFFFFFFFFFF5D66E1,
                0xFFFFFFFFFF7205C1,
                0xFFFFFFFFFF89B2B1,
                0xFFFFFFFFFFA442B1,
                0xFFFFFFFFFFC14D03,
                0xFFFFFFFFFFE02A67,
                0x0,
                0x1FD599,
                0x3EB2FD,
                0x5BBD4F,
                0x764D4F,
                0x8DFA3F,
                0xA2991F,
                0xB43328,
                0xC2F7D5,
                0xCF2E5A,
                0xD9291D,
                0xE13C52,
                0xE7B7CB,
                0xECE37D,
                0xF0FDFC,
                0xF43C4F,
                0xF6CA82,
                0xF8CCA6,
                0xFA5FEB,
                0xFB9BBB,
                0xFC92C1,
                0xFD53C9,
                0xFDEA84,
                0xFE6026,
                0xFEBBE8,
                0xFF0375,
                0xFF3B3C,
                0xFF66B5,
                0xFF8896,
                0xFFA2FB,
                0xFFB78B,
                0xFFC790,
                0xFFD40B,
                0xFFDDC3,
                0xFFE556,
                0xFFEB3B,
                0xFFEFD3,
                0xFFF367,
                0xFFF630,
                0xFFF85C,
                0xFFFA0C,
                0xFFFB5D,
                0xFFFC64,
                0xFFFD30,
                0xFFFDCF,
                0xFFFE4B,
                0xFFFEAC,
                0xFFFEF7,
    };
    #endif // (defined(TINYMIND_USE_TANH_40_24))
    #if (defined(TINYMIND_USE_TANH_41_23))
    const uint64_t TanhValuesTableQ41_23::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFF800068,
                0xFFFFFFFFFF800085,
                0xFFFFFFFFFF8000AA,
                0xFFFFFFFFFF8000DB,
                0xFFFFFFFFFF800119,
                0xFFFFFFFFFF800168,
                0xFFFFFFFFFF8001CE,
                0xFFFFFFFFFF800252,
                0xFFFFFFFFFF8002FA,
                0xFFFFFFFFFF8003D2,
                0xFFFFFFFFFF8004E8,
                0xFFFFFFFFFF80064D,
                0xFFFFFFFFFF800817,
                0xFFFFFFFFFF800A63,
                0xFFFFFFFFFF800D55,
                0xFFFFFFFFFF80111F,
                0xFFFFFFFFFF8015FB,
                0xFFFFFFFFFF801C38,
                0xFFFFFFFFFF80243B,
                0xFFFFFFFFFF802E83,
                0xFFFFFFFFFF803BB5,
                0xFFFFFFFFFF804CA6,
                0xFFFFFFFFFF806262,
                0xFFFFFFFFFF807E46,
                0xFFFFFFFFFF80A20C,
                0xFFFFFFFFFF80CFED,
                0xFFFFFFFFFF810ABE,
                0xFFFFFFFFFF81561C,
                0xFFFFFFFFFF81B6A0,
                0xFFFFFFFFFF823223,
                0xFFFFFFFFFF82D00B,
                0xFFFFFFFFFF8399AD,
                0xFFFFFFFFFF849ABF,
                0xFFFFFFFFFF85E1D9,
                0xFFFFFFFFFF878102,
                0xFFFFFFFFFF898E42,
                0xFFFFFFFFFF8C241B,
                0xFFFFFFFFFF8F61D7,
                0xFFFFFFFFFF936B72,
                0xFFFFFFFFFF9868D3,
                0xFFFFFFFFFF9E8416,
                0xFFFFFFFFFFA5E66C,
                0xFFFFFFFFFFAEB371,
                0xFFFFFFFFFFB902E1,
                0xFFFFFFFFFFC4D959,
                0xFFFFFFFFFFD22159,
                0xFFFFFFFFFFE0A682,
                0xFFFFFFFFFFF01534,
                0x0,
                0xFEACC,
                0x1F597E,
                0x2DDEA7,
                0x3B26A7,
                0x46FD1F,
                0x514C8F,
                0x5A1994,
                0x617BEA,
                0x67972D,
                0x6C948E,
                0x709E29,
                0x73DBE5,
                0x7671BE,
                0x787EFE,
                0x7A1E27,
                0x7B6541,
                0x7C6653,
                0x7D2FF5,
                0x7DCDDD,
                0x7E4960,
                0x7EA9E4,
                0x7EF542,
                0x7F3013,
                0x7F5DF4,
                0x7F81BA,
                0x7F9D9E,
                0x7FB35A,
                0x7FC44B,
                0x7FD17D,
                0x7FDBC5,
                0x7FE3C8,
                0x7FEA05,
                0x7FEEE1,
                0x7FF2AB,
                0x7FF59D,
                0x7FF7E9,
                0x7FF9B3,
                0x7FFB18,
                0x7FFC2E,
                0x7FFD06,
                0x7FFDAE,
                0x7FFE32,
                0x7FFE98,
                0x7FFEE7,
                0x7FFF25,
                0x7FFF56,
                0x7FFF7B,
    };
    #endif // (defined(TINYMIND_USE_TANH_41_23))
    #if (defined(TINYMIND_USE_TANH_42_22))
    const uint64_t TanhValuesTableQ42_22::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFC00034,
                0xFFFFFFFFFFC00043,
                0xFFFFFFFFFFC00055,
                0xFFFFFFFFFFC0006E,
                0xFFFFFFFFFFC0008D,
                0xFFFFFFFFFFC000B4,
                0xFFFFFFFFFFC000E7,
                0xFFFFFFFFFFC00129,
                0xFFFFFFFFFFC0017D,
                0xFFFFFFFFFFC001E9,
                0xFFFFFFFFFFC00274,
                0xFFFFFFFFFFC00327,
                0xFFFFFFFFFFC0040C,
                0xFFFFFFFFFFC00532,
                0xFFFFFFFFFFC006AB,
                0xFFFFFFFFFFC00890,
                0xFFFFFFFFFFC00AFE,
                0xFFFFFFFFFFC00E1C,
                0xFFFFFFFFFFC0121E,
                0xFFFFFFFFFFC01742,
                0xFFFFFFFFFFC01DDB,
                0xFFFFFFFFFFC02653,
                0xFFFFFFFFFFC03131,
                0xFFFFFFFFFFC03F23,
                0xFFFFFFFFFFC05106,
                0xFFFFFFFFFFC067F7,
                0xFFFFFFFFFFC0855F,
                0xFFFFFFFFFFC0AB0E,
                0xFFFFFFFFFFC0DB50,
                0xFFFFFFFFFFC11912,
                0xFFFFFFFFFFC16806,
                0xFFFFFFFFFFC1CCD7,
                0xFFFFFFFFFFC24D60,
                0xFFFFFFFFFFC2F0ED,
                0xFFFFFFFFFFC3C081,
                0xFFFFFFFFFFC4C721,
                0xFFFFFFFFFFC6120E,
                0xFFFFFFFFFFC7B0EC,
                0xFFFFFFFFFFC9B5B9,
                0xFFFFFFFFFFCC346A,
                0xFFFFFFFFFFCF420B,
                0xFFFFFFFFFFD2F336,
                0xFFFFFFFFFFD759B9,
                0xFFFFFFFFFFDC8171,
                0xFFFFFFFFFFE26CAD,
                0xFFFFFFFFFFE910AD,
                0xFFFFFFFFFFF05341,
                0xFFFFFFFFFFF80A9A,
                0x0,
                0x7F566,
                0xFACBF,
                0x16EF53,
                0x1D9353,
                0x237E8F,
                0x28A647,
                0x2D0CCA,
                0x30BDF5,
                0x33CB96,
                0x364A47,
                0x384F14,
                0x39EDF2,
                0x3B38DF,
                0x3C3F7F,
                0x3D0F13,
                0x3DB2A0,
                0x3E3329,
                0x3E97FA,
                0x3EE6EE,
                0x3F24B0,
                0x3F54F2,
                0x3F7AA1,
                0x3F9809,
                0x3FAEFA,
                0x3FC0DD,
                0x3FCECF,
                0x3FD9AD,
                0x3FE225,
                0x3FE8BE,
                0x3FEDE2,
                0x3FF1E4,
                0x3FF502,
                0x3FF770,
                0x3FF955,
                0x3FFACE,
                0x3FFBF4,
                0x3FFCD9,
                0x3FFD8C,
                0x3FFE17,
                0x3FFE83,
                0x3FFED7,
                0x3FFF19,
                0x3FFF4C,
                0x3FFF73,
                0x3FFF92,
                0x3FFFAB,
                0x3FFFBD,
    };
    #endif // (defined(TINYMIND_USE_TANH_42_22))
    #if (defined(TINYMIND_USE_TANH_43_21))
    const uint64_t TanhValuesTableQ43_21::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFE0001A,
                0xFFFFFFFFFFE00022,
                0xFFFFFFFFFFE0002B,
                0xFFFFFFFFFFE00037,
                0xFFFFFFFFFFE00047,
                0xFFFFFFFFFFE0005A,
                0xFFFFFFFFFFE00074,
                0xFFFFFFFFFFE00095,
                0xFFFFFFFFFFE000BF,
                0xFFFFFFFFFFE000F5,
                0xFFFFFFFFFFE0013A,
                0xFFFFFFFFFFE00194,
                0xFFFFFFFFFFE00206,
                0xFFFFFFFFFFE00299,
                0xFFFFFFFFFFE00356,
                0xFFFFFFFFFFE00448,
                0xFFFFFFFFFFE0057F,
                0xFFFFFFFFFFE0070E,
                0xFFFFFFFFFFE0090F,
                0xFFFFFFFFFFE00BA1,
                0xFFFFFFFFFFE00EEE,
                0xFFFFFFFFFFE0132A,
                0xFFFFFFFFFFE01899,
                0xFFFFFFFFFFE01F92,
                0xFFFFFFFFFFE02883,
                0xFFFFFFFFFFE033FC,
                0xFFFFFFFFFFE042B0,
                0xFFFFFFFFFFE05587,
                0xFFFFFFFFFFE06DA8,
                0xFFFFFFFFFFE08C89,
                0xFFFFFFFFFFE0B403,
                0xFFFFFFFFFFE0E66C,
                0xFFFFFFFFFFE126B0,
                0xFFFFFFFFFFE17877,
                0xFFFFFFFFFFE1E041,
                0xFFFFFFFFFFE26391,
                0xFFFFFFFFFFE30907,
                0xFFFFFFFFFFE3D876,
                0xFFFFFFFFFFE4DADD,
                0xFFFFFFFFFFE61A35,
                0xFFFFFFFFFFE7A106,
                0xFFFFFFFFFFE9799B,
                0xFFFFFFFFFFEBACDD,
                0xFFFFFFFFFFEE40B9,
                0xFFFFFFFFFFF13657,
                0xFFFFFFFFFFF48857,
                0xFFFFFFFFFFF829A1,
                0xFFFFFFFFFFFC054D,
                0x0,
                0x3FAB3,
                0x7D65F,
                0xB77A9,
                0xEC9A9,
                0x11BF47,
                0x145323,
                0x168665,
                0x185EFA,
                0x19E5CB,
                0x1B2523,
                0x1C278A,
                0x1CF6F9,
                0x1D9C6F,
                0x1E1FBF,
                0x1E8789,
                0x1ED950,
                0x1F1994,
                0x1F4BFD,
                0x1F7377,
                0x1F9258,
                0x1FAA79,
                0x1FBD50,
                0x1FCC04,
                0x1FD77D,
                0x1FE06E,
                0x1FE767,
                0x1FECD6,
                0x1FF112,
                0x1FF45F,
                0x1FF6F1,
                0x1FF8F2,
                0x1FFA81,
                0x1FFBB8,
                0x1FFCAA,
                0x1FFD67,
                0x1FFDFA,
                0x1FFE6C,
                0x1FFEC6,
                0x1FFF0B,
                0x1FFF41,
                0x1FFF6B,
                0x1FFF8C,
                0x1FFFA6,
                0x1FFFB9,
                0x1FFFC9,
                0x1FFFD5,
                0x1FFFDE,
    };
    #endif // (defined(TINYMIND_USE_TANH_43_21))
    #if (defined(TINYMIND_USE_TANH_44_20))
    const uint64_t TanhValuesTableQ44_20::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFF0000D,
                0xFFFFFFFFFFF00011,
                0xFFFFFFFFFFF00016,
                0xFFFFFFFFFFF0001C,
                0xFFFFFFFFFFF00024,
                0xFFFFFFFFFFF0002D,
                0xFFFFFFFFFFF0003A,
                0xFFFFFFFFFFF0004B,
                0xFFFFFFFFFFF00060,
                0xFFFFFFFFFFF0007B,
                0xFFFFFFFFFFF0009D,
                0xFFFFFFFFFFF000CA,
                0xFFFFFFFFFFF00103,
                0xFFFFFFFFFFF0014D,
                0xFFFFFFFFFFF001AB,
                0xFFFFFFFFFFF00224,
                0xFFFFFFFFFFF002C0,
                0xFFFFFFFFFFF00387,
                0xFFFFFFFFFFF00488,
                0xFFFFFFFFFFF005D1,
                0xFFFFFFFFFFF00777,
                0xFFFFFFFFFFF00995,
                0xFFFFFFFFFFF00C4D,
                0xFFFFFFFFFFF00FC9,
                0xFFFFFFFFFFF01442,
                0xFFFFFFFFFFF019FE,
                0xFFFFFFFFFFF02158,
                0xFFFFFFFFFFF02AC4,
                0xFFFFFFFFFFF036D4,
                0xFFFFFFFFFFF04645,
                0xFFFFFFFFFFF05A02,
                0xFFFFFFFFFFF07336,
                0xFFFFFFFFFFF09358,
                0xFFFFFFFFFFF0BC3C,
                0xFFFFFFFFFFF0F021,
                0xFFFFFFFFFFF131C9,
                0xFFFFFFFFFFF18484,
                0xFFFFFFFFFFF1EC3B,
                0xFFFFFFFFFFF26D6F,
                0xFFFFFFFFFFF30D1B,
                0xFFFFFFFFFFF3D083,
                0xFFFFFFFFFFF4BCCE,
                0xFFFFFFFFFFF5D66F,
                0xFFFFFFFFFFF7205D,
                0xFFFFFFFFFFF89B2C,
                0xFFFFFFFFFFFA442C,
                0xFFFFFFFFFFFC14D1,
                0xFFFFFFFFFFFE02A7,
                0x0,
                0x1FD59,
                0x3EB2F,
                0x5BBD4,
                0x764D4,
                0x8DFA3,
                0xA2991,
                0xB4332,
                0xC2F7D,
                0xCF2E5,
                0xD9291,
                0xE13C5,
                0xE7B7C,
                0xECE37,
                0xF0FDF,
                0xF43C4,
                0xF6CA8,
                0xF8CCA,
                0xFA5FE,
                0xFB9BB,
                0xFC92C,
                0xFD53C,
                0xFDEA8,
                0xFE602,
                0xFEBBE,
                0xFF037,
                0xFF3B3,
                0xFF66B,
                0xFF889,
                0xFFA2F,
                0xFFB78,
                0xFFC79,
                0xFFD40,
                0xFFDDC,
                0xFFE55,
                0xFFEB3,
                0xFFEFD,
                0xFFF36,
                0xFFF63,
                0xFFF85,
                0xFFFA0,
                0xFFFB5,
                0xFFFC6,
                0xFFFD3,
                0xFFFDC,
                0xFFFE4,
                0xFFFEA,
                0xFFFEF,
    };
    #endif // (defined(TINYMIND_USE_TANH_44_20))
    #if (defined(TINYMIND_USE_TANH_45_19))
    const uint64_t TanhValuesTableQ45_19::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFF80007,
                0xFFFFFFFFFFF80009,
                0xFFFFFFFFFFF8000B,
                0xFFFFFFFFFFF8000E,
                0xFFFFFFFFFFF80012,
                0xFFFFFFFFFFF80017,
                0xFFFFFFFFFFF8001D,
                0xFFFFFFFFFFF80026,
                0xFFFFFFFFFFF80030,
                0xFFFFFFFFFFF8003E,
                0xFFFFFFFFFFF8004F,
                0xFFFFFFFFFFF80065,
                0xFFFFFFFFFFF80082,
                0xFFFFFFFFFFF800A7,
                0xFFFFFFFFFFF800D6,
                0xFFFFFFFFFFF80112,
                0xFFFFFFFFFFF80160,
                0xFFFFFFFFFFF801C4,
                0xFFFFFFFFFFF80244,
                0xFFFFFFFFFFF802E9,
                0xFFFFFFFFFFF803BC,
                0xFFFFFFFFFFF804CB,
                0xFFFFFFFFFFF80627,
                0xFFFFFFFFFFF807E5,
                0xFFFFFFFFFFF80A21,
                0xFFFFFFFFFFF80CFF,
                0xFFFFFFFFFFF810AC,
                0xFFFFFFFFFFF81562,
                0xFFFFFFFFFFF81B6A,
                0xFFFFFFFFFFF82323,
                0xFFFFFFFFFFF82D01,
                0xFFFFFFFFFFF8399B,
                0xFFFFFFFFFFF849AC,
                0xFFFFFFFFFFF85E1E,
                0xFFFFFFFFFFF87811,
                0xFFFFFFFFFFF898E5,
                0xFFFFFFFFFFF8C242,
                0xFFFFFFFFFFF8F61E,
                0xFFFFFFFFFFF936B8,
                0xFFFFFFFFFFF9868E,
                0xFFFFFFFFFFF9E842,
                0xFFFFFFFFFFFA5E67,
                0xFFFFFFFFFFFAEB38,
                0xFFFFFFFFFFFB902F,
                0xFFFFFFFFFFFC4D96,
                0xFFFFFFFFFFFD2216,
                0xFFFFFFFFFFFE0A69,
                0xFFFFFFFFFFFF0154,
                0x0,
                0xFEAC,
                0x1F597,
                0x2DDEA,
                0x3B26A,
                0x46FD1,
                0x514C8,
                0x5A199,
                0x617BE,
                0x67972,
                0x6C948,
                0x709E2,
                0x73DBE,
                0x7671B,
                0x787EF,
                0x7A1E2,
                0x7B654,
                0x7C665,
                0x7D2FF,
                0x7DCDD,
                0x7E496,
                0x7EA9E,
                0x7EF54,
                0x7F301,
                0x7F5DF,
                0x7F81B,
                0x7F9D9,
                0x7FB35,
                0x7FC44,
                0x7FD17,
                0x7FDBC,
                0x7FE3C,
                0x7FEA0,
                0x7FEEE,
                0x7FF2A,
                0x7FF59,
                0x7FF7E,
                0x7FF9B,
                0x7FFB1,
                0x7FFC2,
                0x7FFD0,
                0x7FFDA,
                0x7FFE3,
                0x7FFE9,
                0x7FFEE,
                0x7FFF2,
                0x7FFF5,
                0x7FFF7,
    };
    #endif // (defined(TINYMIND_USE_TANH_45_19))
    #if (defined(TINYMIND_USE_TANH_46_18))
    const uint64_t TanhValuesTableQ46_18::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFC0004,
                0xFFFFFFFFFFFC0005,
                0xFFFFFFFFFFFC0006,
                0xFFFFFFFFFFFC0007,
                0xFFFFFFFFFFFC0009,
                0xFFFFFFFFFFFC000C,
                0xFFFFFFFFFFFC000F,
                0xFFFFFFFFFFFC0013,
                0xFFFFFFFFFFFC0018,
                0xFFFFFFFFFFFC001F,
                0xFFFFFFFFFFFC0028,
                0xFFFFFFFFFFFC0033,
                0xFFFFFFFFFFFC0041,
                0xFFFFFFFFFFFC0054,
                0xFFFFFFFFFFFC006B,
                0xFFFFFFFFFFFC0089,
                0xFFFFFFFFFFFC00B0,
                0xFFFFFFFFFFFC00E2,
                0xFFFFFFFFFFFC0122,
                0xFFFFFFFFFFFC0175,
                0xFFFFFFFFFFFC01DE,
                0xFFFFFFFFFFFC0266,
                0xFFFFFFFFFFFC0314,
                0xFFFFFFFFFFFC03F3,
                0xFFFFFFFFFFFC0511,
                0xFFFFFFFFFFFC0680,
                0xFFFFFFFFFFFC0856,
                0xFFFFFFFFFFFC0AB1,
                0xFFFFFFFFFFFC0DB5,
                0xFFFFFFFFFFFC1192,
                0xFFFFFFFFFFFC1681,
                0xFFFFFFFFFFFC1CCE,
                0xFFFFFFFFFFFC24D6,
                0xFFFFFFFFFFFC2F0F,
                0xFFFFFFFFFFFC3C09,
                0xFFFFFFFFFFFC4C73,
                0xFFFFFFFFFFFC6121,
                0xFFFFFFFFFFFC7B0F,
                0xFFFFFFFFFFFC9B5C,
                0xFFFFFFFFFFFCC347,
                0xFFFFFFFFFFFCF421,
                0xFFFFFFFFFFFD2F34,
                0xFFFFFFFFFFFD759C,
                0xFFFFFFFFFFFDC818,
                0xFFFFFFFFFFFE26CB,
                0xFFFFFFFFFFFE910B,
                0xFFFFFFFFFFFF0535,
                0xFFFFFFFFFFFF80AA,
                0x0,
                0x7F56,
                0xFACB,
                0x16EF5,
                0x1D935,
                0x237E8,
                0x28A64,
                0x2D0CC,
                0x30BDF,
                0x33CB9,
                0x364A4,
                0x384F1,
                0x39EDF,
                0x3B38D,
                0x3C3F7,
                0x3D0F1,
                0x3DB2A,
                0x3E332,
                0x3E97F,
                0x3EE6E,
                0x3F24B,
                0x3F54F,
                0x3F7AA,
                0x3F980,
                0x3FAEF,
                0x3FC0D,
                0x3FCEC,
                0x3FD9A,
                0x3FE22,
                0x3FE8B,
                0x3FEDE,
                0x3FF1E,
                0x3FF50,
                0x3FF77,
                0x3FF95,
                0x3FFAC,
                0x3FFBF,
                0x3FFCD,
                0x3FFD8,
                0x3FFE1,
                0x3FFE8,
                0x3FFED,
                0x3FFF1,
                0x3FFF4,
                0x3FFF7,
                0x3FFF9,
                0x3FFFA,
                0x3FFFB,
    };
    #endif // (defined(TINYMIND_USE_TANH_46_18))
    #if (defined(TINYMIND_USE_TANH_47_17))
    const uint64_t TanhValuesTableQ47_17::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFE0002,
                0xFFFFFFFFFFFE0003,
                0xFFFFFFFFFFFE0003,
                0xFFFFFFFFFFFE0004,
                0xFFFFFFFFFFFE0005,
                0xFFFFFFFFFFFE0006,
                0xFFFFFFFFFFFE0008,
                0xFFFFFFFFFFFE000A,
                0xFFFFFFFFFFFE000C,
                0xFFFFFFFFFFFE0010,
                0xFFFFFFFFFFFE0014,
                0xFFFFFFFFFFFE001A,
                0xFFFFFFFFFFFE0021,
                0xFFFFFFFFFFFE002A,
                0xFFFFFFFFFFFE0036,
                0xFFFFFFFFFFFE0045,
                0xFFFFFFFFFFFE0058,
                0xFFFFFFFFFFFE0071,
                0xFFFFFFFFFFFE0091,
                0xFFFFFFFFFFFE00BB,
                0xFFFFFFFFFFFE00EF,
                0xFFFFFFFFFFFE0133,
                0xFFFFFFFFFFFE018A,
                0xFFFFFFFFFFFE01FA,
                0xFFFFFFFFFFFE0289,
                0xFFFFFFFFFFFE0340,
                0xFFFFFFFFFFFE042B,
                0xFFFFFFFFFFFE0559,
                0xFFFFFFFFFFFE06DB,
                0xFFFFFFFFFFFE08C9,
                0xFFFFFFFFFFFE0B41,
                0xFFFFFFFFFFFE0E67,
                0xFFFFFFFFFFFE126B,
                0xFFFFFFFFFFFE1788,
                0xFFFFFFFFFFFE1E05,
                0xFFFFFFFFFFFE263A,
                0xFFFFFFFFFFFE3091,
                0xFFFFFFFFFFFE3D88,
                0xFFFFFFFFFFFE4DAE,
                0xFFFFFFFFFFFE61A4,
                0xFFFFFFFFFFFE7A11,
                0xFFFFFFFFFFFE979A,
                0xFFFFFFFFFFFEBACE,
                0xFFFFFFFFFFFEE40C,
                0xFFFFFFFFFFFF1366,
                0xFFFFFFFFFFFF4886,
                0xFFFFFFFFFFFF829B,
                0xFFFFFFFFFFFFC055,
                0x0,
                0x3FAB,
                0x7D65,
                0xB77A,
                0xEC9A,
                0x11BF4,
                0x14532,
                0x16866,
                0x185EF,
                0x19E5C,
                0x1B252,
                0x1C278,
                0x1CF6F,
                0x1D9C6,
                0x1E1FB,
                0x1E878,
                0x1ED95,
                0x1F199,
                0x1F4BF,
                0x1F737,
                0x1F925,
                0x1FAA7,
                0x1FBD5,
                0x1FCC0,
                0x1FD77,
                0x1FE06,
                0x1FE76,
                0x1FECD,
                0x1FF11,
                0x1FF45,
                0x1FF6F,
                0x1FF8F,
                0x1FFA8,
                0x1FFBB,
                0x1FFCA,
                0x1FFD6,
                0x1FFDF,
                0x1FFE6,
                0x1FFEC,
                0x1FFF0,
                0x1FFF4,
                0x1FFF6,
                0x1FFF8,
                0x1FFFA,
                0x1FFFB,
                0x1FFFC,
                0x1FFFD,
                0x1FFFD,
    };
    #endif // (defined(TINYMIND_USE_TANH_47_17))
    #if (defined(TINYMIND_USE_TANH_48_16))
    const uint64_t TanhValuesTableQ48_16::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFF0001,
                0xFFFFFFFFFFFF0002,
                0xFFFFFFFFFFFF0002,
                0xFFFFFFFFFFFF0002,
                0xFFFFFFFFFFFF0003,
                0xFFFFFFFFFFFF0003,
                0xFFFFFFFFFFFF0004,
                0xFFFFFFFFFFFF0005,
                0xFFFFFFFFFFFF0006,
                0xFFFFFFFFFFFF0008,
                0xFFFFFFFFFFFF000A,
                0xFFFFFFFFFFFF000D,
                0xFFFFFFFFFFFF0011,
                0xFFFFFFFFFFFF0015,
                0xFFFFFFFFFFFF001B,
                0xFFFFFFFFFFFF0023,
                0xFFFFFFFFFFFF002C,
                0xFFFFFFFFFFFF0039,
                0xFFFFFFFFFFFF0049,
                0xFFFFFFFFFFFF005E,
                0xFFFFFFFFFFFF0078,
                0xFFFFFFFFFFFF009A,
                0xFFFFFFFFFFFF00C5,
                0xFFFFFFFFFFFF00FD,
                0xFFFFFFFFFFFF0145,
                0xFFFFFFFFFFFF01A0,
                0xFFFFFFFFFFFF0216,
                0xFFFFFFFFFFFF02AD,
                0xFFFFFFFFFFFF036E,
                0xFFFFFFFFFFFF0465,
                0xFFFFFFFFFFFF05A1,
                0xFFFFFFFFFFFF0734,
                0xFFFFFFFFFFFF0936,
                0xFFFFFFFFFFFF0BC4,
                0xFFFFFFFFFFFF0F03,
                0xFFFFFFFFFFFF131D,
                0xFFFFFFFFFFFF1849,
                0xFFFFFFFFFFFF1EC4,
                0xFFFFFFFFFFFF26D7,
                0xFFFFFFFFFFFF30D2,
                0xFFFFFFFFFFFF3D09,
                0xFFFFFFFFFFFF4BCD,
                0xFFFFFFFFFFFF5D67,
                0xFFFFFFFFFFFF7206,
                0xFFFFFFFFFFFF89B3,
                0xFFFFFFFFFFFFA443,
                0xFFFFFFFFFFFFC14E,
                0xFFFFFFFFFFFFE02B,
                0x0,
                0x1FD5,
                0x3EB2,
                0x5BBD,
                0x764D,
                0x8DFA,
                0xA299,
                0xB433,
                0xC2F7,
                0xCF2E,
                0xD929,
                0xE13C,
                0xE7B7,
                0xECE3,
                0xF0FD,
                0xF43C,
                0xF6CA,
                0xF8CC,
                0xFA5F,
                0xFB9B,
                0xFC92,
                0xFD53,
                0xFDEA,
                0xFE60,
                0xFEBB,
                0xFF03,
                0xFF3B,
                0xFF66,
                0xFF88,
                0xFFA2,
                0xFFB7,
                0xFFC7,
                0xFFD4,
                0xFFDD,
                0xFFE5,
                0xFFEB,
                0xFFEF,
                0xFFF3,
                0xFFF6,
                0xFFF8,
                0xFFFA,
                0xFFFB,
                0xFFFC,
                0xFFFD,
                0xFFFD,
                0xFFFE,
                0xFFFE,
                0xFFFE,
    };
    #endif // (defined(TINYMIND_USE_TANH_48_16))
    #if (defined(TINYMIND_USE_TANH_49_15))
    const uint64_t TanhValuesTableQ49_15::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFF8001,
                0xFFFFFFFFFFFF8001,
                0xFFFFFFFFFFFF8001,
                0xFFFFFFFFFFFF8001,
                0xFFFFFFFFFFFF8002,
                0xFFFFFFFFFFFF8002,
                0xFFFFFFFFFFFF8002,
                0xFFFFFFFFFFFF8003,
                0xFFFFFFFFFFFF8003,
                0xFFFFFFFFFFFF8004,
                0xFFFFFFFFFFFF8005,
                0xFFFFFFFFFFFF8007,
                0xFFFFFFFFFFFF8009,
                0xFFFFFFFFFFFF800B,
                0xFFFFFFFFFFFF800E,
                0xFFFFFFFFFFFF8012,
                0xFFFFFFFFFFFF8016,
                0xFFFFFFFFFFFF801D,
                0xFFFFFFFFFFFF8025,
                0xFFFFFFFFFFFF802F,
                0xFFFFFFFFFFFF803C,
                0xFFFFFFFFFFFF804D,
                0xFFFFFFFFFFFF8063,
                0xFFFFFFFFFFFF807F,
                0xFFFFFFFFFFFF80A3,
                0xFFFFFFFFFFFF80D0,
                0xFFFFFFFFFFFF810B,
                0xFFFFFFFFFFFF8157,
                0xFFFFFFFFFFFF81B7,
                0xFFFFFFFFFFFF8233,
                0xFFFFFFFFFFFF82D1,
                0xFFFFFFFFFFFF839A,
                0xFFFFFFFFFFFF849B,
                0xFFFFFFFFFFFF85E2,
                0xFFFFFFFFFFFF8782,
                0xFFFFFFFFFFFF898F,
                0xFFFFFFFFFFFF8C25,
                0xFFFFFFFFFFFF8F62,
                0xFFFFFFFFFFFF936C,
                0xFFFFFFFFFFFF9869,
                0xFFFFFFFFFFFF9E85,
                0xFFFFFFFFFFFFA5E7,
                0xFFFFFFFFFFFFAEB4,
                0xFFFFFFFFFFFFB903,
                0xFFFFFFFFFFFFC4DA,
                0xFFFFFFFFFFFFD222,
                0xFFFFFFFFFFFFE0A7,
                0xFFFFFFFFFFFFF016,
                0x0,
                0xFEA,
                0x1F59,
                0x2DDE,
                0x3B26,
                0x46FD,
                0x514C,
                0x5A19,
                0x617B,
                0x6797,
                0x6C94,
                0x709E,
                0x73DB,
                0x7671,
                0x787E,
                0x7A1E,
                0x7B65,
                0x7C66,
                0x7D2F,
                0x7DCD,
                0x7E49,
                0x7EA9,
                0x7EF5,
                0x7F30,
                0x7F5D,
                0x7F81,
                0x7F9D,
                0x7FB3,
                0x7FC4,
                0x7FD1,
                0x7FDB,
                0x7FE3,
                0x7FEA,
                0x7FEE,
                0x7FF2,
                0x7FF5,
                0x7FF7,
                0x7FF9,
                0x7FFB,
                0x7FFC,
                0x7FFD,
                0x7FFD,
                0x7FFE,
                0x7FFE,
                0x7FFE,
                0x7FFF,
                0x7FFF,
                0x7FFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_49_15))
    #if (defined(TINYMIND_USE_TANH_50_14))
    const uint64_t TanhValuesTableQ50_14::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFFC001,
                0xFFFFFFFFFFFFC001,
                0xFFFFFFFFFFFFC001,
                0xFFFFFFFFFFFFC001,
                0xFFFFFFFFFFFFC001,
                0xFFFFFFFFFFFFC001,
                0xFFFFFFFFFFFFC001,
                0xFFFFFFFFFFFFC002,
                0xFFFFFFFFFFFFC002,
                0xFFFFFFFFFFFFC002,
                0xFFFFFFFFFFFFC003,
                0xFFFFFFFFFFFFC004,
                0xFFFFFFFFFFFFC005,
                0xFFFFFFFFFFFFC006,
                0xFFFFFFFFFFFFC007,
                0xFFFFFFFFFFFFC009,
                0xFFFFFFFFFFFFC00B,
                0xFFFFFFFFFFFFC00F,
                0xFFFFFFFFFFFFC013,
                0xFFFFFFFFFFFFC018,
                0xFFFFFFFFFFFFC01E,
                0xFFFFFFFFFFFFC027,
                0xFFFFFFFFFFFFC032,
                0xFFFFFFFFFFFFC040,
                0xFFFFFFFFFFFFC052,
                0xFFFFFFFFFFFFC068,
                0xFFFFFFFFFFFFC086,
                0xFFFFFFFFFFFFC0AC,
                0xFFFFFFFFFFFFC0DC,
                0xFFFFFFFFFFFFC11A,
                0xFFFFFFFFFFFFC169,
                0xFFFFFFFFFFFFC1CD,
                0xFFFFFFFFFFFFC24E,
                0xFFFFFFFFFFFFC2F1,
                0xFFFFFFFFFFFFC3C1,
                0xFFFFFFFFFFFFC4C8,
                0xFFFFFFFFFFFFC613,
                0xFFFFFFFFFFFFC7B1,
                0xFFFFFFFFFFFFC9B6,
                0xFFFFFFFFFFFFCC35,
                0xFFFFFFFFFFFFCF43,
                0xFFFFFFFFFFFFD2F4,
                0xFFFFFFFFFFFFD75A,
                0xFFFFFFFFFFFFDC82,
                0xFFFFFFFFFFFFE26D,
                0xFFFFFFFFFFFFE911,
                0xFFFFFFFFFFFFF054,
                0xFFFFFFFFFFFFF80B,
                0x0,
                0x7F5,
                0xFAC,
                0x16EF,
                0x1D93,
                0x237E,
                0x28A6,
                0x2D0C,
                0x30BD,
                0x33CB,
                0x364A,
                0x384F,
                0x39ED,
                0x3B38,
                0x3C3F,
                0x3D0F,
                0x3DB2,
                0x3E33,
                0x3E97,
                0x3EE6,
                0x3F24,
                0x3F54,
                0x3F7A,
                0x3F98,
                0x3FAE,
                0x3FC0,
                0x3FCE,
                0x3FD9,
                0x3FE2,
                0x3FE8,
                0x3FED,
                0x3FF1,
                0x3FF5,
                0x3FF7,
                0x3FF9,
                0x3FFA,
                0x3FFB,
                0x3FFC,
                0x3FFD,
                0x3FFE,
                0x3FFE,
                0x3FFE,
                0x3FFF,
                0x3FFF,
                0x3FFF,
                0x3FFF,
                0x3FFF,
                0x3FFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_50_14))
    #if (defined(TINYMIND_USE_TANH_51_13))
    const uint64_t TanhValuesTableQ51_13::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFFE001,
                0xFFFFFFFFFFFFE001,
                0xFFFFFFFFFFFFE001,
                0xFFFFFFFFFFFFE001,
                0xFFFFFFFFFFFFE001,
                0xFFFFFFFFFFFFE001,
                0xFFFFFFFFFFFFE001,
                0xFFFFFFFFFFFFE001,
                0xFFFFFFFFFFFFE001,
                0xFFFFFFFFFFFFE001,
                0xFFFFFFFFFFFFE002,
                0xFFFFFFFFFFFFE002,
                0xFFFFFFFFFFFFE003,
                0xFFFFFFFFFFFFE003,
                0xFFFFFFFFFFFFE004,
                0xFFFFFFFFFFFFE005,
                0xFFFFFFFFFFFFE006,
                0xFFFFFFFFFFFFE008,
                0xFFFFFFFFFFFFE00A,
                0xFFFFFFFFFFFFE00C,
                0xFFFFFFFFFFFFE00F,
                0xFFFFFFFFFFFFE014,
                0xFFFFFFFFFFFFE019,
                0xFFFFFFFFFFFFE020,
                0xFFFFFFFFFFFFE029,
                0xFFFFFFFFFFFFE034,
                0xFFFFFFFFFFFFE043,
                0xFFFFFFFFFFFFE056,
                0xFFFFFFFFFFFFE06E,
                0xFFFFFFFFFFFFE08D,
                0xFFFFFFFFFFFFE0B5,
                0xFFFFFFFFFFFFE0E7,
                0xFFFFFFFFFFFFE127,
                0xFFFFFFFFFFFFE179,
                0xFFFFFFFFFFFFE1E1,
                0xFFFFFFFFFFFFE264,
                0xFFFFFFFFFFFFE30A,
                0xFFFFFFFFFFFFE3D9,
                0xFFFFFFFFFFFFE4DB,
                0xFFFFFFFFFFFFE61B,
                0xFFFFFFFFFFFFE7A2,
                0xFFFFFFFFFFFFE97A,
                0xFFFFFFFFFFFFEBAD,
                0xFFFFFFFFFFFFEE41,
                0xFFFFFFFFFFFFF137,
                0xFFFFFFFFFFFFF489,
                0xFFFFFFFFFFFFF82A,
                0xFFFFFFFFFFFFFC06,
                0x0,
                0x3FA,
                0x7D6,
                0xB77,
                0xEC9,
                0x11BF,
                0x1453,
                0x1686,
                0x185E,
                0x19E5,
                0x1B25,
                0x1C27,
                0x1CF6,
                0x1D9C,
                0x1E1F,
                0x1E87,
                0x1ED9,
                0x1F19,
                0x1F4B,
                0x1F73,
                0x1F92,
                0x1FAA,
                0x1FBD,
                0x1FCC,
                0x1FD7,
                0x1FE0,
                0x1FE7,
                0x1FEC,
                0x1FF1,
                0x1FF4,
                0x1FF6,
                0x1FF8,
                0x1FFA,
                0x1FFB,
                0x1FFC,
                0x1FFD,
                0x1FFD,
                0x1FFE,
                0x1FFE,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
                0x1FFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_51_13))
    #if (defined(TINYMIND_USE_TANH_52_12))
    const uint64_t TanhValuesTableQ52_12::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFFF001,
                0xFFFFFFFFFFFFF001,
                0xFFFFFFFFFFFFF001,
                0xFFFFFFFFFFFFF001,
                0xFFFFFFFFFFFFF001,
                0xFFFFFFFFFFFFF001,
                0xFFFFFFFFFFFFF001,
                0xFFFFFFFFFFFFF001,
                0xFFFFFFFFFFFFF001,
                0xFFFFFFFFFFFFF001,
                0xFFFFFFFFFFFFF001,
                0xFFFFFFFFFFFFF001,
                0xFFFFFFFFFFFFF002,
                0xFFFFFFFFFFFFF002,
                0xFFFFFFFFFFFFF002,
                0xFFFFFFFFFFFFF003,
                0xFFFFFFFFFFFFF003,
                0xFFFFFFFFFFFFF004,
                0xFFFFFFFFFFFFF005,
                0xFFFFFFFFFFFFF006,
                0xFFFFFFFFFFFFF008,
                0xFFFFFFFFFFFFF00A,
                0xFFFFFFFFFFFFF00D,
                0xFFFFFFFFFFFFF010,
                0xFFFFFFFFFFFFF015,
                0xFFFFFFFFFFFFF01A,
                0xFFFFFFFFFFFFF022,
                0xFFFFFFFFFFFFF02B,
                0xFFFFFFFFFFFFF037,
                0xFFFFFFFFFFFFF047,
                0xFFFFFFFFFFFFF05B,
                0xFFFFFFFFFFFFF074,
                0xFFFFFFFFFFFFF094,
                0xFFFFFFFFFFFFF0BD,
                0xFFFFFFFFFFFFF0F1,
                0xFFFFFFFFFFFFF132,
                0xFFFFFFFFFFFFF185,
                0xFFFFFFFFFFFFF1ED,
                0xFFFFFFFFFFFFF26E,
                0xFFFFFFFFFFFFF30E,
                0xFFFFFFFFFFFFF3D1,
                0xFFFFFFFFFFFFF4BD,
                0xFFFFFFFFFFFFF5D7,
                0xFFFFFFFFFFFFF721,
                0xFFFFFFFFFFFFF89C,
                0xFFFFFFFFFFFFFA45,
                0xFFFFFFFFFFFFFC15,
                0xFFFFFFFFFFFFFE03,
                0x0,
                0x1FD,
                0x3EB,
                0x5BB,
                0x764,
                0x8DF,
                0xA29,
                0xB43,
                0xC2F,
                0xCF2,
                0xD92,
                0xE13,
                0xE7B,
                0xECE,
                0xF0F,
                0xF43,
                0xF6C,
                0xF8C,
                0xFA5,
                0xFB9,
                0xFC9,
                0xFD5,
                0xFDE,
                0xFE6,
                0xFEB,
                0xFF0,
                0xFF3,
                0xFF6,
                0xFF8,
                0xFFA,
                0xFFB,
                0xFFC,
                0xFFD,
                0xFFD,
                0xFFE,
                0xFFE,
                0xFFE,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
                0xFFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_52_12))
    #if (defined(TINYMIND_USE_TANH_53_11))
    const uint64_t TanhValuesTableQ53_11::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF801,
                0xFFFFFFFFFFFFF802,
                0xFFFFFFFFFFFFF802,
                0xFFFFFFFFFFFFF802,
                0xFFFFFFFFFFFFF803,
                0xFFFFFFFFFFFFF803,
                0xFFFFFFFFFFFFF804,
                0xFFFFFFFFFFFFF805,
                0xFFFFFFFFFFFFF807,
                0xFFFFFFFFFFFFF808,
                0xFFFFFFFFFFFFF80B,
                0xFFFFFFFFFFFFF80D,
                0xFFFFFFFFFFFFF811,
                0xFFFFFFFFFFFFF816,
                0xFFFFFFFFFFFFF81C,
                0xFFFFFFFFFFFFF824,
                0xFFFFFFFFFFFFF82E,
                0xFFFFFFFFFFFFF83A,
                0xFFFFFFFFFFFFF84A,
                0xFFFFFFFFFFFFF85F,
                0xFFFFFFFFFFFFF879,
                0xFFFFFFFFFFFFF899,
                0xFFFFFFFFFFFFF8C3,
                0xFFFFFFFFFFFFF8F7,
                0xFFFFFFFFFFFFF937,
                0xFFFFFFFFFFFFF987,
                0xFFFFFFFFFFFFF9E9,
                0xFFFFFFFFFFFFFA5F,
                0xFFFFFFFFFFFFFAEC,
                0xFFFFFFFFFFFFFB91,
                0xFFFFFFFFFFFFFC4E,
                0xFFFFFFFFFFFFFD23,
                0xFFFFFFFFFFFFFE0B,
                0xFFFFFFFFFFFFFF02,
                0x0,
                0xFE,
                0x1F5,
                0x2DD,
                0x3B2,
                0x46F,
                0x514,
                0x5A1,
                0x617,
                0x679,
                0x6C9,
                0x709,
                0x73D,
                0x767,
                0x787,
                0x7A1,
                0x7B6,
                0x7C6,
                0x7D2,
                0x7DC,
                0x7E4,
                0x7EA,
                0x7EF,
                0x7F3,
                0x7F5,
                0x7F8,
                0x7F9,
                0x7FB,
                0x7FC,
                0x7FD,
                0x7FD,
                0x7FE,
                0x7FE,
                0x7FE,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
                0x7FF,
    };
    #endif // (defined(TINYMIND_USE_TANH_53_11))
    #if (defined(TINYMIND_USE_TANH_54_10))
    const uint64_t TanhValuesTableQ54_10::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC01,
                0xFFFFFFFFFFFFFC02,
                0xFFFFFFFFFFFFFC02,
                0xFFFFFFFFFFFFFC02,
                0xFFFFFFFFFFFFFC03,
                0xFFFFFFFFFFFFFC04,
                0xFFFFFFFFFFFFFC04,
                0xFFFFFFFFFFFFFC06,
                0xFFFFFFFFFFFFFC07,
                0xFFFFFFFFFFFFFC09,
                0xFFFFFFFFFFFFFC0B,
                0xFFFFFFFFFFFFFC0E,
                0xFFFFFFFFFFFFFC12,
                0xFFFFFFFFFFFFFC17,
                0xFFFFFFFFFFFFFC1D,
                0xFFFFFFFFFFFFFC25,
                0xFFFFFFFFFFFFFC30,
                0xFFFFFFFFFFFFFC3D,
                0xFFFFFFFFFFFFFC4D,
                0xFFFFFFFFFFFFFC62,
                0xFFFFFFFFFFFFFC7C,
                0xFFFFFFFFFFFFFC9C,
                0xFFFFFFFFFFFFFCC4,
                0xFFFFFFFFFFFFFCF5,
                0xFFFFFFFFFFFFFD30,
                0xFFFFFFFFFFFFFD76,
                0xFFFFFFFFFFFFFDC9,
                0xFFFFFFFFFFFFFE27,
                0xFFFFFFFFFFFFFE92,
                0xFFFFFFFFFFFFFF06,
                0xFFFFFFFFFFFFFF81,
                0x0,
                0x7F,
                0xFA,
                0x16E,
                0x1D9,
                0x237,
                0x28A,
                0x2D0,
                0x30B,
                0x33C,
                0x364,
                0x384,
                0x39E,
                0x3B3,
                0x3C3,
                0x3D0,
                0x3DB,
                0x3E3,
                0x3E9,
                0x3EE,
                0x3F2,
                0x3F5,
                0x3F7,
                0x3F9,
                0x3FA,
                0x3FC,
                0x3FC,
                0x3FD,
                0x3FE,
                0x3FE,
                0x3FE,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
                0x3FF,
    };
    #endif // (defined(TINYMIND_USE_TANH_54_10))
    #if (defined(TINYMIND_USE_TANH_55_9))
    const uint64_t TanhValuesTableQ55_9::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE01,
                0xFFFFFFFFFFFFFE02,
                0xFFFFFFFFFFFFFE02,
                0xFFFFFFFFFFFFFE02,
                0xFFFFFFFFFFFFFE03,
                0xFFFFFFFFFFFFFE04,
                0xFFFFFFFFFFFFFE05,
                0xFFFFFFFFFFFFFE06,
                0xFFFFFFFFFFFFFE07,
                0xFFFFFFFFFFFFFE09,
                0xFFFFFFFFFFFFFE0C,
                0xFFFFFFFFFFFFFE0F,
                0xFFFFFFFFFFFFFE13,
                0xFFFFFFFFFFFFFE18,
                0xFFFFFFFFFFFFFE1F,
                0xFFFFFFFFFFFFFE27,
                0xFFFFFFFFFFFFFE31,
                0xFFFFFFFFFFFFFE3E,
                0xFFFFFFFFFFFFFE4E,
                0xFFFFFFFFFFFFFE62,
                0xFFFFFFFFFFFFFE7B,
                0xFFFFFFFFFFFFFE98,
                0xFFFFFFFFFFFFFEBB,
                0xFFFFFFFFFFFFFEE5,
                0xFFFFFFFFFFFFFF14,
                0xFFFFFFFFFFFFFF49,
                0xFFFFFFFFFFFFFF83,
                0xFFFFFFFFFFFFFFC1,
                0x0,
                0x3F,
                0x7D,
                0xB7,
                0xEC,
                0x11B,
                0x145,
                0x168,
                0x185,
                0x19E,
                0x1B2,
                0x1C2,
                0x1CF,
                0x1D9,
                0x1E1,
                0x1E8,
                0x1ED,
                0x1F1,
                0x1F4,
                0x1F7,
                0x1F9,
                0x1FA,
                0x1FB,
                0x1FC,
                0x1FD,
                0x1FE,
                0x1FE,
                0x1FE,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
                0x1FF,
    };
    #endif // (defined(TINYMIND_USE_TANH_55_9))
    #if (defined(TINYMIND_USE_TANH_56_8))
    const uint64_t TanhValuesTableQ56_8::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF01,
                0xFFFFFFFFFFFFFF02,
                0xFFFFFFFFFFFFFF02,
                0xFFFFFFFFFFFFFF03,
                0xFFFFFFFFFFFFFF03,
                0xFFFFFFFFFFFFFF04,
                0xFFFFFFFFFFFFFF05,
                0xFFFFFFFFFFFFFF06,
                0xFFFFFFFFFFFFFF08,
                0xFFFFFFFFFFFFFF0A,
                0xFFFFFFFFFFFFFF0C,
                0xFFFFFFFFFFFFFF10,
                0xFFFFFFFFFFFFFF14,
                0xFFFFFFFFFFFFFF19,
                0xFFFFFFFFFFFFFF1F,
                0xFFFFFFFFFFFFFF27,
                0xFFFFFFFFFFFFFF31,
                0xFFFFFFFFFFFFFF3E,
                0xFFFFFFFFFFFFFF4C,
                0xFFFFFFFFFFFFFF5E,
                0xFFFFFFFFFFFFFF73,
                0xFFFFFFFFFFFFFF8A,
                0xFFFFFFFFFFFFFFA5,
                0xFFFFFFFFFFFFFFC2,
                0xFFFFFFFFFFFFFFE1,
                0x0,
                0x1F,
                0x3E,
                0x5B,
                0x76,
                0x8D,
                0xA2,
                0xB4,
                0xC2,
                0xCF,
                0xD9,
                0xE1,
                0xE7,
                0xEC,
                0xF0,
                0xF4,
                0xF6,
                0xF8,
                0xFA,
                0xFB,
                0xFC,
                0xFD,
                0xFD,
                0xFE,
                0xFE,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
                0xFF,
    };
    #endif // (defined(TINYMIND_USE_TANH_56_8))
    #if (defined(TINYMIND_USE_TANH_57_7))
    const uint64_t TanhValuesTableQ57_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF81,
                0xFFFFFFFFFFFFFF82,
                0xFFFFFFFFFFFFFF82,
                0xFFFFFFFFFFFFFF82,
                0xFFFFFFFFFFFFFF83,
                0xFFFFFFFFFFFFFF83,
                0xFFFFFFFFFFFFFF84,
                0xFFFFFFFFFFFFFF85,
                0xFFFFFFFFFFFFFF86,
                0xFFFFFFFFFFFFFF88,
                0xFFFFFFFFFFFFFF8A,
                0xFFFFFFFFFFFFFF8D,
                0xFFFFFFFFFFFFFF90,
                0xFFFFFFFFFFFFFF94,
                0xFFFFFFFFFFFFFF99,
                0xFFFFFFFFFFFFFF9F,
                0xFFFFFFFFFFFFFFA6,
                0xFFFFFFFFFFFFFFAF,
                0xFFFFFFFFFFFFFFBA,
                0xFFFFFFFFFFFFFFC5,
                0xFFFFFFFFFFFFFFD3,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFF1,
                0x0,
                0xF,
                0x1F,
                0x2D,
                0x3B,
                0x46,
                0x51,
                0x5A,
                0x61,
                0x67,
                0x6C,
                0x70,
                0x73,
                0x76,
                0x78,
                0x7A,
                0x7B,
                0x7C,
                0x7D,
                0x7D,
                0x7E,
                0x7E,
                0x7E,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
    };
    #endif // (defined(TINYMIND_USE_TANH_57_7))
    #if (defined(TINYMIND_USE_TANH_58_6))
    const uint64_t TanhValuesTableQ58_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC1,
                0xFFFFFFFFFFFFFFC2,
                0xFFFFFFFFFFFFFFC2,
                0xFFFFFFFFFFFFFFC2,
                0xFFFFFFFFFFFFFFC3,
                0xFFFFFFFFFFFFFFC3,
                0xFFFFFFFFFFFFFFC4,
                0xFFFFFFFFFFFFFFC5,
                0xFFFFFFFFFFFFFFC7,
                0xFFFFFFFFFFFFFFC8,
                0xFFFFFFFFFFFFFFCA,
                0xFFFFFFFFFFFFFFCD,
                0xFFFFFFFFFFFFFFD0,
                0xFFFFFFFFFFFFFFD3,
                0xFFFFFFFFFFFFFFD8,
                0xFFFFFFFFFFFFFFDD,
                0xFFFFFFFFFFFFFFE3,
                0xFFFFFFFFFFFFFFEA,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF9,
                0x0,
                0x7,
                0xF,
                0x16,
                0x1D,
                0x23,
                0x28,
                0x2D,
                0x30,
                0x33,
                0x36,
                0x38,
                0x39,
                0x3B,
                0x3C,
                0x3D,
                0x3D,
                0x3E,
                0x3E,
                0x3E,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
    };
    #endif // (defined(TINYMIND_USE_TANH_58_6))
    #if (defined(TINYMIND_USE_TANH_59_5))
    const uint64_t TanhValuesTableQ59_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFE2,
                0xFFFFFFFFFFFFFFE2,
                0xFFFFFFFFFFFFFFE2,
                0xFFFFFFFFFFFFFFE3,
                0xFFFFFFFFFFFFFFE4,
                0xFFFFFFFFFFFFFFE4,
                0xFFFFFFFFFFFFFFE5,
                0xFFFFFFFFFFFFFFE7,
                0xFFFFFFFFFFFFFFE8,
                0xFFFFFFFFFFFFFFEA,
                0xFFFFFFFFFFFFFFEC,
                0xFFFFFFFFFFFFFFEF,
                0xFFFFFFFFFFFFFFF2,
                0xFFFFFFFFFFFFFFF5,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFFD,
                0x0,
                0x3,
                0x7,
                0xB,
                0xE,
                0x11,
                0x14,
                0x16,
                0x18,
                0x19,
                0x1B,
                0x1C,
                0x1C,
                0x1D,
                0x1E,
                0x1E,
                0x1E,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
    };
    #endif // (defined(TINYMIND_USE_TANH_59_5))
    #if (defined(TINYMIND_USE_TANH_60_4))
    const uint64_t TanhValuesTableQ60_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF2,
                0xFFFFFFFFFFFFFFF2,
                0xFFFFFFFFFFFFFFF2,
                0xFFFFFFFFFFFFFFF3,
                0xFFFFFFFFFFFFFFF4,
                0xFFFFFFFFFFFFFFF4,
                0xFFFFFFFFFFFFFFF5,
                0xFFFFFFFFFFFFFFF6,
                0xFFFFFFFFFFFFFFF8,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFFB,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFF,
                0x0,
                0x1,
                0x3,
                0x5,
                0x7,
                0x8,
                0xA,
                0xB,
                0xC,
                0xC,
                0xD,
                0xE,
                0xE,
                0xE,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
    };
    #endif // (defined(TINYMIND_USE_TANH_60_4))
    #if (defined(TINYMIND_USE_TANH_61_3))
    const uint64_t TanhValuesTableQ61_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFFA,
                0xFFFFFFFFFFFFFFFA,
                0xFFFFFFFFFFFFFFFA,
                0xFFFFFFFFFFFFFFFB,
                0xFFFFFFFFFFFFFFFB,
                0xFFFFFFFFFFFFFFFC,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFE,
                0xFFFFFFFFFFFFFFFF,
                0x0,
                0x0,
                0x0,
                0x1,
                0x2,
                0x3,
                0x4,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
    };
    #endif // (defined(TINYMIND_USE_TANH_61_3))
    #if (defined(TINYMIND_USE_TANH_62_2))
    const uint64_t TanhValuesTableQ62_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFE,
                0xFFFFFFFFFFFFFFFE,
                0xFFFFFFFFFFFFFFFE,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
    };
    #endif // (defined(TINYMIND_USE_TANH_62_2))
    #if (defined(TINYMIND_USE_TANH_63_1))
    const uint64_t TanhValuesTableQ63_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
    };
    #endif // (defined(TINYMIND_USE_TANH_63_1))
    #if (defined(TINYMIND_USE_SIGMOID_1_7))
    const uint8_t SigmoidValuesTableQ1_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x12,
                0x15,
                0x17,
                0x19,
                0x1C,
                0x1F,
                0x22,
                0x25,
                0x29,
                0x2C,
                0x30,
                0x34,
                0x38,
                0x3C,
                0x40,
                0x43,
                0x47,
                0x4B,
                0x4F,
                0x53,
                0x56,
                0x5A,
                0x5D,
                0x60,
                0x63,
                0x66,
                0x68,
                0x6A,
                0x6D,
                0x6E,
                0x70,
                0x72,
                0x73,
                0x75,
                0x76,
                0x77,
                0x78,
                0x79,
                0x79,
                0x7A,
                0x7B,
                0x7B,
                0x7C,
                0x7C,
                0x7D,
                0x7D,
                0x7D,
                0x7D,
                0x7E,
                0x7E,
                0x7E,
                0x7E,
                0x7E,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_1_7))
    #if (defined(TINYMIND_USE_SIGMOID_2_6))
    const uint8_t SigmoidValuesTableQ2_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xC,
                0xE,
                0xF,
                0x11,
                0x12,
                0x14,
                0x16,
                0x18,
                0x1A,
                0x1C,
                0x1E,
                0x20,
                0x21,
                0x23,
                0x25,
                0x27,
                0x29,
                0x2B,
                0x2D,
                0x2E,
                0x30,
                0x31,
                0x33,
                0x34,
                0x35,
                0x36,
                0x37,
                0x38,
                0x39,
                0x39,
                0x3A,
                0x3B,
                0x3B,
                0x3C,
                0x3C,
                0x3C,
                0x3D,
                0x3D,
                0x3D,
                0x3E,
                0x3E,
                0x3E,
                0x3E,
                0x3E,
                0x3E,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_2_6))
    #if (defined(TINYMIND_USE_SIGMOID_3_5))
    const uint8_t SigmoidValuesTableQ3_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xC,
                0xD,
                0xE,
                0xF,
                0x10,
                0x10,
                0x11,
                0x12,
                0x13,
                0x14,
                0x15,
                0x16,
                0x17,
                0x18,
                0x18,
                0x19,
                0x1A,
                0x1A,
                0x1B,
                0x1B,
                0x1C,
                0x1C,
                0x1C,
                0x1D,
                0x1D,
                0x1D,
                0x1E,
                0x1E,
                0x1E,
                0x1E,
                0x1E,
                0x1E,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_3_5))
    #if (defined(TINYMIND_USE_SIGMOID_4_4))
    const uint8_t SigmoidValuesTableQ4_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x6,
                0x7,
                0x7,
                0x8,
                0x8,
                0x8,
                0x9,
                0x9,
                0xA,
                0xA,
                0xB,
                0xB,
                0xC,
                0xC,
                0xC,
                0xD,
                0xD,
                0xD,
                0xD,
                0xE,
                0xE,
                0xE,
                0xE,
                0xE,
                0xE,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_4_4))
    #if (defined(TINYMIND_USE_SIGMOID_5_3))
    const uint8_t SigmoidValuesTableQ5_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x4,
                0x4,
                0x4,
                0x5,
                0x5,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_5_3))
    #if (defined(TINYMIND_USE_SIGMOID_6_2))
    const uint8_t SigmoidValuesTableQ6_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_6_2))
    #if (defined(TINYMIND_USE_SIGMOID_7_1))
    const uint8_t SigmoidValuesTableQ7_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_7_1))
    #if (defined(TINYMIND_USE_SIGMOID_1_15))
    const uint16_t SigmoidValuesTableQ1_15::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x51,
                0x5B,
                0x67,
                0x75,
                0x85,
                0x97,
                0xAB,
                0xC1,
                0xDB,
                0xF8,
                0x119,
                0x13E,
                0x168,
                0x197,
                0x1CC,
                0x209,
                0x24D,
                0x29A,
                0x2F0,
                0x352,
                0x3C0,
                0x43C,
                0x4C7,
                0x563,
                0x612,
                0x6D5,
                0x7B0,
                0x8A5,
                0x9B5,
                0xAE4,
                0xC34,
                0xDA8,
                0xF42,
                0x1104,
                0x12F3,
                0x150E,
                0x1759,
                0x19D5,
                0x1C81,
                0x1F5E,
                0x226C,
                0x25A8,
                0x2910,
                0x2CA0,
                0x3053,
                0x3423,
                0x380A,
                0x3C01,
                0x4000,
                0x43FE,
                0x47F5,
                0x4BDC,
                0x4FAC,
                0x535F,
                0x56EF,
                0x5A57,
                0x5D93,
                0x60A1,
                0x637E,
                0x662A,
                0x68A6,
                0x6AF1,
                0x6D0C,
                0x6EFB,
                0x70BD,
                0x7257,
                0x73CB,
                0x751B,
                0x764A,
                0x775A,
                0x784F,
                0x792A,
                0x79ED,
                0x7A9C,
                0x7B38,
                0x7BC3,
                0x7C3F,
                0x7CAD,
                0x7D0F,
                0x7D65,
                0x7DB2,
                0x7DF6,
                0x7E33,
                0x7E68,
                0x7E97,
                0x7EC1,
                0x7EE6,
                0x7F07,
                0x7F24,
                0x7F3E,
                0x7F54,
                0x7F68,
                0x7F7A,
                0x7F8A,
                0x7F98,
                0x7FA4,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_1_15))
    #if (defined(TINYMIND_USE_SIGMOID_2_14))
    const uint16_t SigmoidValuesTableQ2_14::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x28,
                0x2D,
                0x33,
                0x3A,
                0x42,
                0x4B,
                0x55,
                0x60,
                0x6D,
                0x7C,
                0x8C,
                0x9F,
                0xB4,
                0xCB,
                0xE6,
                0x104,
                0x126,
                0x14D,
                0x178,
                0x1A9,
                0x1E0,
                0x21E,
                0x263,
                0x2B1,
                0x309,
                0x36A,
                0x3D8,
                0x452,
                0x4DA,
                0x572,
                0x61A,
                0x6D4,
                0x7A1,
                0x882,
                0x979,
                0xA87,
                0xBAC,
                0xCEA,
                0xE40,
                0xFAF,
                0x1136,
                0x12D4,
                0x1488,
                0x1650,
                0x1829,
                0x1A11,
                0x1C05,
                0x1E00,
                0x2000,
                0x21FF,
                0x23FA,
                0x25EE,
                0x27D6,
                0x29AF,
                0x2B77,
                0x2D2B,
                0x2EC9,
                0x3050,
                0x31BF,
                0x3315,
                0x3453,
                0x3578,
                0x3686,
                0x377D,
                0x385E,
                0x392B,
                0x39E5,
                0x3A8D,
                0x3B25,
                0x3BAD,
                0x3C27,
                0x3C95,
                0x3CF6,
                0x3D4E,
                0x3D9C,
                0x3DE1,
                0x3E1F,
                0x3E56,
                0x3E87,
                0x3EB2,
                0x3ED9,
                0x3EFB,
                0x3F19,
                0x3F34,
                0x3F4B,
                0x3F60,
                0x3F73,
                0x3F83,
                0x3F92,
                0x3F9F,
                0x3FAA,
                0x3FB4,
                0x3FBD,
                0x3FC5,
                0x3FCC,
                0x3FD2,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_2_14))
    #if (defined(TINYMIND_USE_SIGMOID_3_13))
    const uint16_t SigmoidValuesTableQ3_13::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14,
                0x16,
                0x19,
                0x1D,
                0x21,
                0x25,
                0x2A,
                0x30,
                0x36,
                0x3E,
                0x46,
                0x4F,
                0x5A,
                0x65,
                0x73,
                0x82,
                0x93,
                0xA6,
                0xBC,
                0xD4,
                0xF0,
                0x10F,
                0x131,
                0x158,
                0x184,
                0x1B5,
                0x1EC,
                0x229,
                0x26D,
                0x2B9,
                0x30D,
                0x36A,
                0x3D0,
                0x441,
                0x4BC,
                0x543,
                0x5D6,
                0x675,
                0x720,
                0x7D7,
                0x89B,
                0x96A,
                0xA44,
                0xB28,
                0xC14,
                0xD08,
                0xE02,
                0xF00,
                0x1000,
                0x10FF,
                0x11FD,
                0x12F7,
                0x13EB,
                0x14D7,
                0x15BB,
                0x1695,
                0x1764,
                0x1828,
                0x18DF,
                0x198A,
                0x1A29,
                0x1ABC,
                0x1B43,
                0x1BBE,
                0x1C2F,
                0x1C95,
                0x1CF2,
                0x1D46,
                0x1D92,
                0x1DD6,
                0x1E13,
                0x1E4A,
                0x1E7B,
                0x1EA7,
                0x1ECE,
                0x1EF0,
                0x1F0F,
                0x1F2B,
                0x1F43,
                0x1F59,
                0x1F6C,
                0x1F7D,
                0x1F8C,
                0x1F9A,
                0x1FA5,
                0x1FB0,
                0x1FB9,
                0x1FC1,
                0x1FC9,
                0x1FCF,
                0x1FD5,
                0x1FDA,
                0x1FDE,
                0x1FE2,
                0x1FE6,
                0x1FE9,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_3_13))
    #if (defined(TINYMIND_USE_SIGMOID_4_12))
    const uint16_t SigmoidValuesTableQ4_12::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x15,
                0x18,
                0x1B,
                0x1F,
                0x23,
                0x27,
                0x2D,
                0x32,
                0x39,
                0x41,
                0x49,
                0x53,
                0x5E,
                0x6A,
                0x78,
                0x87,
                0x98,
                0xAC,
                0xC2,
                0xDA,
                0xF6,
                0x114,
                0x136,
                0x15C,
                0x186,
                0x1B5,
                0x1E8,
                0x220,
                0x25E,
                0x2A1,
                0x2EB,
                0x33A,
                0x390,
                0x3EB,
                0x44D,
                0x4B5,
                0x522,
                0x594,
                0x60A,
                0x684,
                0x701,
                0x780,
                0x800,
                0x87F,
                0x8FE,
                0x97B,
                0x9F5,
                0xA6B,
                0xADD,
                0xB4A,
                0xBB2,
                0xC14,
                0xC6F,
                0xCC5,
                0xD14,
                0xD5E,
                0xDA1,
                0xDDF,
                0xE17,
                0xE4A,
                0xE79,
                0xEA3,
                0xEC9,
                0xEEB,
                0xF09,
                0xF25,
                0xF3D,
                0xF53,
                0xF67,
                0xF78,
                0xF87,
                0xF95,
                0xFA1,
                0xFAC,
                0xFB6,
                0xFBE,
                0xFC6,
                0xFCD,
                0xFD2,
                0xFD8,
                0xFDC,
                0xFE0,
                0xFE4,
                0xFE7,
                0xFEA,
                0xFED,
                0xFEF,
                0xFF1,
                0xFF3,
                0xFF4,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_4_12))
    #if (defined(TINYMIND_USE_SIGMOID_5_11))
    const uint16_t SigmoidValuesTableQ5_11::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x13,
                0x16,
                0x19,
                0x1C,
                0x20,
                0x24,
                0x29,
                0x2F,
                0x35,
                0x3C,
                0x43,
                0x4C,
                0x56,
                0x61,
                0x6D,
                0x7B,
                0x8A,
                0x9B,
                0xAE,
                0xC3,
                0xDA,
                0xF4,
                0x110,
                0x12F,
                0x150,
                0x175,
                0x19D,
                0x1C8,
                0x1F5,
                0x226,
                0x25A,
                0x291,
                0x2CA,
                0x305,
                0x342,
                0x380,
                0x3C0,
                0x400,
                0x43F,
                0x47F,
                0x4BD,
                0x4FA,
                0x535,
                0x56E,
                0x5A5,
                0x5D9,
                0x60A,
                0x637,
                0x662,
                0x68A,
                0x6AF,
                0x6D0,
                0x6EF,
                0x70B,
                0x725,
                0x73C,
                0x751,
                0x764,
                0x775,
                0x784,
                0x792,
                0x79E,
                0x7A9,
                0x7B3,
                0x7BC,
                0x7C3,
                0x7CA,
                0x7D0,
                0x7D6,
                0x7DB,
                0x7DF,
                0x7E3,
                0x7E6,
                0x7E9,
                0x7EC,
                0x7EE,
                0x7F0,
                0x7F2,
                0x7F3,
                0x7F5,
                0x7F6,
                0x7F7,
                0x7F8,
                0x7F9,
                0x7FA,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_5_11))
    #if (defined(TINYMIND_USE_SIGMOID_6_10))
    const uint16_t SigmoidValuesTableQ6_10::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0x9,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x14,
                0x17,
                0x1A,
                0x1E,
                0x21,
                0x26,
                0x2B,
                0x30,
                0x36,
                0x3D,
                0x45,
                0x4D,
                0x57,
                0x61,
                0x6D,
                0x7A,
                0x88,
                0x97,
                0xA8,
                0xBA,
                0xCE,
                0xE4,
                0xFA,
                0x113,
                0x12D,
                0x148,
                0x165,
                0x182,
                0x1A1,
                0x1C0,
                0x1E0,
                0x200,
                0x21F,
                0x23F,
                0x25E,
                0x27D,
                0x29A,
                0x2B7,
                0x2D2,
                0x2EC,
                0x305,
                0x31B,
                0x331,
                0x345,
                0x357,
                0x368,
                0x377,
                0x385,
                0x392,
                0x39E,
                0x3A8,
                0x3B2,
                0x3BA,
                0x3C2,
                0x3C9,
                0x3CF,
                0x3D4,
                0x3D9,
                0x3DE,
                0x3E1,
                0x3E5,
                0x3E8,
                0x3EB,
                0x3ED,
                0x3EF,
                0x3F1,
                0x3F3,
                0x3F4,
                0x3F6,
                0x3F7,
                0x3F8,
                0x3F9,
                0x3F9,
                0x3FA,
                0x3FB,
                0x3FB,
                0x3FC,
                0x3FC,
                0x3FD,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_6_10))
    #if (defined(TINYMIND_USE_SIGMOID_7_9))
    const uint16_t SigmoidValuesTableQ7_9::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xF,
                0x10,
                0x13,
                0x15,
                0x18,
                0x1B,
                0x1E,
                0x22,
                0x26,
                0x2B,
                0x30,
                0x36,
                0x3D,
                0x44,
                0x4B,
                0x54,
                0x5D,
                0x67,
                0x72,
                0x7D,
                0x89,
                0x96,
                0xA4,
                0xB2,
                0xC1,
                0xD0,
                0xE0,
                0xF0,
                0x100,
                0x10F,
                0x11F,
                0x12F,
                0x13E,
                0x14D,
                0x15B,
                0x169,
                0x176,
                0x182,
                0x18D,
                0x198,
                0x1A2,
                0x1AB,
                0x1B4,
                0x1BB,
                0x1C2,
                0x1C9,
                0x1CF,
                0x1D4,
                0x1D9,
                0x1DD,
                0x1E1,
                0x1E4,
                0x1E7,
                0x1EA,
                0x1EC,
                0x1EF,
                0x1F0,
                0x1F2,
                0x1F4,
                0x1F5,
                0x1F6,
                0x1F7,
                0x1F8,
                0x1F9,
                0x1FA,
                0x1FB,
                0x1FB,
                0x1FC,
                0x1FC,
                0x1FC,
                0x1FD,
                0x1FD,
                0x1FD,
                0x1FE,
                0x1FE,
                0x1FE,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_7_9))
    #if (defined(TINYMIND_USE_SIGMOID_8_8))
    const uint16_t SigmoidValuesTableQ8_8::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x13,
                0x15,
                0x18,
                0x1B,
                0x1E,
                0x22,
                0x25,
                0x2A,
                0x2E,
                0x33,
                0x39,
                0x3E,
                0x44,
                0x4B,
                0x52,
                0x59,
                0x60,
                0x68,
                0x70,
                0x78,
                0x80,
                0x87,
                0x8F,
                0x97,
                0x9F,
                0xA6,
                0xAD,
                0xB4,
                0xBB,
                0xC1,
                0xC6,
                0xCC,
                0xD1,
                0xD5,
                0xDA,
                0xDD,
                0xE1,
                0xE4,
                0xE7,
                0xEA,
                0xEC,
                0xEE,
                0xF0,
                0xF2,
                0xF3,
                0xF5,
                0xF6,
                0xF7,
                0xF8,
                0xF9,
                0xFA,
                0xFA,
                0xFB,
                0xFB,
                0xFC,
                0xFC,
                0xFD,
                0xFD,
                0xFD,
                0xFE,
                0xFE,
                0xFE,
                0xFE,
                0xFE,
                0xFE,
                0xFF,
                0xFF,
                0xFF,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_8_8))
    #if (defined(TINYMIND_USE_SIGMOID_9_7))
    const uint16_t SigmoidValuesTableQ9_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x12,
                0x15,
                0x17,
                0x19,
                0x1C,
                0x1F,
                0x22,
                0x25,
                0x29,
                0x2C,
                0x30,
                0x34,
                0x38,
                0x3C,
                0x40,
                0x43,
                0x47,
                0x4B,
                0x4F,
                0x53,
                0x56,
                0x5A,
                0x5D,
                0x60,
                0x63,
                0x66,
                0x68,
                0x6A,
                0x6D,
                0x6E,
                0x70,
                0x72,
                0x73,
                0x75,
                0x76,
                0x77,
                0x78,
                0x79,
                0x79,
                0x7A,
                0x7B,
                0x7B,
                0x7C,
                0x7C,
                0x7D,
                0x7D,
                0x7D,
                0x7D,
                0x7E,
                0x7E,
                0x7E,
                0x7E,
                0x7E,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_9_7))
    #if (defined(TINYMIND_USE_SIGMOID_10_6))
    const uint16_t SigmoidValuesTableQ10_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xC,
                0xE,
                0xF,
                0x11,
                0x12,
                0x14,
                0x16,
                0x18,
                0x1A,
                0x1C,
                0x1E,
                0x20,
                0x21,
                0x23,
                0x25,
                0x27,
                0x29,
                0x2B,
                0x2D,
                0x2E,
                0x30,
                0x31,
                0x33,
                0x34,
                0x35,
                0x36,
                0x37,
                0x38,
                0x39,
                0x39,
                0x3A,
                0x3B,
                0x3B,
                0x3C,
                0x3C,
                0x3C,
                0x3D,
                0x3D,
                0x3D,
                0x3E,
                0x3E,
                0x3E,
                0x3E,
                0x3E,
                0x3E,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_10_6))
    #if (defined(TINYMIND_USE_SIGMOID_11_5))
    const uint16_t SigmoidValuesTableQ11_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xC,
                0xD,
                0xE,
                0xF,
                0x10,
                0x10,
                0x11,
                0x12,
                0x13,
                0x14,
                0x15,
                0x16,
                0x17,
                0x18,
                0x18,
                0x19,
                0x1A,
                0x1A,
                0x1B,
                0x1B,
                0x1C,
                0x1C,
                0x1C,
                0x1D,
                0x1D,
                0x1D,
                0x1E,
                0x1E,
                0x1E,
                0x1E,
                0x1E,
                0x1E,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_11_5))
    #if (defined(TINYMIND_USE_SIGMOID_12_4))
    const uint16_t SigmoidValuesTableQ12_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x6,
                0x7,
                0x7,
                0x8,
                0x8,
                0x8,
                0x9,
                0x9,
                0xA,
                0xA,
                0xB,
                0xB,
                0xC,
                0xC,
                0xC,
                0xD,
                0xD,
                0xD,
                0xD,
                0xE,
                0xE,
                0xE,
                0xE,
                0xE,
                0xE,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_12_4))
    #if (defined(TINYMIND_USE_SIGMOID_13_3))
    const uint16_t SigmoidValuesTableQ13_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x4,
                0x4,
                0x4,
                0x5,
                0x5,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_13_3))
    #if (defined(TINYMIND_USE_SIGMOID_14_2))
    const uint16_t SigmoidValuesTableQ14_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_14_2))
    #if (defined(TINYMIND_USE_SIGMOID_15_1))
    const uint16_t SigmoidValuesTableQ15_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_15_1))
    #if (defined(TINYMIND_USE_SIGMOID_1_31))
    const uint32_t SigmoidValuesTableQ1_31::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5105DD,
                0x5BC7E0,
                0x67F664,
                0x75C152,
                0x855ECA,
                0x970BE4,
                0xAB0D96,
                0xC1B1A3,
                0xDB4FB3,
                0xF84A81,
                0x1191129,
                0x13E209A,
                0x1680527,
                0x1975C3E,
                0x1CCD641,
                0x209387C,
                0x24D5F43,
                0x29A4024,
                0x2F0EC26,
                0x3529218,
                0x3C080D0,
                0x43C294D,
                0x4C720A0,
                0x5632173,
                0x6120D0F,
                0x6D5EB99,
                0x7B0EB5A,
                0x8A55EB6,
                0x9B5B889,
                0xAE48687,
                0xC346948,
                0xDA80991,
                0xF420A95,
                0x1104F8E3,
                0x12F335E8,
                0x150EE01D,
                0x1759B835,
                0x19D50402,
                0x1C81702A,
                0x1F5EF21A,
                0x226CAC28,
                0x25A8D611,
                0x2910AC21,
                0x2CA0675F,
                0x305340AC,
                0x34238037,
                0x380A99B5,
                0x3C0154CD,
                0x40000000,
                0x43FEAB32,
                0x47F5664A,
                0x4BDC7FC8,
                0x4FACBF53,
                0x535F98A0,
                0x56EF53DE,
                0x5A5729EE,
                0x5D9353D7,
                0x60A10DE5,
                0x637E8FD5,
                0x662AFBFD,
                0x68A647CA,
                0x6AF11FE2,
                0x6D0CCA17,
                0x6EFB071C,
                0x70BDF56A,
                0x7257F66E,
                0x73CB96B7,
                0x751B7978,
                0x764A4776,
                0x775AA149,
                0x784F14A5,
                0x792A1466,
                0x79EDF2F0,
                0x7A9CDE8C,
                0x7B38DF5F,
                0x7BC3D6B2,
                0x7C3F7F2F,
                0x7CAD6DE7,
                0x7D0F13D9,
                0x7D65BFDB,
                0x7DB2A0BC,
                0x7DF6C783,
                0x7E3329BE,
                0x7E68A3C1,
                0x7E97FAD8,
                0x7EC1DF65,
                0x7EE6EED6,
                0x7F07B57E,
                0x7F24B04C,
                0x7F3E4E5C,
                0x7F54F269,
                0x7F68F41B,
                0x7F7AA135,
                0x7F8A3EAD,
                0x7F98099B,
                0x7FA4381F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_1_31))
    #if (defined(TINYMIND_USE_SIGMOID_2_30))
    const uint32_t SigmoidValuesTableQ2_30::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2882EE,
                0x2DE3F0,
                0x33FB32,
                0x3AE0A9,
                0x42AF65,
                0x4B85F2,
                0x5586CB,
                0x60D8D1,
                0x6DA7D9,
                0x7C2540,
                0x8C8894,
                0x9F104D,
                0xB40293,
                0xCBAE1F,
                0xE66B20,
                0x1049C3E,
                0x126AFA1,
                0x14D2012,
                0x1787613,
                0x1A9490C,
                0x1E04068,
                0x21E14A6,
                0x2639050,
                0x2B190B9,
                0x3090687,
                0x36AF5CC,
                0x3D875AD,
                0x452AF5B,
                0x4DADC44,
                0x5724343,
                0x61A34A4,
                0x6D404C8,
                0x7A1054A,
                0x8827C71,
                0x9799AF4,
                0xA87700E,
                0xBACDC1A,
                0xCEA8201,
                0xE40B815,
                0xFAF790D,
                0x11365614,
                0x12D46B08,
                0x14885610,
                0x165033AF,
                0x1829A056,
                0x1A11C01B,
                0x1C054CDA,
                0x1E00AA66,
                0x20000000,
                0x21FF5599,
                0x23FAB325,
                0x25EE3FE4,
                0x27D65FA9,
                0x29AFCC50,
                0x2B77A9EF,
                0x2D2B94F7,
                0x2EC9A9EB,
                0x305086F2,
                0x31BF47EA,
                0x33157DFE,
                0x345323E5,
                0x35788FF1,
                0x3686650B,
                0x377D838E,
                0x385EFAB5,
                0x392BFB37,
                0x39E5CB5B,
                0x3A8DBCBC,
                0x3B2523BB,
                0x3BAD50A4,
                0x3C278A52,
                0x3C950A33,
                0x3CF6F978,
                0x3D4E6F46,
                0x3D9C6FAF,
                0x3DE1EB59,
                0x3E1FBF97,
                0x3E56B6F3,
                0x3E8789EC,
                0x3EB2DFED,
                0x3ED9505E,
                0x3EFB63C1,
                0x3F1994DF,
                0x3F3451E0,
                0x3F4BFD6C,
                0x3F60EFB2,
                0x3F73776B,
                0x3F83DABF,
                0x3F925826,
                0x3F9F272E,
                0x3FAA7934,
                0x3FB47A0D,
                0x3FBD509A,
                0x3FC51F56,
                0x3FCC04CD,
                0x3FD21C0F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_2_30))
    #if (defined(TINYMIND_USE_SIGMOID_3_29))
    const uint32_t SigmoidValuesTableQ3_29::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144177,
                0x16F1F8,
                0x19FD99,
                0x1D7054,
                0x2157B2,
                0x25C2F9,
                0x2AC365,
                0x306C68,
                0x36D3EC,
                0x3E12A0,
                0x46444A,
                0x4F8826,
                0x5A0149,
                0x65D70F,
                0x733590,
                0x824E1F,
                0x9357D0,
                0xA69009,
                0xBC3B09,
                0xD4A486,
                0xF02034,
                0x10F0A53,
                0x131C828,
                0x158C85C,
                0x1848343,
                0x1B57AE6,
                0x1EC3AD6,
                0x22957AD,
                0x26D6E22,
                0x2B921A1,
                0x30D1A52,
                0x36A0264,
                0x3D082A5,
                0x4413E38,
                0x4BCCD7A,
                0x543B807,
                0x5D66E0D,
                0x6754100,
                0x7205C0A,
                0x7D7BC86,
                0x89B2B0A,
                0x96A3584,
                0xA442B08,
                0xB2819D7,
                0xC14D02B,
                0xD08E00D,
                0xE02A66D,
                0xF005533,
                0x10000000,
                0x10FFAACC,
                0x11FD5992,
                0x12F71FF2,
                0x13EB2FD4,
                0x14D7E628,
                0x15BBD4F7,
                0x1695CA7B,
                0x1764D4F5,
                0x18284379,
                0x18DFA3F5,
                0x198ABEFF,
                0x1A2991F2,
                0x1ABC47F8,
                0x1B433285,
                0x1BBEC1C7,
                0x1C2F7D5A,
                0x1C95FD9B,
                0x1CF2E5AD,
                0x1D46DE5E,
                0x1D9291DD,
                0x1DD6A852,
                0x1E13C529,
                0x1E4A8519,
                0x1E7B7CBC,
                0x1EA737A3,
                0x1ECE37D7,
                0x1EF0F5AC,
                0x1F0FDFCB,
                0x1F2B5B79,
                0x1F43C4F6,
                0x1F596FF6,
                0x1F6CA82F,
                0x1F7DB1E0,
                0x1F8CCA6F,
                0x1F9A28F0,
                0x1FA5FEB6,
                0x1FB077D9,
                0x1FB9BBB5,
                0x1FC1ED5F,
                0x1FC92C13,
                0x1FCF9397,
                0x1FD53C9A,
                0x1FDA3D06,
                0x1FDEA84D,
                0x1FE28FAB,
                0x1FE60266,
                0x1FE90E07,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_3_29))
    #if (defined(TINYMIND_USE_SIGMOID_4_28))
    const uint32_t SigmoidValuesTableQ4_28::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA20BB,
                0xB78FC,
                0xCFECC,
                0xEB82A,
                0x10ABD9,
                0x12E17C,
                0x1561B2,
                0x183634,
                0x1B69F6,
                0x1F0950,
                0x232225,
                0x27C413,
                0x2D00A4,
                0x32EB87,
                0x399AC8,
                0x41270F,
                0x49ABE8,
                0x534804,
                0x5E1D84,
                0x6A5243,
                0x78101A,
                0x878529,
                0x98E414,
                0xAC642E,
                0xC241A1,
                0xDABD73,
                0xF61D6B,
                0x114ABD6,
                0x136B711,
                0x15C90D0,
                0x1868D29,
                0x1B50132,
                0x1E84152,
                0x2209F1C,
                0x25E66BD,
                0x2A1DC03,
                0x2EB3706,
                0x33AA080,
                0x3902E05,
                0x3EBDE43,
                0x44D9585,
                0x4B51AC2,
                0x5221584,
                0x5940CEB,
                0x60A6815,
                0x6847006,
                0x7015336,
                0x7802A99,
                0x8000000,
                0x87FD566,
                0x8FEACC9,
                0x97B8FF9,
                0x9F597EA,
                0xA6BF314,
                0xADDEA7B,
                0xB4AE53D,
                0xBB26A7A,
                0xC1421BC,
                0xC6FD1FA,
                0xCC55F7F,
                0xD14C8F9,
                0xD5E23FC,
                0xDA19942,
                0xDDF60E3,
                0xE17BEAD,
                0xE4AFECD,
                0xE7972D6,
                0xEA36F2F,
                0xEC948EE,
                0xEEB5429,
                0xF09E294,
                0xF25428C,
                0xF3DBE5E,
                0xF539BD1,
                0xF671BEB,
                0xF787AD6,
                0xF87EFE5,
                0xF95ADBC,
                0xFA1E27B,
                0xFACB7FB,
                0xFB65417,
                0xFBED8F0,
                0xFC66537,
                0xFCD1478,
                0xFD2FF5B,
                0xFD83BEC,
                0xFDCDDDA,
                0xFE0F6AF,
                0xFE49609,
                0xFE7C9CB,
                0xFEA9E4D,
                0xFED1E83,
                0xFEF5426,
                0xFF147D5,
                0xFF30133,
                0xFF48703,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_4_28))
    #if (defined(TINYMIND_USE_SIGMOID_5_27))
    const uint32_t SigmoidValuesTableQ5_27::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5105D,
                0x5BC7E,
                0x67F66,
                0x75C15,
                0x855EC,
                0x970BE,
                0xAB0D9,
                0xC1B1A,
                0xDB4FB,
                0xF84A8,
                0x119112,
                0x13E209,
                0x168052,
                0x1975C3,
                0x1CCD64,
                0x209387,
                0x24D5F4,
                0x29A402,
                0x2F0EC2,
                0x352921,
                0x3C080D,
                0x43C294,
                0x4C720A,
                0x563217,
                0x6120D0,
                0x6D5EB9,
                0x7B0EB5,
                0x8A55EB,
                0x9B5B88,
                0xAE4868,
                0xC34694,
                0xDA8099,
                0xF420A9,
                0x1104F8E,
                0x12F335E,
                0x150EE01,
                0x1759B83,
                0x19D5040,
                0x1C81702,
                0x1F5EF21,
                0x226CAC2,
                0x25A8D61,
                0x2910AC2,
                0x2CA0675,
                0x305340A,
                0x3423803,
                0x380A99B,
                0x3C0154C,
                0x4000000,
                0x43FEAB3,
                0x47F5664,
                0x4BDC7FC,
                0x4FACBF5,
                0x535F98A,
                0x56EF53D,
                0x5A5729E,
                0x5D9353D,
                0x60A10DE,
                0x637E8FD,
                0x662AFBF,
                0x68A647C,
                0x6AF11FE,
                0x6D0CCA1,
                0x6EFB071,
                0x70BDF56,
                0x7257F66,
                0x73CB96B,
                0x751B797,
                0x764A477,
                0x775AA14,
                0x784F14A,
                0x792A146,
                0x79EDF2F,
                0x7A9CDE8,
                0x7B38DF5,
                0x7BC3D6B,
                0x7C3F7F2,
                0x7CAD6DE,
                0x7D0F13D,
                0x7D65BFD,
                0x7DB2A0B,
                0x7DF6C78,
                0x7E3329B,
                0x7E68A3C,
                0x7E97FAD,
                0x7EC1DF6,
                0x7EE6EED,
                0x7F07B57,
                0x7F24B04,
                0x7F3E4E5,
                0x7F54F26,
                0x7F68F41,
                0x7F7AA13,
                0x7F8A3EA,
                0x7F98099,
                0x7FA4381,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_5_27))
    #if (defined(TINYMIND_USE_SIGMOID_6_26))
    const uint32_t SigmoidValuesTableQ6_26::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2882E,
                0x2DE3F,
                0x33FB3,
                0x3AE0A,
                0x42AF6,
                0x4B85F,
                0x5586C,
                0x60D8D,
                0x6DA7D,
                0x7C254,
                0x8C889,
                0x9F104,
                0xB4029,
                0xCBAE1,
                0xE66B2,
                0x1049C3,
                0x126AFA,
                0x14D201,
                0x178761,
                0x1A9490,
                0x1E0406,
                0x21E14A,
                0x263905,
                0x2B190B,
                0x309068,
                0x36AF5C,
                0x3D875A,
                0x452AF5,
                0x4DADC4,
                0x572434,
                0x61A34A,
                0x6D404C,
                0x7A1054,
                0x8827C7,
                0x9799AF,
                0xA87700,
                0xBACDC1,
                0xCEA820,
                0xE40B81,
                0xFAF790,
                0x1136561,
                0x12D46B0,
                0x1488561,
                0x165033A,
                0x1829A05,
                0x1A11C01,
                0x1C054CD,
                0x1E00AA6,
                0x2000000,
                0x21FF559,
                0x23FAB32,
                0x25EE3FE,
                0x27D65FA,
                0x29AFCC5,
                0x2B77A9E,
                0x2D2B94F,
                0x2EC9A9E,
                0x305086F,
                0x31BF47E,
                0x33157DF,
                0x345323E,
                0x35788FF,
                0x3686650,
                0x377D838,
                0x385EFAB,
                0x392BFB3,
                0x39E5CB5,
                0x3A8DBCB,
                0x3B2523B,
                0x3BAD50A,
                0x3C278A5,
                0x3C950A3,
                0x3CF6F97,
                0x3D4E6F4,
                0x3D9C6FA,
                0x3DE1EB5,
                0x3E1FBF9,
                0x3E56B6F,
                0x3E8789E,
                0x3EB2DFE,
                0x3ED9505,
                0x3EFB63C,
                0x3F1994D,
                0x3F3451E,
                0x3F4BFD6,
                0x3F60EFB,
                0x3F73776,
                0x3F83DAB,
                0x3F92582,
                0x3F9F272,
                0x3FAA793,
                0x3FB47A0,
                0x3FBD509,
                0x3FC51F5,
                0x3FCC04C,
                0x3FD21C0,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_6_26))
    #if (defined(TINYMIND_USE_SIGMOID_7_25))
    const uint32_t SigmoidValuesTableQ7_25::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14417,
                0x16F1F,
                0x19FD9,
                0x1D705,
                0x2157B,
                0x25C2F,
                0x2AC36,
                0x306C6,
                0x36D3E,
                0x3E12A,
                0x46444,
                0x4F882,
                0x5A014,
                0x65D70,
                0x73359,
                0x824E1,
                0x9357D,
                0xA6900,
                0xBC3B0,
                0xD4A48,
                0xF0203,
                0x10F0A5,
                0x131C82,
                0x158C85,
                0x184834,
                0x1B57AE,
                0x1EC3AD,
                0x22957A,
                0x26D6E2,
                0x2B921A,
                0x30D1A5,
                0x36A026,
                0x3D082A,
                0x4413E3,
                0x4BCCD7,
                0x543B80,
                0x5D66E0,
                0x675410,
                0x7205C0,
                0x7D7BC8,
                0x89B2B0,
                0x96A358,
                0xA442B0,
                0xB2819D,
                0xC14D02,
                0xD08E00,
                0xE02A66,
                0xF00553,
                0x1000000,
                0x10FFAAC,
                0x11FD599,
                0x12F71FF,
                0x13EB2FD,
                0x14D7E62,
                0x15BBD4F,
                0x1695CA7,
                0x1764D4F,
                0x1828437,
                0x18DFA3F,
                0x198ABEF,
                0x1A2991F,
                0x1ABC47F,
                0x1B43328,
                0x1BBEC1C,
                0x1C2F7D5,
                0x1C95FD9,
                0x1CF2E5A,
                0x1D46DE5,
                0x1D9291D,
                0x1DD6A85,
                0x1E13C52,
                0x1E4A851,
                0x1E7B7CB,
                0x1EA737A,
                0x1ECE37D,
                0x1EF0F5A,
                0x1F0FDFC,
                0x1F2B5B7,
                0x1F43C4F,
                0x1F596FF,
                0x1F6CA82,
                0x1F7DB1E,
                0x1F8CCA6,
                0x1F9A28F,
                0x1FA5FEB,
                0x1FB077D,
                0x1FB9BBB,
                0x1FC1ED5,
                0x1FC92C1,
                0x1FCF939,
                0x1FD53C9,
                0x1FDA3D0,
                0x1FDEA84,
                0x1FE28FA,
                0x1FE6026,
                0x1FE90E0,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_7_25))
    #if (defined(TINYMIND_USE_SIGMOID_8_24))
    const uint32_t SigmoidValuesTableQ8_24::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA20B,
                0xB78F,
                0xCFEC,
                0xEB82,
                0x10ABD,
                0x12E17,
                0x1561B,
                0x18363,
                0x1B69F,
                0x1F095,
                0x23222,
                0x27C41,
                0x2D00A,
                0x32EB8,
                0x399AC,
                0x41270,
                0x49ABE,
                0x53480,
                0x5E1D8,
                0x6A524,
                0x78101,
                0x87852,
                0x98E41,
                0xAC642,
                0xC241A,
                0xDABD7,
                0xF61D6,
                0x114ABD,
                0x136B71,
                0x15C90D,
                0x1868D2,
                0x1B5013,
                0x1E8415,
                0x2209F1,
                0x25E66B,
                0x2A1DC0,
                0x2EB370,
                0x33AA08,
                0x3902E0,
                0x3EBDE4,
                0x44D958,
                0x4B51AC,
                0x522158,
                0x5940CE,
                0x60A681,
                0x684700,
                0x701533,
                0x7802A9,
                0x800000,
                0x87FD56,
                0x8FEACC,
                0x97B8FF,
                0x9F597E,
                0xA6BF31,
                0xADDEA7,
                0xB4AE53,
                0xBB26A7,
                0xC1421B,
                0xC6FD1F,
                0xCC55F7,
                0xD14C8F,
                0xD5E23F,
                0xDA1994,
                0xDDF60E,
                0xE17BEA,
                0xE4AFEC,
                0xE7972D,
                0xEA36F2,
                0xEC948E,
                0xEEB542,
                0xF09E29,
                0xF25428,
                0xF3DBE5,
                0xF539BD,
                0xF671BE,
                0xF787AD,
                0xF87EFE,
                0xF95ADB,
                0xFA1E27,
                0xFACB7F,
                0xFB6541,
                0xFBED8F,
                0xFC6653,
                0xFCD147,
                0xFD2FF5,
                0xFD83BE,
                0xFDCDDD,
                0xFE0F6A,
                0xFE4960,
                0xFE7C9C,
                0xFEA9E4,
                0xFED1E8,
                0xFEF542,
                0xFF147D,
                0xFF3013,
                0xFF4870,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_8_24))
    #if (defined(TINYMIND_USE_SIGMOID_9_23))
    const uint32_t SigmoidValuesTableQ9_23::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5105,
                0x5BC7,
                0x67F6,
                0x75C1,
                0x855E,
                0x970B,
                0xAB0D,
                0xC1B1,
                0xDB4F,
                0xF84A,
                0x11911,
                0x13E20,
                0x16805,
                0x1975C,
                0x1CCD6,
                0x20938,
                0x24D5F,
                0x29A40,
                0x2F0EC,
                0x35292,
                0x3C080,
                0x43C29,
                0x4C720,
                0x56321,
                0x6120D,
                0x6D5EB,
                0x7B0EB,
                0x8A55E,
                0x9B5B8,
                0xAE486,
                0xC3469,
                0xDA809,
                0xF420A,
                0x1104F8,
                0x12F335,
                0x150EE0,
                0x1759B8,
                0x19D504,
                0x1C8170,
                0x1F5EF2,
                0x226CAC,
                0x25A8D6,
                0x2910AC,
                0x2CA067,
                0x305340,
                0x342380,
                0x380A99,
                0x3C0154,
                0x400000,
                0x43FEAB,
                0x47F566,
                0x4BDC7F,
                0x4FACBF,
                0x535F98,
                0x56EF53,
                0x5A5729,
                0x5D9353,
                0x60A10D,
                0x637E8F,
                0x662AFB,
                0x68A647,
                0x6AF11F,
                0x6D0CCA,
                0x6EFB07,
                0x70BDF5,
                0x7257F6,
                0x73CB96,
                0x751B79,
                0x764A47,
                0x775AA1,
                0x784F14,
                0x792A14,
                0x79EDF2,
                0x7A9CDE,
                0x7B38DF,
                0x7BC3D6,
                0x7C3F7F,
                0x7CAD6D,
                0x7D0F13,
                0x7D65BF,
                0x7DB2A0,
                0x7DF6C7,
                0x7E3329,
                0x7E68A3,
                0x7E97FA,
                0x7EC1DF,
                0x7EE6EE,
                0x7F07B5,
                0x7F24B0,
                0x7F3E4E,
                0x7F54F2,
                0x7F68F4,
                0x7F7AA1,
                0x7F8A3E,
                0x7F9809,
                0x7FA438,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_9_23))
    #if (defined(TINYMIND_USE_SIGMOID_10_22))
    const uint32_t SigmoidValuesTableQ10_22::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2882,
                0x2DE3,
                0x33FB,
                0x3AE0,
                0x42AF,
                0x4B85,
                0x5586,
                0x60D8,
                0x6DA7,
                0x7C25,
                0x8C88,
                0x9F10,
                0xB402,
                0xCBAE,
                0xE66B,
                0x1049C,
                0x126AF,
                0x14D20,
                0x17876,
                0x1A949,
                0x1E040,
                0x21E14,
                0x26390,
                0x2B190,
                0x30906,
                0x36AF5,
                0x3D875,
                0x452AF,
                0x4DADC,
                0x57243,
                0x61A34,
                0x6D404,
                0x7A105,
                0x8827C,
                0x9799A,
                0xA8770,
                0xBACDC,
                0xCEA82,
                0xE40B8,
                0xFAF79,
                0x113656,
                0x12D46B,
                0x148856,
                0x165033,
                0x1829A0,
                0x1A11C0,
                0x1C054C,
                0x1E00AA,
                0x200000,
                0x21FF55,
                0x23FAB3,
                0x25EE3F,
                0x27D65F,
                0x29AFCC,
                0x2B77A9,
                0x2D2B94,
                0x2EC9A9,
                0x305086,
                0x31BF47,
                0x33157D,
                0x345323,
                0x35788F,
                0x368665,
                0x377D83,
                0x385EFA,
                0x392BFB,
                0x39E5CB,
                0x3A8DBC,
                0x3B2523,
                0x3BAD50,
                0x3C278A,
                0x3C950A,
                0x3CF6F9,
                0x3D4E6F,
                0x3D9C6F,
                0x3DE1EB,
                0x3E1FBF,
                0x3E56B6,
                0x3E8789,
                0x3EB2DF,
                0x3ED950,
                0x3EFB63,
                0x3F1994,
                0x3F3451,
                0x3F4BFD,
                0x3F60EF,
                0x3F7377,
                0x3F83DA,
                0x3F9258,
                0x3F9F27,
                0x3FAA79,
                0x3FB47A,
                0x3FBD50,
                0x3FC51F,
                0x3FCC04,
                0x3FD21C,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_10_22))
    #if (defined(TINYMIND_USE_SIGMOID_11_21))
    const uint32_t SigmoidValuesTableQ11_21::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x1441,
                0x16F1,
                0x19FD,
                0x1D70,
                0x2157,
                0x25C2,
                0x2AC3,
                0x306C,
                0x36D3,
                0x3E12,
                0x4644,
                0x4F88,
                0x5A01,
                0x65D7,
                0x7335,
                0x824E,
                0x9357,
                0xA690,
                0xBC3B,
                0xD4A4,
                0xF020,
                0x10F0A,
                0x131C8,
                0x158C8,
                0x18483,
                0x1B57A,
                0x1EC3A,
                0x22957,
                0x26D6E,
                0x2B921,
                0x30D1A,
                0x36A02,
                0x3D082,
                0x4413E,
                0x4BCCD,
                0x543B8,
                0x5D66E,
                0x67541,
                0x7205C,
                0x7D7BC,
                0x89B2B,
                0x96A35,
                0xA442B,
                0xB2819,
                0xC14D0,
                0xD08E0,
                0xE02A6,
                0xF0055,
                0x100000,
                0x10FFAA,
                0x11FD59,
                0x12F71F,
                0x13EB2F,
                0x14D7E6,
                0x15BBD4,
                0x1695CA,
                0x1764D4,
                0x182843,
                0x18DFA3,
                0x198ABE,
                0x1A2991,
                0x1ABC47,
                0x1B4332,
                0x1BBEC1,
                0x1C2F7D,
                0x1C95FD,
                0x1CF2E5,
                0x1D46DE,
                0x1D9291,
                0x1DD6A8,
                0x1E13C5,
                0x1E4A85,
                0x1E7B7C,
                0x1EA737,
                0x1ECE37,
                0x1EF0F5,
                0x1F0FDF,
                0x1F2B5B,
                0x1F43C4,
                0x1F596F,
                0x1F6CA8,
                0x1F7DB1,
                0x1F8CCA,
                0x1F9A28,
                0x1FA5FE,
                0x1FB077,
                0x1FB9BB,
                0x1FC1ED,
                0x1FC92C,
                0x1FCF93,
                0x1FD53C,
                0x1FDA3D,
                0x1FDEA8,
                0x1FE28F,
                0x1FE602,
                0x1FE90E,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_11_21))
    #if (defined(TINYMIND_USE_SIGMOID_12_20))
    const uint32_t SigmoidValuesTableQ12_20::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA20,
                0xB78,
                0xCFE,
                0xEB8,
                0x10AB,
                0x12E1,
                0x1561,
                0x1836,
                0x1B69,
                0x1F09,
                0x2322,
                0x27C4,
                0x2D00,
                0x32EB,
                0x399A,
                0x4127,
                0x49AB,
                0x5348,
                0x5E1D,
                0x6A52,
                0x7810,
                0x8785,
                0x98E4,
                0xAC64,
                0xC241,
                0xDABD,
                0xF61D,
                0x114AB,
                0x136B7,
                0x15C90,
                0x1868D,
                0x1B501,
                0x1E841,
                0x2209F,
                0x25E66,
                0x2A1DC,
                0x2EB37,
                0x33AA0,
                0x3902E,
                0x3EBDE,
                0x44D95,
                0x4B51A,
                0x52215,
                0x5940C,
                0x60A68,
                0x68470,
                0x70153,
                0x7802A,
                0x80000,
                0x87FD5,
                0x8FEAC,
                0x97B8F,
                0x9F597,
                0xA6BF3,
                0xADDEA,
                0xB4AE5,
                0xBB26A,
                0xC1421,
                0xC6FD1,
                0xCC55F,
                0xD14C8,
                0xD5E23,
                0xDA199,
                0xDDF60,
                0xE17BE,
                0xE4AFE,
                0xE7972,
                0xEA36F,
                0xEC948,
                0xEEB54,
                0xF09E2,
                0xF2542,
                0xF3DBE,
                0xF539B,
                0xF671B,
                0xF787A,
                0xF87EF,
                0xF95AD,
                0xFA1E2,
                0xFACB7,
                0xFB654,
                0xFBED8,
                0xFC665,
                0xFCD14,
                0xFD2FF,
                0xFD83B,
                0xFDCDD,
                0xFE0F6,
                0xFE496,
                0xFE7C9,
                0xFEA9E,
                0xFED1E,
                0xFEF54,
                0xFF147,
                0xFF301,
                0xFF487,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_12_20))
    #if (defined(TINYMIND_USE_SIGMOID_13_19))
    const uint32_t SigmoidValuesTableQ13_19::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x510,
                0x5BC,
                0x67F,
                0x75C,
                0x855,
                0x970,
                0xAB0,
                0xC1B,
                0xDB4,
                0xF84,
                0x1191,
                0x13E2,
                0x1680,
                0x1975,
                0x1CCD,
                0x2093,
                0x24D5,
                0x29A4,
                0x2F0E,
                0x3529,
                0x3C08,
                0x43C2,
                0x4C72,
                0x5632,
                0x6120,
                0x6D5E,
                0x7B0E,
                0x8A55,
                0x9B5B,
                0xAE48,
                0xC346,
                0xDA80,
                0xF420,
                0x1104F,
                0x12F33,
                0x150EE,
                0x1759B,
                0x19D50,
                0x1C817,
                0x1F5EF,
                0x226CA,
                0x25A8D,
                0x2910A,
                0x2CA06,
                0x30534,
                0x34238,
                0x380A9,
                0x3C015,
                0x40000,
                0x43FEA,
                0x47F56,
                0x4BDC7,
                0x4FACB,
                0x535F9,
                0x56EF5,
                0x5A572,
                0x5D935,
                0x60A10,
                0x637E8,
                0x662AF,
                0x68A64,
                0x6AF11,
                0x6D0CC,
                0x6EFB0,
                0x70BDF,
                0x7257F,
                0x73CB9,
                0x751B7,
                0x764A4,
                0x775AA,
                0x784F1,
                0x792A1,
                0x79EDF,
                0x7A9CD,
                0x7B38D,
                0x7BC3D,
                0x7C3F7,
                0x7CAD6,
                0x7D0F1,
                0x7D65B,
                0x7DB2A,
                0x7DF6C,
                0x7E332,
                0x7E68A,
                0x7E97F,
                0x7EC1D,
                0x7EE6E,
                0x7F07B,
                0x7F24B,
                0x7F3E4,
                0x7F54F,
                0x7F68F,
                0x7F7AA,
                0x7F8A3,
                0x7F980,
                0x7FA43,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_13_19))
    #if (defined(TINYMIND_USE_SIGMOID_14_18))
    const uint32_t SigmoidValuesTableQ14_18::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x288,
                0x2DE,
                0x33F,
                0x3AE,
                0x42A,
                0x4B8,
                0x558,
                0x60D,
                0x6DA,
                0x7C2,
                0x8C8,
                0x9F1,
                0xB40,
                0xCBA,
                0xE66,
                0x1049,
                0x126A,
                0x14D2,
                0x1787,
                0x1A94,
                0x1E04,
                0x21E1,
                0x2639,
                0x2B19,
                0x3090,
                0x36AF,
                0x3D87,
                0x452A,
                0x4DAD,
                0x5724,
                0x61A3,
                0x6D40,
                0x7A10,
                0x8827,
                0x9799,
                0xA877,
                0xBACD,
                0xCEA8,
                0xE40B,
                0xFAF7,
                0x11365,
                0x12D46,
                0x14885,
                0x16503,
                0x1829A,
                0x1A11C,
                0x1C054,
                0x1E00A,
                0x20000,
                0x21FF5,
                0x23FAB,
                0x25EE3,
                0x27D65,
                0x29AFC,
                0x2B77A,
                0x2D2B9,
                0x2EC9A,
                0x30508,
                0x31BF4,
                0x33157,
                0x34532,
                0x35788,
                0x36866,
                0x377D8,
                0x385EF,
                0x392BF,
                0x39E5C,
                0x3A8DB,
                0x3B252,
                0x3BAD5,
                0x3C278,
                0x3C950,
                0x3CF6F,
                0x3D4E6,
                0x3D9C6,
                0x3DE1E,
                0x3E1FB,
                0x3E56B,
                0x3E878,
                0x3EB2D,
                0x3ED95,
                0x3EFB6,
                0x3F199,
                0x3F345,
                0x3F4BF,
                0x3F60E,
                0x3F737,
                0x3F83D,
                0x3F925,
                0x3F9F2,
                0x3FAA7,
                0x3FB47,
                0x3FBD5,
                0x3FC51,
                0x3FCC0,
                0x3FD21,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_14_18))
    #if (defined(TINYMIND_USE_SIGMOID_15_17))
    const uint32_t SigmoidValuesTableQ15_17::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144,
                0x16F,
                0x19F,
                0x1D7,
                0x215,
                0x25C,
                0x2AC,
                0x306,
                0x36D,
                0x3E1,
                0x464,
                0x4F8,
                0x5A0,
                0x65D,
                0x733,
                0x824,
                0x935,
                0xA69,
                0xBC3,
                0xD4A,
                0xF02,
                0x10F0,
                0x131C,
                0x158C,
                0x1848,
                0x1B57,
                0x1EC3,
                0x2295,
                0x26D6,
                0x2B92,
                0x30D1,
                0x36A0,
                0x3D08,
                0x4413,
                0x4BCC,
                0x543B,
                0x5D66,
                0x6754,
                0x7205,
                0x7D7B,
                0x89B2,
                0x96A3,
                0xA442,
                0xB281,
                0xC14D,
                0xD08E,
                0xE02A,
                0xF005,
                0x10000,
                0x10FFA,
                0x11FD5,
                0x12F71,
                0x13EB2,
                0x14D7E,
                0x15BBD,
                0x1695C,
                0x1764D,
                0x18284,
                0x18DFA,
                0x198AB,
                0x1A299,
                0x1ABC4,
                0x1B433,
                0x1BBEC,
                0x1C2F7,
                0x1C95F,
                0x1CF2E,
                0x1D46D,
                0x1D929,
                0x1DD6A,
                0x1E13C,
                0x1E4A8,
                0x1E7B7,
                0x1EA73,
                0x1ECE3,
                0x1EF0F,
                0x1F0FD,
                0x1F2B5,
                0x1F43C,
                0x1F596,
                0x1F6CA,
                0x1F7DB,
                0x1F8CC,
                0x1F9A2,
                0x1FA5F,
                0x1FB07,
                0x1FB9B,
                0x1FC1E,
                0x1FC92,
                0x1FCF9,
                0x1FD53,
                0x1FDA3,
                0x1FDEA,
                0x1FE28,
                0x1FE60,
                0x1FE90,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_15_17))
    #if (defined(TINYMIND_USE_SIGMOID_16_16))
    const uint32_t SigmoidValuesTableQ16_16::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA2,
                0xB7,
                0xCF,
                0xEB,
                0x10A,
                0x12E,
                0x156,
                0x183,
                0x1B6,
                0x1F0,
                0x232,
                0x27C,
                0x2D0,
                0x32E,
                0x399,
                0x412,
                0x49A,
                0x534,
                0x5E1,
                0x6A5,
                0x781,
                0x878,
                0x98E,
                0xAC6,
                0xC24,
                0xDAB,
                0xF61,
                0x114A,
                0x136B,
                0x15C9,
                0x1868,
                0x1B50,
                0x1E84,
                0x2209,
                0x25E6,
                0x2A1D,
                0x2EB3,
                0x33AA,
                0x3902,
                0x3EBD,
                0x44D9,
                0x4B51,
                0x5221,
                0x5940,
                0x60A6,
                0x6847,
                0x7015,
                0x7802,
                0x8000,
                0x87FD,
                0x8FEA,
                0x97B8,
                0x9F59,
                0xA6BF,
                0xADDE,
                0xB4AE,
                0xBB26,
                0xC142,
                0xC6FD,
                0xCC55,
                0xD14C,
                0xD5E2,
                0xDA19,
                0xDDF6,
                0xE17B,
                0xE4AF,
                0xE797,
                0xEA36,
                0xEC94,
                0xEEB5,
                0xF09E,
                0xF254,
                0xF3DB,
                0xF539,
                0xF671,
                0xF787,
                0xF87E,
                0xF95A,
                0xFA1E,
                0xFACB,
                0xFB65,
                0xFBED,
                0xFC66,
                0xFCD1,
                0xFD2F,
                0xFD83,
                0xFDCD,
                0xFE0F,
                0xFE49,
                0xFE7C,
                0xFEA9,
                0xFED1,
                0xFEF5,
                0xFF14,
                0xFF30,
                0xFF48,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_16_16))
    #if (defined(TINYMIND_USE_SIGMOID_17_15))
    const uint32_t SigmoidValuesTableQ17_15::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x51,
                0x5B,
                0x67,
                0x75,
                0x85,
                0x97,
                0xAB,
                0xC1,
                0xDB,
                0xF8,
                0x119,
                0x13E,
                0x168,
                0x197,
                0x1CC,
                0x209,
                0x24D,
                0x29A,
                0x2F0,
                0x352,
                0x3C0,
                0x43C,
                0x4C7,
                0x563,
                0x612,
                0x6D5,
                0x7B0,
                0x8A5,
                0x9B5,
                0xAE4,
                0xC34,
                0xDA8,
                0xF42,
                0x1104,
                0x12F3,
                0x150E,
                0x1759,
                0x19D5,
                0x1C81,
                0x1F5E,
                0x226C,
                0x25A8,
                0x2910,
                0x2CA0,
                0x3053,
                0x3423,
                0x380A,
                0x3C01,
                0x4000,
                0x43FE,
                0x47F5,
                0x4BDC,
                0x4FAC,
                0x535F,
                0x56EF,
                0x5A57,
                0x5D93,
                0x60A1,
                0x637E,
                0x662A,
                0x68A6,
                0x6AF1,
                0x6D0C,
                0x6EFB,
                0x70BD,
                0x7257,
                0x73CB,
                0x751B,
                0x764A,
                0x775A,
                0x784F,
                0x792A,
                0x79ED,
                0x7A9C,
                0x7B38,
                0x7BC3,
                0x7C3F,
                0x7CAD,
                0x7D0F,
                0x7D65,
                0x7DB2,
                0x7DF6,
                0x7E33,
                0x7E68,
                0x7E97,
                0x7EC1,
                0x7EE6,
                0x7F07,
                0x7F24,
                0x7F3E,
                0x7F54,
                0x7F68,
                0x7F7A,
                0x7F8A,
                0x7F98,
                0x7FA4,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_17_15))
    #if (defined(TINYMIND_USE_SIGMOID_18_14))
    const uint32_t SigmoidValuesTableQ18_14::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x28,
                0x2D,
                0x33,
                0x3A,
                0x42,
                0x4B,
                0x55,
                0x60,
                0x6D,
                0x7C,
                0x8C,
                0x9F,
                0xB4,
                0xCB,
                0xE6,
                0x104,
                0x126,
                0x14D,
                0x178,
                0x1A9,
                0x1E0,
                0x21E,
                0x263,
                0x2B1,
                0x309,
                0x36A,
                0x3D8,
                0x452,
                0x4DA,
                0x572,
                0x61A,
                0x6D4,
                0x7A1,
                0x882,
                0x979,
                0xA87,
                0xBAC,
                0xCEA,
                0xE40,
                0xFAF,
                0x1136,
                0x12D4,
                0x1488,
                0x1650,
                0x1829,
                0x1A11,
                0x1C05,
                0x1E00,
                0x2000,
                0x21FF,
                0x23FA,
                0x25EE,
                0x27D6,
                0x29AF,
                0x2B77,
                0x2D2B,
                0x2EC9,
                0x3050,
                0x31BF,
                0x3315,
                0x3453,
                0x3578,
                0x3686,
                0x377D,
                0x385E,
                0x392B,
                0x39E5,
                0x3A8D,
                0x3B25,
                0x3BAD,
                0x3C27,
                0x3C95,
                0x3CF6,
                0x3D4E,
                0x3D9C,
                0x3DE1,
                0x3E1F,
                0x3E56,
                0x3E87,
                0x3EB2,
                0x3ED9,
                0x3EFB,
                0x3F19,
                0x3F34,
                0x3F4B,
                0x3F60,
                0x3F73,
                0x3F83,
                0x3F92,
                0x3F9F,
                0x3FAA,
                0x3FB4,
                0x3FBD,
                0x3FC5,
                0x3FCC,
                0x3FD2,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_18_14))
    #if (defined(TINYMIND_USE_SIGMOID_19_13))
    const uint32_t SigmoidValuesTableQ19_13::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14,
                0x16,
                0x19,
                0x1D,
                0x21,
                0x25,
                0x2A,
                0x30,
                0x36,
                0x3E,
                0x46,
                0x4F,
                0x5A,
                0x65,
                0x73,
                0x82,
                0x93,
                0xA6,
                0xBC,
                0xD4,
                0xF0,
                0x10F,
                0x131,
                0x158,
                0x184,
                0x1B5,
                0x1EC,
                0x229,
                0x26D,
                0x2B9,
                0x30D,
                0x36A,
                0x3D0,
                0x441,
                0x4BC,
                0x543,
                0x5D6,
                0x675,
                0x720,
                0x7D7,
                0x89B,
                0x96A,
                0xA44,
                0xB28,
                0xC14,
                0xD08,
                0xE02,
                0xF00,
                0x1000,
                0x10FF,
                0x11FD,
                0x12F7,
                0x13EB,
                0x14D7,
                0x15BB,
                0x1695,
                0x1764,
                0x1828,
                0x18DF,
                0x198A,
                0x1A29,
                0x1ABC,
                0x1B43,
                0x1BBE,
                0x1C2F,
                0x1C95,
                0x1CF2,
                0x1D46,
                0x1D92,
                0x1DD6,
                0x1E13,
                0x1E4A,
                0x1E7B,
                0x1EA7,
                0x1ECE,
                0x1EF0,
                0x1F0F,
                0x1F2B,
                0x1F43,
                0x1F59,
                0x1F6C,
                0x1F7D,
                0x1F8C,
                0x1F9A,
                0x1FA5,
                0x1FB0,
                0x1FB9,
                0x1FC1,
                0x1FC9,
                0x1FCF,
                0x1FD5,
                0x1FDA,
                0x1FDE,
                0x1FE2,
                0x1FE6,
                0x1FE9,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_19_13))
    #if (defined(TINYMIND_USE_SIGMOID_20_12))
    const uint32_t SigmoidValuesTableQ20_12::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x15,
                0x18,
                0x1B,
                0x1F,
                0x23,
                0x27,
                0x2D,
                0x32,
                0x39,
                0x41,
                0x49,
                0x53,
                0x5E,
                0x6A,
                0x78,
                0x87,
                0x98,
                0xAC,
                0xC2,
                0xDA,
                0xF6,
                0x114,
                0x136,
                0x15C,
                0x186,
                0x1B5,
                0x1E8,
                0x220,
                0x25E,
                0x2A1,
                0x2EB,
                0x33A,
                0x390,
                0x3EB,
                0x44D,
                0x4B5,
                0x522,
                0x594,
                0x60A,
                0x684,
                0x701,
                0x780,
                0x800,
                0x87F,
                0x8FE,
                0x97B,
                0x9F5,
                0xA6B,
                0xADD,
                0xB4A,
                0xBB2,
                0xC14,
                0xC6F,
                0xCC5,
                0xD14,
                0xD5E,
                0xDA1,
                0xDDF,
                0xE17,
                0xE4A,
                0xE79,
                0xEA3,
                0xEC9,
                0xEEB,
                0xF09,
                0xF25,
                0xF3D,
                0xF53,
                0xF67,
                0xF78,
                0xF87,
                0xF95,
                0xFA1,
                0xFAC,
                0xFB6,
                0xFBE,
                0xFC6,
                0xFCD,
                0xFD2,
                0xFD8,
                0xFDC,
                0xFE0,
                0xFE4,
                0xFE7,
                0xFEA,
                0xFED,
                0xFEF,
                0xFF1,
                0xFF3,
                0xFF4,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_20_12))
    #if (defined(TINYMIND_USE_SIGMOID_21_11))
    const uint32_t SigmoidValuesTableQ21_11::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x13,
                0x16,
                0x19,
                0x1C,
                0x20,
                0x24,
                0x29,
                0x2F,
                0x35,
                0x3C,
                0x43,
                0x4C,
                0x56,
                0x61,
                0x6D,
                0x7B,
                0x8A,
                0x9B,
                0xAE,
                0xC3,
                0xDA,
                0xF4,
                0x110,
                0x12F,
                0x150,
                0x175,
                0x19D,
                0x1C8,
                0x1F5,
                0x226,
                0x25A,
                0x291,
                0x2CA,
                0x305,
                0x342,
                0x380,
                0x3C0,
                0x400,
                0x43F,
                0x47F,
                0x4BD,
                0x4FA,
                0x535,
                0x56E,
                0x5A5,
                0x5D9,
                0x60A,
                0x637,
                0x662,
                0x68A,
                0x6AF,
                0x6D0,
                0x6EF,
                0x70B,
                0x725,
                0x73C,
                0x751,
                0x764,
                0x775,
                0x784,
                0x792,
                0x79E,
                0x7A9,
                0x7B3,
                0x7BC,
                0x7C3,
                0x7CA,
                0x7D0,
                0x7D6,
                0x7DB,
                0x7DF,
                0x7E3,
                0x7E6,
                0x7E9,
                0x7EC,
                0x7EE,
                0x7F0,
                0x7F2,
                0x7F3,
                0x7F5,
                0x7F6,
                0x7F7,
                0x7F8,
                0x7F9,
                0x7FA,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_21_11))
    #if (defined(TINYMIND_USE_SIGMOID_22_10))
    const uint32_t SigmoidValuesTableQ22_10::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0x9,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x14,
                0x17,
                0x1A,
                0x1E,
                0x21,
                0x26,
                0x2B,
                0x30,
                0x36,
                0x3D,
                0x45,
                0x4D,
                0x57,
                0x61,
                0x6D,
                0x7A,
                0x88,
                0x97,
                0xA8,
                0xBA,
                0xCE,
                0xE4,
                0xFA,
                0x113,
                0x12D,
                0x148,
                0x165,
                0x182,
                0x1A1,
                0x1C0,
                0x1E0,
                0x200,
                0x21F,
                0x23F,
                0x25E,
                0x27D,
                0x29A,
                0x2B7,
                0x2D2,
                0x2EC,
                0x305,
                0x31B,
                0x331,
                0x345,
                0x357,
                0x368,
                0x377,
                0x385,
                0x392,
                0x39E,
                0x3A8,
                0x3B2,
                0x3BA,
                0x3C2,
                0x3C9,
                0x3CF,
                0x3D4,
                0x3D9,
                0x3DE,
                0x3E1,
                0x3E5,
                0x3E8,
                0x3EB,
                0x3ED,
                0x3EF,
                0x3F1,
                0x3F3,
                0x3F4,
                0x3F6,
                0x3F7,
                0x3F8,
                0x3F9,
                0x3F9,
                0x3FA,
                0x3FB,
                0x3FB,
                0x3FC,
                0x3FC,
                0x3FD,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_22_10))
    #if (defined(TINYMIND_USE_SIGMOID_23_9))
    const uint32_t SigmoidValuesTableQ23_9::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xF,
                0x10,
                0x13,
                0x15,
                0x18,
                0x1B,
                0x1E,
                0x22,
                0x26,
                0x2B,
                0x30,
                0x36,
                0x3D,
                0x44,
                0x4B,
                0x54,
                0x5D,
                0x67,
                0x72,
                0x7D,
                0x89,
                0x96,
                0xA4,
                0xB2,
                0xC1,
                0xD0,
                0xE0,
                0xF0,
                0x100,
                0x10F,
                0x11F,
                0x12F,
                0x13E,
                0x14D,
                0x15B,
                0x169,
                0x176,
                0x182,
                0x18D,
                0x198,
                0x1A2,
                0x1AB,
                0x1B4,
                0x1BB,
                0x1C2,
                0x1C9,
                0x1CF,
                0x1D4,
                0x1D9,
                0x1DD,
                0x1E1,
                0x1E4,
                0x1E7,
                0x1EA,
                0x1EC,
                0x1EF,
                0x1F0,
                0x1F2,
                0x1F4,
                0x1F5,
                0x1F6,
                0x1F7,
                0x1F8,
                0x1F9,
                0x1FA,
                0x1FB,
                0x1FB,
                0x1FC,
                0x1FC,
                0x1FC,
                0x1FD,
                0x1FD,
                0x1FD,
                0x1FE,
                0x1FE,
                0x1FE,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_23_9))
    #if (defined(TINYMIND_USE_SIGMOID_24_8))
    const uint32_t SigmoidValuesTableQ24_8::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x13,
                0x15,
                0x18,
                0x1B,
                0x1E,
                0x22,
                0x25,
                0x2A,
                0x2E,
                0x33,
                0x39,
                0x3E,
                0x44,
                0x4B,
                0x52,
                0x59,
                0x60,
                0x68,
                0x70,
                0x78,
                0x80,
                0x87,
                0x8F,
                0x97,
                0x9F,
                0xA6,
                0xAD,
                0xB4,
                0xBB,
                0xC1,
                0xC6,
                0xCC,
                0xD1,
                0xD5,
                0xDA,
                0xDD,
                0xE1,
                0xE4,
                0xE7,
                0xEA,
                0xEC,
                0xEE,
                0xF0,
                0xF2,
                0xF3,
                0xF5,
                0xF6,
                0xF7,
                0xF8,
                0xF9,
                0xFA,
                0xFA,
                0xFB,
                0xFB,
                0xFC,
                0xFC,
                0xFD,
                0xFD,
                0xFD,
                0xFE,
                0xFE,
                0xFE,
                0xFE,
                0xFE,
                0xFE,
                0xFF,
                0xFF,
                0xFF,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_24_8))
    #if (defined(TINYMIND_USE_SIGMOID_25_7))
    const uint32_t SigmoidValuesTableQ25_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x12,
                0x15,
                0x17,
                0x19,
                0x1C,
                0x1F,
                0x22,
                0x25,
                0x29,
                0x2C,
                0x30,
                0x34,
                0x38,
                0x3C,
                0x40,
                0x43,
                0x47,
                0x4B,
                0x4F,
                0x53,
                0x56,
                0x5A,
                0x5D,
                0x60,
                0x63,
                0x66,
                0x68,
                0x6A,
                0x6D,
                0x6E,
                0x70,
                0x72,
                0x73,
                0x75,
                0x76,
                0x77,
                0x78,
                0x79,
                0x79,
                0x7A,
                0x7B,
                0x7B,
                0x7C,
                0x7C,
                0x7D,
                0x7D,
                0x7D,
                0x7D,
                0x7E,
                0x7E,
                0x7E,
                0x7E,
                0x7E,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_25_7))
    #if (defined(TINYMIND_USE_SIGMOID_26_6))
    const uint32_t SigmoidValuesTableQ26_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xC,
                0xE,
                0xF,
                0x11,
                0x12,
                0x14,
                0x16,
                0x18,
                0x1A,
                0x1C,
                0x1E,
                0x20,
                0x21,
                0x23,
                0x25,
                0x27,
                0x29,
                0x2B,
                0x2D,
                0x2E,
                0x30,
                0x31,
                0x33,
                0x34,
                0x35,
                0x36,
                0x37,
                0x38,
                0x39,
                0x39,
                0x3A,
                0x3B,
                0x3B,
                0x3C,
                0x3C,
                0x3C,
                0x3D,
                0x3D,
                0x3D,
                0x3E,
                0x3E,
                0x3E,
                0x3E,
                0x3E,
                0x3E,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_26_6))
    #if (defined(TINYMIND_USE_SIGMOID_27_5))
    const uint32_t SigmoidValuesTableQ27_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xC,
                0xD,
                0xE,
                0xF,
                0x10,
                0x10,
                0x11,
                0x12,
                0x13,
                0x14,
                0x15,
                0x16,
                0x17,
                0x18,
                0x18,
                0x19,
                0x1A,
                0x1A,
                0x1B,
                0x1B,
                0x1C,
                0x1C,
                0x1C,
                0x1D,
                0x1D,
                0x1D,
                0x1E,
                0x1E,
                0x1E,
                0x1E,
                0x1E,
                0x1E,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_27_5))
    #if (defined(TINYMIND_USE_SIGMOID_28_4))
    const uint32_t SigmoidValuesTableQ28_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x6,
                0x7,
                0x7,
                0x8,
                0x8,
                0x8,
                0x9,
                0x9,
                0xA,
                0xA,
                0xB,
                0xB,
                0xC,
                0xC,
                0xC,
                0xD,
                0xD,
                0xD,
                0xD,
                0xE,
                0xE,
                0xE,
                0xE,
                0xE,
                0xE,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_28_4))
    #if (defined(TINYMIND_USE_SIGMOID_29_3))
    const uint32_t SigmoidValuesTableQ29_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x4,
                0x4,
                0x4,
                0x5,
                0x5,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_29_3))
    #if (defined(TINYMIND_USE_SIGMOID_30_2))
    const uint32_t SigmoidValuesTableQ30_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_30_2))
    #if (defined(TINYMIND_USE_SIGMOID_31_1))
    const uint32_t SigmoidValuesTableQ31_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_31_1))
    #if (defined(TINYMIND_USE_SIGMOID_1_63))
    const uint64_t SigmoidValuesTableQ1_63::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5105DDCBEA0040,
                0x5BC7E0DC734FE8,
                0x67F66486476884,
                0x75C152C7F04958,
                0x855ECA30A38330,
                0x970BE4E125B8B8,
                0xAB0D9691428600,
                0xC1B1A3B6032738,
                0xDB4FB3EB1C7C78,
                0xF84A81B83D1258,
                0x1191129AABA4950,
                0x13E209A7DAF6EA0,
                0x1680527A405C3B0,
                0x1975C3EECC3BE10,
                0x1CCD6411B606F90,
                0x209387C198CCF00,
                0x24D5F43C8785840,
                0x29A40245426D9C0,
                0x2F0EC2627E44B20,
                0x352921820A80600,
                0x3C080D03995B260,
                0x43C294D915CE180,
                0x4C720A033C70F80,
                0x56321737AF29EC0,
                0x6120D0F24151180,
                0x6D5EB997E6E8100,
                0x7B0EB5AB6371080,
                0x8A55EB6B2E87D00,
                0x9B5B88929A42400,
                0xAE486879CED0B80,
                0xC346948B7652E00,
                0xDA80991E4C91C80,
                0xF420A95D618D700,
                0x1104F8E397F50700,
                0x12F335E8E7BFD700,
                0x150EE01DE5ACD000,
                0x1759B8355A1BAF00,
                0x19D50402C11D4900,
                0x1C81702A88E0D500,
                0x1F5EF21A12569300,
                0x226CAC28A9750C00,
                0x25A8D611B77FC800,
                0x2910AC2173704E00,
                0x2CA0675F159AF200,
                0x305340ACB2F1BE00,
                0x34238037E2044400,
                0x380A99B50ED1F200,
                0x3C0154CD03F9E600,
                0x4000000000000000,
                0x43FEAB32FC061C00,
                0x47F5664AF12E0C00,
                0x4BDC7FC81DFBBC00,
                0x4FACBF534D0E4400,
                0x535F98A0EA650C00,
                0x56EF53DE8C8FB000,
                0x5A5729EE48803800,
                0x5D9353D7568AF400,
                0x60A10DE5EDA96C00,
                0x637E8FD5771F2C00,
                0x662AFBFD3EE2B800,
                0x68A647CAA5E45000,
                0x6AF11FE21A533000,
                0x6D0CCA1718402C00,
                0x6EFB071C680AF800,
                0x70BDF56A29E72800,
                0x7257F66E1B36E400,
                0x73CB96B7489AD400,
                0x751B79786312F400,
                0x764A4776D65BDC00,
                0x775AA1494D178400,
                0x784F14A549C8F400,
                0x792A146681918000,
                0x79EDF2F0DBEAF000,
                0x7A9CDE8C850D6000,
                0x7B38DF5FCC38F000,
                0x7BC3D6B26EA32000,
                0x7C3F7F2FC66A4C00,
                0x7CAD6DE7DF57F800,
                0x7D0F13D9D81BB400,
                0x7D65BFDBABD92800,
                0x7DB2A0BC3787A800,
                0x7DF6C783E6733000,
                0x7E3329BEE49F9000,
                0x7E68A3C1133C4000,
                0x7E97FAD85BFA3C00,
                0x7EC1DF6582509000,
                0x7EE6EED65545B800,
                0x7F07B57E47C2EC00,
                0x7F24B04C14E38400,
                0x7F3E4E5C49FCD800,
                0x7F54F2696EBD7C00,
                0x7F68F41B1EDA4800,
                0x7F7AA135CF5C7C00,
                0x7F8A3EAD380FB800,
                0x7F98099B79B89800,
                0x7FA4381F238CB000,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_1_63))
    #if (defined(TINYMIND_USE_SIGMOID_2_62))
    const uint64_t SigmoidValuesTableQ2_62::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2882EEE5F50020,
                0x2DE3F06E39A7F4,
                0x33FB324323B442,
                0x3AE0A963F824AC,
                0x42AF651851C198,
                0x4B85F27092DC5C,
                0x5586CB48A14300,
                0x60D8D1DB01939C,
                0x6DA7D9F58E3E3C,
                0x7C2540DC1E892C,
                0x8C8894D55D24A8,
                0x9F104D3ED7B750,
                0xB40293D202E1D8,
                0xCBAE1F7661DF08,
                0xE66B208DB037C8,
                0x1049C3E0CC66780,
                0x126AFA1E43C2C20,
                0x14D20122A136CE0,
                0x178761313F22590,
                0x1A9490C10540300,
                0x1E040681CCAD930,
                0x21E14A6C8AE70C0,
                0x263905019E387C0,
                0x2B190B9BD794F60,
                0x3090687920A88C0,
                0x36AF5CCBF374080,
                0x3D875AD5B1B8840,
                0x452AF5B59743E80,
                0x4DADC4494D21200,
                0x5724343CE7685C0,
                0x61A34A45BB29700,
                0x6D404C8F2648E40,
                0x7A1054AEB0C6B80,
                0x8827C71CBFA8380,
                0x9799AF473DFEB80,
                0xA87700EF2D66800,
                0xBACDC1AAD0DD780,
                0xCEA8201608EA480,
                0xE40B81544706A80,
                0xFAF790D092B4980,
                0x1136561454BA8600,
                0x12D46B08DBBFE400,
                0x14885610B9B82700,
                0x165033AF8ACD7900,
                0x1829A0565978DF00,
                0x1A11C01BF1022200,
                0x1C054CDA8768F900,
                0x1E00AA6681FCF300,
                0x2000000000000000,
                0x21FF55997E030E00,
                0x23FAB32578970600,
                0x25EE3FE40EFDDE00,
                0x27D65FA9A6872200,
                0x29AFCC5075328600,
                0x2B77A9EF4647D800,
                0x2D2B94F724401C00,
                0x2EC9A9EBAB457A00,
                0x305086F2F6D4B600,
                0x31BF47EABB8F9600,
                0x33157DFE9F715C00,
                0x345323E552F22800,
                0x35788FF10D299800,
                0x3686650B8C201600,
                0x377D838E34057C00,
                0x385EFAB514F39400,
                0x392BFB370D9B7200,
                0x39E5CB5BA44D6A00,
                0x3A8DBCBC31897A00,
                0x3B2523BB6B2DEE00,
                0x3BAD50A4A68BC200,
                0x3C278A52A4E47A00,
                0x3C950A3340C8C000,
                0x3CF6F9786DF57800,
                0x3D4E6F464286B000,
                0x3D9C6FAFE61C7800,
                0x3DE1EB5937519000,
                0x3E1FBF97E3352600,
                0x3E56B6F3EFABFC00,
                0x3E8789ECEC0DDA00,
                0x3EB2DFEDD5EC9400,
                0x3ED9505E1BC3D400,
                0x3EFB63C1F3399800,
                0x3F1994DF724FC800,
                0x3F3451E0899E2000,
                0x3F4BFD6C2DFD1E00,
                0x3F60EFB2C1284800,
                0x3F73776B2AA2DC00,
                0x3F83DABF23E17600,
                0x3F9258260A71C200,
                0x3F9F272E24FE6C00,
                0x3FAA7934B75EBE00,
                0x3FB47A0D8F6D2400,
                0x3FBD509AE7AE3E00,
                0x3FC51F569C07DC00,
                0x3FCC04CDBCDC4C00,
                0x3FD21C0F91C65800,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_2_62))
    #if (defined(TINYMIND_USE_SIGMOID_3_61))
    const uint64_t SigmoidValuesTableQ3_61::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14417772FA8010,
                0x16F1F8371CD3FA,
                0x19FD992191DA21,
                0x1D7054B1FC1256,
                0x2157B28C28E0CC,
                0x25C2F938496E2E,
                0x2AC365A450A180,
                0x306C68ED80C9CE,
                0x36D3ECFAC71F1E,
                0x3E12A06E0F4496,
                0x46444A6AAE9254,
                0x4F88269F6BDBA8,
                0x5A0149E90170EC,
                0x65D70FBB30EF84,
                0x73359046D81BE4,
                0x824E1F066333C0,
                0x9357D0F21E1610,
                0xA690091509B670,
                0xBC3B0989F912C8,
                0xD4A486082A0180,
                0xF020340E656C98,
                0x10F0A5364573860,
                0x131C8280CF1C3E0,
                0x158C85CDEBCA7B0,
                0x1848343C9054460,
                0x1B57AE65F9BA040,
                0x1EC3AD6AD8DC420,
                0x22957ADACBA1F40,
                0x26D6E224A690900,
                0x2B921A1E73B42E0,
                0x30D1A522DD94B80,
                0x36A026479324720,
                0x3D082A5758635C0,
                0x4413E38E5FD41C0,
                0x4BCCD7A39EFF5C0,
                0x543B807796B3400,
                0x5D66E0D5686EBC0,
                0x6754100B0475240,
                0x7205C0AA2383540,
                0x7D7BC868495A4C0,
                0x89B2B0A2A5D4300,
                0x96A35846DDFF200,
                0xA442B085CDC1380,
                0xB2819D7C566BC80,
                0xC14D02B2CBC6F80,
                0xD08E00DF8811100,
                0xE02A66D43B47C80,
                0xF00553340FE7980,
                0x1000000000000000,
                0x10FFAACCBF018700,
                0x11FD5992BC4B8300,
                0x12F71FF2077EEF00,
                0x13EB2FD4D3439100,
                0x14D7E6283A994300,
                0x15BBD4F7A323EC00,
                0x1695CA7B92200E00,
                0x1764D4F5D5A2BD00,
                0x182843797B6A5B00,
                0x18DFA3F55DC7CB00,
                0x198ABEFF4FB8AE00,
                0x1A2991F2A9791400,
                0x1ABC47F88694CC00,
                0x1B433285C6100B00,
                0x1BBEC1C71A02BE00,
                0x1C2F7D5A8A79CA00,
                0x1C95FD9B86CDB900,
                0x1CF2E5ADD226B500,
                0x1D46DE5E18C4BD00,
                0x1D9291DDB596F700,
                0x1DD6A8525345E100,
                0x1E13C52952723D00,
                0x1E4A8519A0646000,
                0x1E7B7CBC36FABC00,
                0x1EA737A321435800,
                0x1ECE37D7F30E3C00,
                0x1EF0F5AC9BA8C800,
                0x1F0FDFCBF19A9300,
                0x1F2B5B79F7D5FE00,
                0x1F43C4F67606ED00,
                0x1F596FF6EAF64A00,
                0x1F6CA82F0DE1EA00,
                0x1F7DB1E0F99CCC00,
                0x1F8CCA6FB927E400,
                0x1F9A28F044CF1000,
                0x1FA5FEB616FE8F00,
                0x1FB077D960942400,
                0x1FB9BBB595516E00,
                0x1FC1ED5F91F0BB00,
                0x1FC92C130538E100,
                0x1FCF9397127F3600,
                0x1FD53C9A5BAF5F00,
                0x1FDA3D06C7B69200,
                0x1FDEA84D73D71F00,
                0x1FE28FAB4E03EE00,
                0x1FE60266DE6E2600,
                0x1FE90E07C8E32C00,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_3_61))
    #if (defined(TINYMIND_USE_SIGMOID_4_60))
    const uint64_t SigmoidValuesTableQ4_60::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA20BBB97D4008,
                0xB78FC1B8E69FD,
                0xCFECC90C8ED10,
                0xEB82A58FE092B,
                0x10ABD946147066,
                0x12E17C9C24B717,
                0x1561B2D22850C0,
                0x18363476C064E7,
                0x1B69F67D638F8F,
                0x1F09503707A24B,
                0x2322253557492A,
                0x27C4134FB5EDD4,
                0x2D00A4F480B876,
                0x32EB87DD9877C2,
                0x399AC8236C0DF2,
                0x41270F833199E0,
                0x49ABE8790F0B08,
                0x5348048A84DB38,
                0x5E1D84C4FC8964,
                0x6A5243041500C0,
                0x78101A0732B64C,
                0x878529B22B9C30,
                0x98E4140678E1F0,
                0xAC642E6F5E53D8,
                0xC241A1E482A230,
                0xDABD732FCDD020,
                0xF61D6B56C6E210,
                0x114ABD6D65D0FA0,
                0x136B71125348480,
                0x15C90D0F39DA170,
                0x1868D2916ECA5C0,
                0x1B501323C992390,
                0x1E84152BAC31AE0,
                0x2209F1C72FEA0E0,
                0x25E66BD1CF7FAE0,
                0x2A1DC03BCB59A00,
                0x2EB3706AB4375E0,
                0x33AA0805823A920,
                0x3902E05511C1AA0,
                0x3EBDE43424AD260,
                0x44D9585152EA180,
                0x4B51AC236EFF900,
                0x52215842E6E09C0,
                0x5940CEBE2B35E40,
                0x60A6815965E37C0,
                0x6847006FC408880,
                0x7015336A1DA3E40,
                0x7802A99A07F3CC0,
                0x800000000000000,
                0x87FD5665F80C380,
                0x8FEACC95E25C180,
                0x97B8FF903BF7780,
                0x9F597EA69A1C880,
                0xA6BF3141D4CA180,
                0xADDEA7BD191F600,
                0xB4AE53DC9100700,
                0xBB26A7AEAD15E80,
                0xC1421BCBDB52D80,
                0xC6FD1FAAEE3E580,
                0xCC55F7FA7DC5700,
                0xD14C8F954BC8A00,
                0xD5E23FC434A6600,
                0xDA19942E3080580,
                0xDDF60E38D015F00,
                0xE17BEAD453CE500,
                0xE4AFECDC366DC80,
                0xE7972D6E9135A80,
                0xEA36F2F0C625E80,
                0xEC948EEDACB7B80,
                0xEEB542929A2F080,
                0xF09E294A9391E80,
                0xF25428CD0323000,
                0xF3DBE5E1B7D5E00,
                0xF539BD190A1AC00,
                0xF671BEBF9871E00,
                0xF787AD64DD46400,
                0xF87EFE5F8CD4980,
                0xF95ADBCFBEAFF00,
                0xFA1E27B3B037680,
                0xFACB7FB757B2500,
                0xFB6541786F0F500,
                0xFBED8F07CCE6600,
                0xFC66537DC93F200,
                0xFCD147822678800,
                0xFD2FF5B0B7F4780,
                0xFD83BECB04A1200,
                0xFDCDDDACAA8B700,
                0xFE0F6AFC8F85D80,
                0xFE49609829C7080,
                0xFE7C9CB893F9B00,
                0xFEA9E4D2DD7AF80,
                0xFED1E8363DB4900,
                0xFEF5426B9EB8F80,
                0xFF147D5A701F700,
                0xFF301336F371300,
                0xFF48703E4719600,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_4_60))
    #if (defined(TINYMIND_USE_SIGMOID_5_59))
    const uint64_t SigmoidValuesTableQ5_59::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5105DDCBEA004,
                0x5BC7E0DC734FE,
                0x67F6648647688,
                0x75C152C7F0495,
                0x855ECA30A3833,
                0x970BE4E125B8B,
                0xAB0D969142860,
                0xC1B1A3B603273,
                0xDB4FB3EB1C7C7,
                0xF84A81B83D125,
                0x1191129AABA495,
                0x13E209A7DAF6EA,
                0x1680527A405C3B,
                0x1975C3EECC3BE1,
                0x1CCD6411B606F9,
                0x209387C198CCF0,
                0x24D5F43C878584,
                0x29A40245426D9C,
                0x2F0EC2627E44B2,
                0x352921820A8060,
                0x3C080D03995B26,
                0x43C294D915CE18,
                0x4C720A033C70F8,
                0x56321737AF29EC,
                0x6120D0F2415118,
                0x6D5EB997E6E810,
                0x7B0EB5AB637108,
                0x8A55EB6B2E87D0,
                0x9B5B88929A4240,
                0xAE486879CED0B8,
                0xC346948B7652E0,
                0xDA80991E4C91C8,
                0xF420A95D618D70,
                0x1104F8E397F5070,
                0x12F335E8E7BFD70,
                0x150EE01DE5ACD00,
                0x1759B8355A1BAF0,
                0x19D50402C11D490,
                0x1C81702A88E0D50,
                0x1F5EF21A1256930,
                0x226CAC28A9750C0,
                0x25A8D611B77FC80,
                0x2910AC2173704E0,
                0x2CA0675F159AF20,
                0x305340ACB2F1BE0,
                0x34238037E204440,
                0x380A99B50ED1F20,
                0x3C0154CD03F9E60,
                0x400000000000000,
                0x43FEAB32FC061C0,
                0x47F5664AF12E0C0,
                0x4BDC7FC81DFBBC0,
                0x4FACBF534D0E440,
                0x535F98A0EA650C0,
                0x56EF53DE8C8FB00,
                0x5A5729EE4880380,
                0x5D9353D7568AF40,
                0x60A10DE5EDA96C0,
                0x637E8FD5771F2C0,
                0x662AFBFD3EE2B80,
                0x68A647CAA5E4500,
                0x6AF11FE21A53300,
                0x6D0CCA1718402C0,
                0x6EFB071C680AF80,
                0x70BDF56A29E7280,
                0x7257F66E1B36E40,
                0x73CB96B7489AD40,
                0x751B79786312F40,
                0x764A4776D65BDC0,
                0x775AA1494D17840,
                0x784F14A549C8F40,
                0x792A14668191800,
                0x79EDF2F0DBEAF00,
                0x7A9CDE8C850D600,
                0x7B38DF5FCC38F00,
                0x7BC3D6B26EA3200,
                0x7C3F7F2FC66A4C0,
                0x7CAD6DE7DF57F80,
                0x7D0F13D9D81BB40,
                0x7D65BFDBABD9280,
                0x7DB2A0BC3787A80,
                0x7DF6C783E673300,
                0x7E3329BEE49F900,
                0x7E68A3C1133C400,
                0x7E97FAD85BFA3C0,
                0x7EC1DF658250900,
                0x7EE6EED65545B80,
                0x7F07B57E47C2EC0,
                0x7F24B04C14E3840,
                0x7F3E4E5C49FCD80,
                0x7F54F2696EBD7C0,
                0x7F68F41B1EDA480,
                0x7F7AA135CF5C7C0,
                0x7F8A3EAD380FB80,
                0x7F98099B79B8980,
                0x7FA4381F238CB00,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_5_59))
    #if (defined(TINYMIND_USE_SIGMOID_6_58))
    const uint64_t SigmoidValuesTableQ6_58::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2882EEE5F5002,
                0x2DE3F06E39A7F,
                0x33FB324323B44,
                0x3AE0A963F824A,
                0x42AF651851C19,
                0x4B85F27092DC5,
                0x5586CB48A1430,
                0x60D8D1DB01939,
                0x6DA7D9F58E3E3,
                0x7C2540DC1E892,
                0x8C8894D55D24A,
                0x9F104D3ED7B75,
                0xB40293D202E1D,
                0xCBAE1F7661DF0,
                0xE66B208DB037C,
                0x1049C3E0CC6678,
                0x126AFA1E43C2C2,
                0x14D20122A136CE,
                0x178761313F2259,
                0x1A9490C1054030,
                0x1E040681CCAD93,
                0x21E14A6C8AE70C,
                0x263905019E387C,
                0x2B190B9BD794F6,
                0x3090687920A88C,
                0x36AF5CCBF37408,
                0x3D875AD5B1B884,
                0x452AF5B59743E8,
                0x4DADC4494D2120,
                0x5724343CE7685C,
                0x61A34A45BB2970,
                0x6D404C8F2648E4,
                0x7A1054AEB0C6B8,
                0x8827C71CBFA838,
                0x9799AF473DFEB8,
                0xA87700EF2D6680,
                0xBACDC1AAD0DD78,
                0xCEA8201608EA48,
                0xE40B81544706A8,
                0xFAF790D092B498,
                0x1136561454BA860,
                0x12D46B08DBBFE40,
                0x14885610B9B8270,
                0x165033AF8ACD790,
                0x1829A0565978DF0,
                0x1A11C01BF102220,
                0x1C054CDA8768F90,
                0x1E00AA6681FCF30,
                0x200000000000000,
                0x21FF55997E030E0,
                0x23FAB3257897060,
                0x25EE3FE40EFDDE0,
                0x27D65FA9A687220,
                0x29AFCC507532860,
                0x2B77A9EF4647D80,
                0x2D2B94F724401C0,
                0x2EC9A9EBAB457A0,
                0x305086F2F6D4B60,
                0x31BF47EABB8F960,
                0x33157DFE9F715C0,
                0x345323E552F2280,
                0x35788FF10D29980,
                0x3686650B8C20160,
                0x377D838E34057C0,
                0x385EFAB514F3940,
                0x392BFB370D9B720,
                0x39E5CB5BA44D6A0,
                0x3A8DBCBC31897A0,
                0x3B2523BB6B2DEE0,
                0x3BAD50A4A68BC20,
                0x3C278A52A4E47A0,
                0x3C950A3340C8C00,
                0x3CF6F9786DF5780,
                0x3D4E6F464286B00,
                0x3D9C6FAFE61C780,
                0x3DE1EB593751900,
                0x3E1FBF97E335260,
                0x3E56B6F3EFABFC0,
                0x3E8789ECEC0DDA0,
                0x3EB2DFEDD5EC940,
                0x3ED9505E1BC3D40,
                0x3EFB63C1F339980,
                0x3F1994DF724FC80,
                0x3F3451E0899E200,
                0x3F4BFD6C2DFD1E0,
                0x3F60EFB2C128480,
                0x3F73776B2AA2DC0,
                0x3F83DABF23E1760,
                0x3F9258260A71C20,
                0x3F9F272E24FE6C0,
                0x3FAA7934B75EBE0,
                0x3FB47A0D8F6D240,
                0x3FBD509AE7AE3E0,
                0x3FC51F569C07DC0,
                0x3FCC04CDBCDC4C0,
                0x3FD21C0F91C6580,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_6_58))
    #if (defined(TINYMIND_USE_SIGMOID_7_57))
    const uint64_t SigmoidValuesTableQ7_57::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14417772FA801,
                0x16F1F8371CD3F,
                0x19FD992191DA2,
                0x1D7054B1FC125,
                0x2157B28C28E0C,
                0x25C2F938496E2,
                0x2AC365A450A18,
                0x306C68ED80C9C,
                0x36D3ECFAC71F1,
                0x3E12A06E0F449,
                0x46444A6AAE925,
                0x4F88269F6BDBA,
                0x5A0149E90170E,
                0x65D70FBB30EF8,
                0x73359046D81BE,
                0x824E1F066333C,
                0x9357D0F21E161,
                0xA690091509B67,
                0xBC3B0989F912C,
                0xD4A486082A018,
                0xF020340E656C9,
                0x10F0A536457386,
                0x131C8280CF1C3E,
                0x158C85CDEBCA7B,
                0x1848343C905446,
                0x1B57AE65F9BA04,
                0x1EC3AD6AD8DC42,
                0x22957ADACBA1F4,
                0x26D6E224A69090,
                0x2B921A1E73B42E,
                0x30D1A522DD94B8,
                0x36A02647932472,
                0x3D082A5758635C,
                0x4413E38E5FD41C,
                0x4BCCD7A39EFF5C,
                0x543B807796B340,
                0x5D66E0D5686EBC,
                0x6754100B047524,
                0x7205C0AA238354,
                0x7D7BC868495A4C,
                0x89B2B0A2A5D430,
                0x96A35846DDFF20,
                0xA442B085CDC138,
                0xB2819D7C566BC8,
                0xC14D02B2CBC6F8,
                0xD08E00DF881110,
                0xE02A66D43B47C8,
                0xF00553340FE798,
                0x100000000000000,
                0x10FFAACCBF01870,
                0x11FD5992BC4B830,
                0x12F71FF2077EEF0,
                0x13EB2FD4D343910,
                0x14D7E6283A99430,
                0x15BBD4F7A323EC0,
                0x1695CA7B92200E0,
                0x1764D4F5D5A2BD0,
                0x182843797B6A5B0,
                0x18DFA3F55DC7CB0,
                0x198ABEFF4FB8AE0,
                0x1A2991F2A979140,
                0x1ABC47F88694CC0,
                0x1B433285C6100B0,
                0x1BBEC1C71A02BE0,
                0x1C2F7D5A8A79CA0,
                0x1C95FD9B86CDB90,
                0x1CF2E5ADD226B50,
                0x1D46DE5E18C4BD0,
                0x1D9291DDB596F70,
                0x1DD6A8525345E10,
                0x1E13C52952723D0,
                0x1E4A8519A064600,
                0x1E7B7CBC36FABC0,
                0x1EA737A32143580,
                0x1ECE37D7F30E3C0,
                0x1EF0F5AC9BA8C80,
                0x1F0FDFCBF19A930,
                0x1F2B5B79F7D5FE0,
                0x1F43C4F67606ED0,
                0x1F596FF6EAF64A0,
                0x1F6CA82F0DE1EA0,
                0x1F7DB1E0F99CCC0,
                0x1F8CCA6FB927E40,
                0x1F9A28F044CF100,
                0x1FA5FEB616FE8F0,
                0x1FB077D96094240,
                0x1FB9BBB595516E0,
                0x1FC1ED5F91F0BB0,
                0x1FC92C130538E10,
                0x1FCF9397127F360,
                0x1FD53C9A5BAF5F0,
                0x1FDA3D06C7B6920,
                0x1FDEA84D73D71F0,
                0x1FE28FAB4E03EE0,
                0x1FE60266DE6E260,
                0x1FE90E07C8E32C0,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_7_57))
    #if (defined(TINYMIND_USE_SIGMOID_8_56))
    const uint64_t SigmoidValuesTableQ8_56::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA20BBB97D400,
                0xB78FC1B8E69F,
                0xCFECC90C8ED1,
                0xEB82A58FE092,
                0x10ABD94614706,
                0x12E17C9C24B71,
                0x1561B2D22850C,
                0x18363476C064E,
                0x1B69F67D638F8,
                0x1F09503707A24,
                0x2322253557492,
                0x27C4134FB5EDD,
                0x2D00A4F480B87,
                0x32EB87DD9877C,
                0x399AC8236C0DF,
                0x41270F833199E,
                0x49ABE8790F0B0,
                0x5348048A84DB3,
                0x5E1D84C4FC896,
                0x6A5243041500C,
                0x78101A0732B64,
                0x878529B22B9C3,
                0x98E4140678E1F,
                0xAC642E6F5E53D,
                0xC241A1E482A23,
                0xDABD732FCDD02,
                0xF61D6B56C6E21,
                0x114ABD6D65D0FA,
                0x136B7112534848,
                0x15C90D0F39DA17,
                0x1868D2916ECA5C,
                0x1B501323C99239,
                0x1E84152BAC31AE,
                0x2209F1C72FEA0E,
                0x25E66BD1CF7FAE,
                0x2A1DC03BCB59A0,
                0x2EB3706AB4375E,
                0x33AA0805823A92,
                0x3902E05511C1AA,
                0x3EBDE43424AD26,
                0x44D9585152EA18,
                0x4B51AC236EFF90,
                0x52215842E6E09C,
                0x5940CEBE2B35E4,
                0x60A6815965E37C,
                0x6847006FC40888,
                0x7015336A1DA3E4,
                0x7802A99A07F3CC,
                0x80000000000000,
                0x87FD5665F80C38,
                0x8FEACC95E25C18,
                0x97B8FF903BF778,
                0x9F597EA69A1C88,
                0xA6BF3141D4CA18,
                0xADDEA7BD191F60,
                0xB4AE53DC910070,
                0xBB26A7AEAD15E8,
                0xC1421BCBDB52D8,
                0xC6FD1FAAEE3E58,
                0xCC55F7FA7DC570,
                0xD14C8F954BC8A0,
                0xD5E23FC434A660,
                0xDA19942E308058,
                0xDDF60E38D015F0,
                0xE17BEAD453CE50,
                0xE4AFECDC366DC8,
                0xE7972D6E9135A8,
                0xEA36F2F0C625E8,
                0xEC948EEDACB7B8,
                0xEEB542929A2F08,
                0xF09E294A9391E8,
                0xF25428CD032300,
                0xF3DBE5E1B7D5E0,
                0xF539BD190A1AC0,
                0xF671BEBF9871E0,
                0xF787AD64DD4640,
                0xF87EFE5F8CD498,
                0xF95ADBCFBEAFF0,
                0xFA1E27B3B03768,
                0xFACB7FB757B250,
                0xFB6541786F0F50,
                0xFBED8F07CCE660,
                0xFC66537DC93F20,
                0xFCD14782267880,
                0xFD2FF5B0B7F478,
                0xFD83BECB04A120,
                0xFDCDDDACAA8B70,
                0xFE0F6AFC8F85D8,
                0xFE49609829C708,
                0xFE7C9CB893F9B0,
                0xFEA9E4D2DD7AF8,
                0xFED1E8363DB490,
                0xFEF5426B9EB8F8,
                0xFF147D5A701F70,
                0xFF301336F37130,
                0xFF48703E471960,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_8_56))
    #if (defined(TINYMIND_USE_SIGMOID_9_55))
    const uint64_t SigmoidValuesTableQ9_55::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5105DDCBEA00,
                0x5BC7E0DC734F,
                0x67F664864768,
                0x75C152C7F049,
                0x855ECA30A383,
                0x970BE4E125B8,
                0xAB0D96914286,
                0xC1B1A3B60327,
                0xDB4FB3EB1C7C,
                0xF84A81B83D12,
                0x1191129AABA49,
                0x13E209A7DAF6E,
                0x1680527A405C3,
                0x1975C3EECC3BE,
                0x1CCD6411B606F,
                0x209387C198CCF,
                0x24D5F43C87858,
                0x29A40245426D9,
                0x2F0EC2627E44B,
                0x352921820A806,
                0x3C080D03995B2,
                0x43C294D915CE1,
                0x4C720A033C70F,
                0x56321737AF29E,
                0x6120D0F241511,
                0x6D5EB997E6E81,
                0x7B0EB5AB63710,
                0x8A55EB6B2E87D,
                0x9B5B88929A424,
                0xAE486879CED0B,
                0xC346948B7652E,
                0xDA80991E4C91C,
                0xF420A95D618D7,
                0x1104F8E397F507,
                0x12F335E8E7BFD7,
                0x150EE01DE5ACD0,
                0x1759B8355A1BAF,
                0x19D50402C11D49,
                0x1C81702A88E0D5,
                0x1F5EF21A125693,
                0x226CAC28A9750C,
                0x25A8D611B77FC8,
                0x2910AC2173704E,
                0x2CA0675F159AF2,
                0x305340ACB2F1BE,
                0x34238037E20444,
                0x380A99B50ED1F2,
                0x3C0154CD03F9E6,
                0x40000000000000,
                0x43FEAB32FC061C,
                0x47F5664AF12E0C,
                0x4BDC7FC81DFBBC,
                0x4FACBF534D0E44,
                0x535F98A0EA650C,
                0x56EF53DE8C8FB0,
                0x5A5729EE488038,
                0x5D9353D7568AF4,
                0x60A10DE5EDA96C,
                0x637E8FD5771F2C,
                0x662AFBFD3EE2B8,
                0x68A647CAA5E450,
                0x6AF11FE21A5330,
                0x6D0CCA1718402C,
                0x6EFB071C680AF8,
                0x70BDF56A29E728,
                0x7257F66E1B36E4,
                0x73CB96B7489AD4,
                0x751B79786312F4,
                0x764A4776D65BDC,
                0x775AA1494D1784,
                0x784F14A549C8F4,
                0x792A1466819180,
                0x79EDF2F0DBEAF0,
                0x7A9CDE8C850D60,
                0x7B38DF5FCC38F0,
                0x7BC3D6B26EA320,
                0x7C3F7F2FC66A4C,
                0x7CAD6DE7DF57F8,
                0x7D0F13D9D81BB4,
                0x7D65BFDBABD928,
                0x7DB2A0BC3787A8,
                0x7DF6C783E67330,
                0x7E3329BEE49F90,
                0x7E68A3C1133C40,
                0x7E97FAD85BFA3C,
                0x7EC1DF65825090,
                0x7EE6EED65545B8,
                0x7F07B57E47C2EC,
                0x7F24B04C14E384,
                0x7F3E4E5C49FCD8,
                0x7F54F2696EBD7C,
                0x7F68F41B1EDA48,
                0x7F7AA135CF5C7C,
                0x7F8A3EAD380FB8,
                0x7F98099B79B898,
                0x7FA4381F238CB0,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_9_55))
    #if (defined(TINYMIND_USE_SIGMOID_10_54))
    const uint64_t SigmoidValuesTableQ10_54::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2882EEE5F500,
                0x2DE3F06E39A7,
                0x33FB324323B4,
                0x3AE0A963F824,
                0x42AF651851C1,
                0x4B85F27092DC,
                0x5586CB48A143,
                0x60D8D1DB0193,
                0x6DA7D9F58E3E,
                0x7C2540DC1E89,
                0x8C8894D55D24,
                0x9F104D3ED7B7,
                0xB40293D202E1,
                0xCBAE1F7661DF,
                0xE66B208DB037,
                0x1049C3E0CC667,
                0x126AFA1E43C2C,
                0x14D20122A136C,
                0x178761313F225,
                0x1A9490C105403,
                0x1E040681CCAD9,
                0x21E14A6C8AE70,
                0x263905019E387,
                0x2B190B9BD794F,
                0x3090687920A88,
                0x36AF5CCBF3740,
                0x3D875AD5B1B88,
                0x452AF5B59743E,
                0x4DADC4494D212,
                0x5724343CE7685,
                0x61A34A45BB297,
                0x6D404C8F2648E,
                0x7A1054AEB0C6B,
                0x8827C71CBFA83,
                0x9799AF473DFEB,
                0xA87700EF2D668,
                0xBACDC1AAD0DD7,
                0xCEA8201608EA4,
                0xE40B81544706A,
                0xFAF790D092B49,
                0x1136561454BA86,
                0x12D46B08DBBFE4,
                0x14885610B9B827,
                0x165033AF8ACD79,
                0x1829A0565978DF,
                0x1A11C01BF10222,
                0x1C054CDA8768F9,
                0x1E00AA6681FCF3,
                0x20000000000000,
                0x21FF55997E030E,
                0x23FAB325789706,
                0x25EE3FE40EFDDE,
                0x27D65FA9A68722,
                0x29AFCC50753286,
                0x2B77A9EF4647D8,
                0x2D2B94F724401C,
                0x2EC9A9EBAB457A,
                0x305086F2F6D4B6,
                0x31BF47EABB8F96,
                0x33157DFE9F715C,
                0x345323E552F228,
                0x35788FF10D2998,
                0x3686650B8C2016,
                0x377D838E34057C,
                0x385EFAB514F394,
                0x392BFB370D9B72,
                0x39E5CB5BA44D6A,
                0x3A8DBCBC31897A,
                0x3B2523BB6B2DEE,
                0x3BAD50A4A68BC2,
                0x3C278A52A4E47A,
                0x3C950A3340C8C0,
                0x3CF6F9786DF578,
                0x3D4E6F464286B0,
                0x3D9C6FAFE61C78,
                0x3DE1EB59375190,
                0x3E1FBF97E33526,
                0x3E56B6F3EFABFC,
                0x3E8789ECEC0DDA,
                0x3EB2DFEDD5EC94,
                0x3ED9505E1BC3D4,
                0x3EFB63C1F33998,
                0x3F1994DF724FC8,
                0x3F3451E0899E20,
                0x3F4BFD6C2DFD1E,
                0x3F60EFB2C12848,
                0x3F73776B2AA2DC,
                0x3F83DABF23E176,
                0x3F9258260A71C2,
                0x3F9F272E24FE6C,
                0x3FAA7934B75EBE,
                0x3FB47A0D8F6D24,
                0x3FBD509AE7AE3E,
                0x3FC51F569C07DC,
                0x3FCC04CDBCDC4C,
                0x3FD21C0F91C658,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_10_54))
    #if (defined(TINYMIND_USE_SIGMOID_11_53))
    const uint64_t SigmoidValuesTableQ11_53::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14417772FA80,
                0x16F1F8371CD3,
                0x19FD992191DA,
                0x1D7054B1FC12,
                0x2157B28C28E0,
                0x25C2F938496E,
                0x2AC365A450A1,
                0x306C68ED80C9,
                0x36D3ECFAC71F,
                0x3E12A06E0F44,
                0x46444A6AAE92,
                0x4F88269F6BDB,
                0x5A0149E90170,
                0x65D70FBB30EF,
                0x73359046D81B,
                0x824E1F066333,
                0x9357D0F21E16,
                0xA690091509B6,
                0xBC3B0989F912,
                0xD4A486082A01,
                0xF020340E656C,
                0x10F0A53645738,
                0x131C8280CF1C3,
                0x158C85CDEBCA7,
                0x1848343C90544,
                0x1B57AE65F9BA0,
                0x1EC3AD6AD8DC4,
                0x22957ADACBA1F,
                0x26D6E224A6909,
                0x2B921A1E73B42,
                0x30D1A522DD94B,
                0x36A0264793247,
                0x3D082A5758635,
                0x4413E38E5FD41,
                0x4BCCD7A39EFF5,
                0x543B807796B34,
                0x5D66E0D5686EB,
                0x6754100B04752,
                0x7205C0AA23835,
                0x7D7BC868495A4,
                0x89B2B0A2A5D43,
                0x96A35846DDFF2,
                0xA442B085CDC13,
                0xB2819D7C566BC,
                0xC14D02B2CBC6F,
                0xD08E00DF88111,
                0xE02A66D43B47C,
                0xF00553340FE79,
                0x10000000000000,
                0x10FFAACCBF0187,
                0x11FD5992BC4B83,
                0x12F71FF2077EEF,
                0x13EB2FD4D34391,
                0x14D7E6283A9943,
                0x15BBD4F7A323EC,
                0x1695CA7B92200E,
                0x1764D4F5D5A2BD,
                0x182843797B6A5B,
                0x18DFA3F55DC7CB,
                0x198ABEFF4FB8AE,
                0x1A2991F2A97914,
                0x1ABC47F88694CC,
                0x1B433285C6100B,
                0x1BBEC1C71A02BE,
                0x1C2F7D5A8A79CA,
                0x1C95FD9B86CDB9,
                0x1CF2E5ADD226B5,
                0x1D46DE5E18C4BD,
                0x1D9291DDB596F7,
                0x1DD6A8525345E1,
                0x1E13C52952723D,
                0x1E4A8519A06460,
                0x1E7B7CBC36FABC,
                0x1EA737A3214358,
                0x1ECE37D7F30E3C,
                0x1EF0F5AC9BA8C8,
                0x1F0FDFCBF19A93,
                0x1F2B5B79F7D5FE,
                0x1F43C4F67606ED,
                0x1F596FF6EAF64A,
                0x1F6CA82F0DE1EA,
                0x1F7DB1E0F99CCC,
                0x1F8CCA6FB927E4,
                0x1F9A28F044CF10,
                0x1FA5FEB616FE8F,
                0x1FB077D9609424,
                0x1FB9BBB595516E,
                0x1FC1ED5F91F0BB,
                0x1FC92C130538E1,
                0x1FCF9397127F36,
                0x1FD53C9A5BAF5F,
                0x1FDA3D06C7B692,
                0x1FDEA84D73D71F,
                0x1FE28FAB4E03EE,
                0x1FE60266DE6E26,
                0x1FE90E07C8E32C,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_11_53))
    #if (defined(TINYMIND_USE_SIGMOID_12_52))
    const uint64_t SigmoidValuesTableQ12_52::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA20BBB97D40,
                0xB78FC1B8E69,
                0xCFECC90C8ED,
                0xEB82A58FE09,
                0x10ABD9461470,
                0x12E17C9C24B7,
                0x1561B2D22850,
                0x18363476C064,
                0x1B69F67D638F,
                0x1F09503707A2,
                0x232225355749,
                0x27C4134FB5ED,
                0x2D00A4F480B8,
                0x32EB87DD9877,
                0x399AC8236C0D,
                0x41270F833199,
                0x49ABE8790F0B,
                0x5348048A84DB,
                0x5E1D84C4FC89,
                0x6A5243041500,
                0x78101A0732B6,
                0x878529B22B9C,
                0x98E4140678E1,
                0xAC642E6F5E53,
                0xC241A1E482A2,
                0xDABD732FCDD0,
                0xF61D6B56C6E2,
                0x114ABD6D65D0F,
                0x136B711253484,
                0x15C90D0F39DA1,
                0x1868D2916ECA5,
                0x1B501323C9923,
                0x1E84152BAC31A,
                0x2209F1C72FEA0,
                0x25E66BD1CF7FA,
                0x2A1DC03BCB59A,
                0x2EB3706AB4375,
                0x33AA0805823A9,
                0x3902E05511C1A,
                0x3EBDE43424AD2,
                0x44D9585152EA1,
                0x4B51AC236EFF9,
                0x52215842E6E09,
                0x5940CEBE2B35E,
                0x60A6815965E37,
                0x6847006FC4088,
                0x7015336A1DA3E,
                0x7802A99A07F3C,
                0x8000000000000,
                0x87FD5665F80C3,
                0x8FEACC95E25C1,
                0x97B8FF903BF77,
                0x9F597EA69A1C8,
                0xA6BF3141D4CA1,
                0xADDEA7BD191F6,
                0xB4AE53DC91007,
                0xBB26A7AEAD15E,
                0xC1421BCBDB52D,
                0xC6FD1FAAEE3E5,
                0xCC55F7FA7DC57,
                0xD14C8F954BC8A,
                0xD5E23FC434A66,
                0xDA19942E30805,
                0xDDF60E38D015F,
                0xE17BEAD453CE5,
                0xE4AFECDC366DC,
                0xE7972D6E9135A,
                0xEA36F2F0C625E,
                0xEC948EEDACB7B,
                0xEEB542929A2F0,
                0xF09E294A9391E,
                0xF25428CD03230,
                0xF3DBE5E1B7D5E,
                0xF539BD190A1AC,
                0xF671BEBF9871E,
                0xF787AD64DD464,
                0xF87EFE5F8CD49,
                0xF95ADBCFBEAFF,
                0xFA1E27B3B0376,
                0xFACB7FB757B25,
                0xFB6541786F0F5,
                0xFBED8F07CCE66,
                0xFC66537DC93F2,
                0xFCD1478226788,
                0xFD2FF5B0B7F47,
                0xFD83BECB04A12,
                0xFDCDDDACAA8B7,
                0xFE0F6AFC8F85D,
                0xFE49609829C70,
                0xFE7C9CB893F9B,
                0xFEA9E4D2DD7AF,
                0xFED1E8363DB49,
                0xFEF5426B9EB8F,
                0xFF147D5A701F7,
                0xFF301336F3713,
                0xFF48703E47196,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_12_52))
    #if (defined(TINYMIND_USE_SIGMOID_13_51))
    const uint64_t SigmoidValuesTableQ13_51::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5105DDCBEA0,
                0x5BC7E0DC734,
                0x67F66486476,
                0x75C152C7F04,
                0x855ECA30A38,
                0x970BE4E125B,
                0xAB0D9691428,
                0xC1B1A3B6032,
                0xDB4FB3EB1C7,
                0xF84A81B83D1,
                0x1191129AABA4,
                0x13E209A7DAF6,
                0x1680527A405C,
                0x1975C3EECC3B,
                0x1CCD6411B606,
                0x209387C198CC,
                0x24D5F43C8785,
                0x29A40245426D,
                0x2F0EC2627E44,
                0x352921820A80,
                0x3C080D03995B,
                0x43C294D915CE,
                0x4C720A033C70,
                0x56321737AF29,
                0x6120D0F24151,
                0x6D5EB997E6E8,
                0x7B0EB5AB6371,
                0x8A55EB6B2E87,
                0x9B5B88929A42,
                0xAE486879CED0,
                0xC346948B7652,
                0xDA80991E4C91,
                0xF420A95D618D,
                0x1104F8E397F50,
                0x12F335E8E7BFD,
                0x150EE01DE5ACD,
                0x1759B8355A1BA,
                0x19D50402C11D4,
                0x1C81702A88E0D,
                0x1F5EF21A12569,
                0x226CAC28A9750,
                0x25A8D611B77FC,
                0x2910AC2173704,
                0x2CA0675F159AF,
                0x305340ACB2F1B,
                0x34238037E2044,
                0x380A99B50ED1F,
                0x3C0154CD03F9E,
                0x4000000000000,
                0x43FEAB32FC061,
                0x47F5664AF12E0,
                0x4BDC7FC81DFBB,
                0x4FACBF534D0E4,
                0x535F98A0EA650,
                0x56EF53DE8C8FB,
                0x5A5729EE48803,
                0x5D9353D7568AF,
                0x60A10DE5EDA96,
                0x637E8FD5771F2,
                0x662AFBFD3EE2B,
                0x68A647CAA5E45,
                0x6AF11FE21A533,
                0x6D0CCA1718402,
                0x6EFB071C680AF,
                0x70BDF56A29E72,
                0x7257F66E1B36E,
                0x73CB96B7489AD,
                0x751B79786312F,
                0x764A4776D65BD,
                0x775AA1494D178,
                0x784F14A549C8F,
                0x792A146681918,
                0x79EDF2F0DBEAF,
                0x7A9CDE8C850D6,
                0x7B38DF5FCC38F,
                0x7BC3D6B26EA32,
                0x7C3F7F2FC66A4,
                0x7CAD6DE7DF57F,
                0x7D0F13D9D81BB,
                0x7D65BFDBABD92,
                0x7DB2A0BC3787A,
                0x7DF6C783E6733,
                0x7E3329BEE49F9,
                0x7E68A3C1133C4,
                0x7E97FAD85BFA3,
                0x7EC1DF6582509,
                0x7EE6EED65545B,
                0x7F07B57E47C2E,
                0x7F24B04C14E38,
                0x7F3E4E5C49FCD,
                0x7F54F2696EBD7,
                0x7F68F41B1EDA4,
                0x7F7AA135CF5C7,
                0x7F8A3EAD380FB,
                0x7F98099B79B89,
                0x7FA4381F238CB,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_13_51))
    #if (defined(TINYMIND_USE_SIGMOID_14_50))
    const uint64_t SigmoidValuesTableQ14_50::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2882EEE5F50,
                0x2DE3F06E39A,
                0x33FB324323B,
                0x3AE0A963F82,
                0x42AF651851C,
                0x4B85F27092D,
                0x5586CB48A14,
                0x60D8D1DB019,
                0x6DA7D9F58E3,
                0x7C2540DC1E8,
                0x8C8894D55D2,
                0x9F104D3ED7B,
                0xB40293D202E,
                0xCBAE1F7661D,
                0xE66B208DB03,
                0x1049C3E0CC66,
                0x126AFA1E43C2,
                0x14D20122A136,
                0x178761313F22,
                0x1A9490C10540,
                0x1E040681CCAD,
                0x21E14A6C8AE7,
                0x263905019E38,
                0x2B190B9BD794,
                0x3090687920A8,
                0x36AF5CCBF374,
                0x3D875AD5B1B8,
                0x452AF5B59743,
                0x4DADC4494D21,
                0x5724343CE768,
                0x61A34A45BB29,
                0x6D404C8F2648,
                0x7A1054AEB0C6,
                0x8827C71CBFA8,
                0x9799AF473DFE,
                0xA87700EF2D66,
                0xBACDC1AAD0DD,
                0xCEA8201608EA,
                0xE40B81544706,
                0xFAF790D092B4,
                0x1136561454BA8,
                0x12D46B08DBBFE,
                0x14885610B9B82,
                0x165033AF8ACD7,
                0x1829A0565978D,
                0x1A11C01BF1022,
                0x1C054CDA8768F,
                0x1E00AA6681FCF,
                0x2000000000000,
                0x21FF55997E030,
                0x23FAB32578970,
                0x25EE3FE40EFDD,
                0x27D65FA9A6872,
                0x29AFCC5075328,
                0x2B77A9EF4647D,
                0x2D2B94F724401,
                0x2EC9A9EBAB457,
                0x305086F2F6D4B,
                0x31BF47EABB8F9,
                0x33157DFE9F715,
                0x345323E552F22,
                0x35788FF10D299,
                0x3686650B8C201,
                0x377D838E34057,
                0x385EFAB514F39,
                0x392BFB370D9B7,
                0x39E5CB5BA44D6,
                0x3A8DBCBC31897,
                0x3B2523BB6B2DE,
                0x3BAD50A4A68BC,
                0x3C278A52A4E47,
                0x3C950A3340C8C,
                0x3CF6F9786DF57,
                0x3D4E6F464286B,
                0x3D9C6FAFE61C7,
                0x3DE1EB5937519,
                0x3E1FBF97E3352,
                0x3E56B6F3EFABF,
                0x3E8789ECEC0DD,
                0x3EB2DFEDD5EC9,
                0x3ED9505E1BC3D,
                0x3EFB63C1F3399,
                0x3F1994DF724FC,
                0x3F3451E0899E2,
                0x3F4BFD6C2DFD1,
                0x3F60EFB2C1284,
                0x3F73776B2AA2D,
                0x3F83DABF23E17,
                0x3F9258260A71C,
                0x3F9F272E24FE6,
                0x3FAA7934B75EB,
                0x3FB47A0D8F6D2,
                0x3FBD509AE7AE3,
                0x3FC51F569C07D,
                0x3FCC04CDBCDC4,
                0x3FD21C0F91C65,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_14_50))
    #if (defined(TINYMIND_USE_SIGMOID_15_49))
    const uint64_t SigmoidValuesTableQ15_49::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14417772FA8,
                0x16F1F8371CD,
                0x19FD992191D,
                0x1D7054B1FC1,
                0x2157B28C28E,
                0x25C2F938496,
                0x2AC365A450A,
                0x306C68ED80C,
                0x36D3ECFAC71,
                0x3E12A06E0F4,
                0x46444A6AAE9,
                0x4F88269F6BD,
                0x5A0149E9017,
                0x65D70FBB30E,
                0x73359046D81,
                0x824E1F06633,
                0x9357D0F21E1,
                0xA690091509B,
                0xBC3B0989F91,
                0xD4A486082A0,
                0xF020340E656,
                0x10F0A5364573,
                0x131C8280CF1C,
                0x158C85CDEBCA,
                0x1848343C9054,
                0x1B57AE65F9BA,
                0x1EC3AD6AD8DC,
                0x22957ADACBA1,
                0x26D6E224A690,
                0x2B921A1E73B4,
                0x30D1A522DD94,
                0x36A026479324,
                0x3D082A575863,
                0x4413E38E5FD4,
                0x4BCCD7A39EFF,
                0x543B807796B3,
                0x5D66E0D5686E,
                0x6754100B0475,
                0x7205C0AA2383,
                0x7D7BC868495A,
                0x89B2B0A2A5D4,
                0x96A35846DDFF,
                0xA442B085CDC1,
                0xB2819D7C566B,
                0xC14D02B2CBC6,
                0xD08E00DF8811,
                0xE02A66D43B47,
                0xF00553340FE7,
                0x1000000000000,
                0x10FFAACCBF018,
                0x11FD5992BC4B8,
                0x12F71FF2077EE,
                0x13EB2FD4D3439,
                0x14D7E6283A994,
                0x15BBD4F7A323E,
                0x1695CA7B92200,
                0x1764D4F5D5A2B,
                0x182843797B6A5,
                0x18DFA3F55DC7C,
                0x198ABEFF4FB8A,
                0x1A2991F2A9791,
                0x1ABC47F88694C,
                0x1B433285C6100,
                0x1BBEC1C71A02B,
                0x1C2F7D5A8A79C,
                0x1C95FD9B86CDB,
                0x1CF2E5ADD226B,
                0x1D46DE5E18C4B,
                0x1D9291DDB596F,
                0x1DD6A8525345E,
                0x1E13C52952723,
                0x1E4A8519A0646,
                0x1E7B7CBC36FAB,
                0x1EA737A321435,
                0x1ECE37D7F30E3,
                0x1EF0F5AC9BA8C,
                0x1F0FDFCBF19A9,
                0x1F2B5B79F7D5F,
                0x1F43C4F67606E,
                0x1F596FF6EAF64,
                0x1F6CA82F0DE1E,
                0x1F7DB1E0F99CC,
                0x1F8CCA6FB927E,
                0x1F9A28F044CF1,
                0x1FA5FEB616FE8,
                0x1FB077D960942,
                0x1FB9BBB595516,
                0x1FC1ED5F91F0B,
                0x1FC92C130538E,
                0x1FCF9397127F3,
                0x1FD53C9A5BAF5,
                0x1FDA3D06C7B69,
                0x1FDEA84D73D71,
                0x1FE28FAB4E03E,
                0x1FE60266DE6E2,
                0x1FE90E07C8E32,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_15_49))
    #if (defined(TINYMIND_USE_SIGMOID_16_48))
    const uint64_t SigmoidValuesTableQ16_48::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA20BBB97D4,
                0xB78FC1B8E6,
                0xCFECC90C8E,
                0xEB82A58FE0,
                0x10ABD946147,
                0x12E17C9C24B,
                0x1561B2D2285,
                0x18363476C06,
                0x1B69F67D638,
                0x1F09503707A,
                0x23222535574,
                0x27C4134FB5E,
                0x2D00A4F480B,
                0x32EB87DD987,
                0x399AC8236C0,
                0x41270F83319,
                0x49ABE8790F0,
                0x5348048A84D,
                0x5E1D84C4FC8,
                0x6A524304150,
                0x78101A0732B,
                0x878529B22B9,
                0x98E4140678E,
                0xAC642E6F5E5,
                0xC241A1E482A,
                0xDABD732FCDD,
                0xF61D6B56C6E,
                0x114ABD6D65D0,
                0x136B71125348,
                0x15C90D0F39DA,
                0x1868D2916ECA,
                0x1B501323C992,
                0x1E84152BAC31,
                0x2209F1C72FEA,
                0x25E66BD1CF7F,
                0x2A1DC03BCB59,
                0x2EB3706AB437,
                0x33AA0805823A,
                0x3902E05511C1,
                0x3EBDE43424AD,
                0x44D9585152EA,
                0x4B51AC236EFF,
                0x52215842E6E0,
                0x5940CEBE2B35,
                0x60A6815965E3,
                0x6847006FC408,
                0x7015336A1DA3,
                0x7802A99A07F3,
                0x800000000000,
                0x87FD5665F80C,
                0x8FEACC95E25C,
                0x97B8FF903BF7,
                0x9F597EA69A1C,
                0xA6BF3141D4CA,
                0xADDEA7BD191F,
                0xB4AE53DC9100,
                0xBB26A7AEAD15,
                0xC1421BCBDB52,
                0xC6FD1FAAEE3E,
                0xCC55F7FA7DC5,
                0xD14C8F954BC8,
                0xD5E23FC434A6,
                0xDA19942E3080,
                0xDDF60E38D015,
                0xE17BEAD453CE,
                0xE4AFECDC366D,
                0xE7972D6E9135,
                0xEA36F2F0C625,
                0xEC948EEDACB7,
                0xEEB542929A2F,
                0xF09E294A9391,
                0xF25428CD0323,
                0xF3DBE5E1B7D5,
                0xF539BD190A1A,
                0xF671BEBF9871,
                0xF787AD64DD46,
                0xF87EFE5F8CD4,
                0xF95ADBCFBEAF,
                0xFA1E27B3B037,
                0xFACB7FB757B2,
                0xFB6541786F0F,
                0xFBED8F07CCE6,
                0xFC66537DC93F,
                0xFCD147822678,
                0xFD2FF5B0B7F4,
                0xFD83BECB04A1,
                0xFDCDDDACAA8B,
                0xFE0F6AFC8F85,
                0xFE49609829C7,
                0xFE7C9CB893F9,
                0xFEA9E4D2DD7A,
                0xFED1E8363DB4,
                0xFEF5426B9EB8,
                0xFF147D5A701F,
                0xFF301336F371,
                0xFF48703E4719,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_16_48))
    #if (defined(TINYMIND_USE_SIGMOID_17_47))
    const uint64_t SigmoidValuesTableQ17_47::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5105DDCBEA,
                0x5BC7E0DC73,
                0x67F6648647,
                0x75C152C7F0,
                0x855ECA30A3,
                0x970BE4E125,
                0xAB0D969142,
                0xC1B1A3B603,
                0xDB4FB3EB1C,
                0xF84A81B83D,
                0x1191129AABA,
                0x13E209A7DAF,
                0x1680527A405,
                0x1975C3EECC3,
                0x1CCD6411B60,
                0x209387C198C,
                0x24D5F43C878,
                0x29A40245426,
                0x2F0EC2627E4,
                0x352921820A8,
                0x3C080D03995,
                0x43C294D915C,
                0x4C720A033C7,
                0x56321737AF2,
                0x6120D0F2415,
                0x6D5EB997E6E,
                0x7B0EB5AB637,
                0x8A55EB6B2E8,
                0x9B5B88929A4,
                0xAE486879CED,
                0xC346948B765,
                0xDA80991E4C9,
                0xF420A95D618,
                0x1104F8E397F5,
                0x12F335E8E7BF,
                0x150EE01DE5AC,
                0x1759B8355A1B,
                0x19D50402C11D,
                0x1C81702A88E0,
                0x1F5EF21A1256,
                0x226CAC28A975,
                0x25A8D611B77F,
                0x2910AC217370,
                0x2CA0675F159A,
                0x305340ACB2F1,
                0x34238037E204,
                0x380A99B50ED1,
                0x3C0154CD03F9,
                0x400000000000,
                0x43FEAB32FC06,
                0x47F5664AF12E,
                0x4BDC7FC81DFB,
                0x4FACBF534D0E,
                0x535F98A0EA65,
                0x56EF53DE8C8F,
                0x5A5729EE4880,
                0x5D9353D7568A,
                0x60A10DE5EDA9,
                0x637E8FD5771F,
                0x662AFBFD3EE2,
                0x68A647CAA5E4,
                0x6AF11FE21A53,
                0x6D0CCA171840,
                0x6EFB071C680A,
                0x70BDF56A29E7,
                0x7257F66E1B36,
                0x73CB96B7489A,
                0x751B79786312,
                0x764A4776D65B,
                0x775AA1494D17,
                0x784F14A549C8,
                0x792A14668191,
                0x79EDF2F0DBEA,
                0x7A9CDE8C850D,
                0x7B38DF5FCC38,
                0x7BC3D6B26EA3,
                0x7C3F7F2FC66A,
                0x7CAD6DE7DF57,
                0x7D0F13D9D81B,
                0x7D65BFDBABD9,
                0x7DB2A0BC3787,
                0x7DF6C783E673,
                0x7E3329BEE49F,
                0x7E68A3C1133C,
                0x7E97FAD85BFA,
                0x7EC1DF658250,
                0x7EE6EED65545,
                0x7F07B57E47C2,
                0x7F24B04C14E3,
                0x7F3E4E5C49FC,
                0x7F54F2696EBD,
                0x7F68F41B1EDA,
                0x7F7AA135CF5C,
                0x7F8A3EAD380F,
                0x7F98099B79B8,
                0x7FA4381F238C,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_17_47))
    #if (defined(TINYMIND_USE_SIGMOID_18_46))
    const uint64_t SigmoidValuesTableQ18_46::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2882EEE5F5,
                0x2DE3F06E39,
                0x33FB324323,
                0x3AE0A963F8,
                0x42AF651851,
                0x4B85F27092,
                0x5586CB48A1,
                0x60D8D1DB01,
                0x6DA7D9F58E,
                0x7C2540DC1E,
                0x8C8894D55D,
                0x9F104D3ED7,
                0xB40293D202,
                0xCBAE1F7661,
                0xE66B208DB0,
                0x1049C3E0CC6,
                0x126AFA1E43C,
                0x14D20122A13,
                0x178761313F2,
                0x1A9490C1054,
                0x1E040681CCA,
                0x21E14A6C8AE,
                0x263905019E3,
                0x2B190B9BD79,
                0x3090687920A,
                0x36AF5CCBF37,
                0x3D875AD5B1B,
                0x452AF5B5974,
                0x4DADC4494D2,
                0x5724343CE76,
                0x61A34A45BB2,
                0x6D404C8F264,
                0x7A1054AEB0C,
                0x8827C71CBFA,
                0x9799AF473DF,
                0xA87700EF2D6,
                0xBACDC1AAD0D,
                0xCEA8201608E,
                0xE40B8154470,
                0xFAF790D092B,
                0x1136561454BA,
                0x12D46B08DBBF,
                0x14885610B9B8,
                0x165033AF8ACD,
                0x1829A0565978,
                0x1A11C01BF102,
                0x1C054CDA8768,
                0x1E00AA6681FC,
                0x200000000000,
                0x21FF55997E03,
                0x23FAB3257897,
                0x25EE3FE40EFD,
                0x27D65FA9A687,
                0x29AFCC507532,
                0x2B77A9EF4647,
                0x2D2B94F72440,
                0x2EC9A9EBAB45,
                0x305086F2F6D4,
                0x31BF47EABB8F,
                0x33157DFE9F71,
                0x345323E552F2,
                0x35788FF10D29,
                0x3686650B8C20,
                0x377D838E3405,
                0x385EFAB514F3,
                0x392BFB370D9B,
                0x39E5CB5BA44D,
                0x3A8DBCBC3189,
                0x3B2523BB6B2D,
                0x3BAD50A4A68B,
                0x3C278A52A4E4,
                0x3C950A3340C8,
                0x3CF6F9786DF5,
                0x3D4E6F464286,
                0x3D9C6FAFE61C,
                0x3DE1EB593751,
                0x3E1FBF97E335,
                0x3E56B6F3EFAB,
                0x3E8789ECEC0D,
                0x3EB2DFEDD5EC,
                0x3ED9505E1BC3,
                0x3EFB63C1F339,
                0x3F1994DF724F,
                0x3F3451E0899E,
                0x3F4BFD6C2DFD,
                0x3F60EFB2C128,
                0x3F73776B2AA2,
                0x3F83DABF23E1,
                0x3F9258260A71,
                0x3F9F272E24FE,
                0x3FAA7934B75E,
                0x3FB47A0D8F6D,
                0x3FBD509AE7AE,
                0x3FC51F569C07,
                0x3FCC04CDBCDC,
                0x3FD21C0F91C6,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_18_46))
    #if (defined(TINYMIND_USE_SIGMOID_19_45))
    const uint64_t SigmoidValuesTableQ19_45::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14417772FA,
                0x16F1F8371C,
                0x19FD992191,
                0x1D7054B1FC,
                0x2157B28C28,
                0x25C2F93849,
                0x2AC365A450,
                0x306C68ED80,
                0x36D3ECFAC7,
                0x3E12A06E0F,
                0x46444A6AAE,
                0x4F88269F6B,
                0x5A0149E901,
                0x65D70FBB30,
                0x73359046D8,
                0x824E1F0663,
                0x9357D0F21E,
                0xA690091509,
                0xBC3B0989F9,
                0xD4A486082A,
                0xF020340E65,
                0x10F0A536457,
                0x131C8280CF1,
                0x158C85CDEBC,
                0x1848343C905,
                0x1B57AE65F9B,
                0x1EC3AD6AD8D,
                0x22957ADACBA,
                0x26D6E224A69,
                0x2B921A1E73B,
                0x30D1A522DD9,
                0x36A02647932,
                0x3D082A57586,
                0x4413E38E5FD,
                0x4BCCD7A39EF,
                0x543B807796B,
                0x5D66E0D5686,
                0x6754100B047,
                0x7205C0AA238,
                0x7D7BC868495,
                0x89B2B0A2A5D,
                0x96A35846DDF,
                0xA442B085CDC,
                0xB2819D7C566,
                0xC14D02B2CBC,
                0xD08E00DF881,
                0xE02A66D43B4,
                0xF00553340FE,
                0x100000000000,
                0x10FFAACCBF01,
                0x11FD5992BC4B,
                0x12F71FF2077E,
                0x13EB2FD4D343,
                0x14D7E6283A99,
                0x15BBD4F7A323,
                0x1695CA7B9220,
                0x1764D4F5D5A2,
                0x182843797B6A,
                0x18DFA3F55DC7,
                0x198ABEFF4FB8,
                0x1A2991F2A979,
                0x1ABC47F88694,
                0x1B433285C610,
                0x1BBEC1C71A02,
                0x1C2F7D5A8A79,
                0x1C95FD9B86CD,
                0x1CF2E5ADD226,
                0x1D46DE5E18C4,
                0x1D9291DDB596,
                0x1DD6A8525345,
                0x1E13C5295272,
                0x1E4A8519A064,
                0x1E7B7CBC36FA,
                0x1EA737A32143,
                0x1ECE37D7F30E,
                0x1EF0F5AC9BA8,
                0x1F0FDFCBF19A,
                0x1F2B5B79F7D5,
                0x1F43C4F67606,
                0x1F596FF6EAF6,
                0x1F6CA82F0DE1,
                0x1F7DB1E0F99C,
                0x1F8CCA6FB927,
                0x1F9A28F044CF,
                0x1FA5FEB616FE,
                0x1FB077D96094,
                0x1FB9BBB59551,
                0x1FC1ED5F91F0,
                0x1FC92C130538,
                0x1FCF9397127F,
                0x1FD53C9A5BAF,
                0x1FDA3D06C7B6,
                0x1FDEA84D73D7,
                0x1FE28FAB4E03,
                0x1FE60266DE6E,
                0x1FE90E07C8E3,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_19_45))
    #if (defined(TINYMIND_USE_SIGMOID_20_44))
    const uint64_t SigmoidValuesTableQ20_44::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA20BBB97D,
                0xB78FC1B8E,
                0xCFECC90C8,
                0xEB82A58FE,
                0x10ABD94614,
                0x12E17C9C24,
                0x1561B2D228,
                0x18363476C0,
                0x1B69F67D63,
                0x1F09503707,
                0x2322253557,
                0x27C4134FB5,
                0x2D00A4F480,
                0x32EB87DD98,
                0x399AC8236C,
                0x41270F8331,
                0x49ABE8790F,
                0x5348048A84,
                0x5E1D84C4FC,
                0x6A52430415,
                0x78101A0732,
                0x878529B22B,
                0x98E4140678,
                0xAC642E6F5E,
                0xC241A1E482,
                0xDABD732FCD,
                0xF61D6B56C6,
                0x114ABD6D65D,
                0x136B7112534,
                0x15C90D0F39D,
                0x1868D2916EC,
                0x1B501323C99,
                0x1E84152BAC3,
                0x2209F1C72FE,
                0x25E66BD1CF7,
                0x2A1DC03BCB5,
                0x2EB3706AB43,
                0x33AA0805823,
                0x3902E05511C,
                0x3EBDE43424A,
                0x44D9585152E,
                0x4B51AC236EF,
                0x52215842E6E,
                0x5940CEBE2B3,
                0x60A6815965E,
                0x6847006FC40,
                0x7015336A1DA,
                0x7802A99A07F,
                0x80000000000,
                0x87FD5665F80,
                0x8FEACC95E25,
                0x97B8FF903BF,
                0x9F597EA69A1,
                0xA6BF3141D4C,
                0xADDEA7BD191,
                0xB4AE53DC910,
                0xBB26A7AEAD1,
                0xC1421BCBDB5,
                0xC6FD1FAAEE3,
                0xCC55F7FA7DC,
                0xD14C8F954BC,
                0xD5E23FC434A,
                0xDA19942E308,
                0xDDF60E38D01,
                0xE17BEAD453C,
                0xE4AFECDC366,
                0xE7972D6E913,
                0xEA36F2F0C62,
                0xEC948EEDACB,
                0xEEB542929A2,
                0xF09E294A939,
                0xF25428CD032,
                0xF3DBE5E1B7D,
                0xF539BD190A1,
                0xF671BEBF987,
                0xF787AD64DD4,
                0xF87EFE5F8CD,
                0xF95ADBCFBEA,
                0xFA1E27B3B03,
                0xFACB7FB757B,
                0xFB6541786F0,
                0xFBED8F07CCE,
                0xFC66537DC93,
                0xFCD14782267,
                0xFD2FF5B0B7F,
                0xFD83BECB04A,
                0xFDCDDDACAA8,
                0xFE0F6AFC8F8,
                0xFE49609829C,
                0xFE7C9CB893F,
                0xFEA9E4D2DD7,
                0xFED1E8363DB,
                0xFEF5426B9EB,
                0xFF147D5A701,
                0xFF301336F37,
                0xFF48703E471,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_20_44))
    #if (defined(TINYMIND_USE_SIGMOID_21_43))
    const uint64_t SigmoidValuesTableQ21_43::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5105DDCBE,
                0x5BC7E0DC7,
                0x67F664864,
                0x75C152C7F,
                0x855ECA30A,
                0x970BE4E12,
                0xAB0D96914,
                0xC1B1A3B60,
                0xDB4FB3EB1,
                0xF84A81B83,
                0x1191129AAB,
                0x13E209A7DA,
                0x1680527A40,
                0x1975C3EECC,
                0x1CCD6411B6,
                0x209387C198,
                0x24D5F43C87,
                0x29A4024542,
                0x2F0EC2627E,
                0x352921820A,
                0x3C080D0399,
                0x43C294D915,
                0x4C720A033C,
                0x56321737AF,
                0x6120D0F241,
                0x6D5EB997E6,
                0x7B0EB5AB63,
                0x8A55EB6B2E,
                0x9B5B88929A,
                0xAE486879CE,
                0xC346948B76,
                0xDA80991E4C,
                0xF420A95D61,
                0x1104F8E397F,
                0x12F335E8E7B,
                0x150EE01DE5A,
                0x1759B8355A1,
                0x19D50402C11,
                0x1C81702A88E,
                0x1F5EF21A125,
                0x226CAC28A97,
                0x25A8D611B77,
                0x2910AC21737,
                0x2CA0675F159,
                0x305340ACB2F,
                0x34238037E20,
                0x380A99B50ED,
                0x3C0154CD03F,
                0x40000000000,
                0x43FEAB32FC0,
                0x47F5664AF12,
                0x4BDC7FC81DF,
                0x4FACBF534D0,
                0x535F98A0EA6,
                0x56EF53DE8C8,
                0x5A5729EE488,
                0x5D9353D7568,
                0x60A10DE5EDA,
                0x637E8FD5771,
                0x662AFBFD3EE,
                0x68A647CAA5E,
                0x6AF11FE21A5,
                0x6D0CCA17184,
                0x6EFB071C680,
                0x70BDF56A29E,
                0x7257F66E1B3,
                0x73CB96B7489,
                0x751B7978631,
                0x764A4776D65,
                0x775AA1494D1,
                0x784F14A549C,
                0x792A1466819,
                0x79EDF2F0DBE,
                0x7A9CDE8C850,
                0x7B38DF5FCC3,
                0x7BC3D6B26EA,
                0x7C3F7F2FC66,
                0x7CAD6DE7DF5,
                0x7D0F13D9D81,
                0x7D65BFDBABD,
                0x7DB2A0BC378,
                0x7DF6C783E67,
                0x7E3329BEE49,
                0x7E68A3C1133,
                0x7E97FAD85BF,
                0x7EC1DF65825,
                0x7EE6EED6554,
                0x7F07B57E47C,
                0x7F24B04C14E,
                0x7F3E4E5C49F,
                0x7F54F2696EB,
                0x7F68F41B1ED,
                0x7F7AA135CF5,
                0x7F8A3EAD380,
                0x7F98099B79B,
                0x7FA4381F238,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_21_43))
    #if (defined(TINYMIND_USE_SIGMOID_22_42))
    const uint64_t SigmoidValuesTableQ22_42::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2882EEE5F,
                0x2DE3F06E3,
                0x33FB32432,
                0x3AE0A963F,
                0x42AF65185,
                0x4B85F2709,
                0x5586CB48A,
                0x60D8D1DB0,
                0x6DA7D9F58,
                0x7C2540DC1,
                0x8C8894D55,
                0x9F104D3ED,
                0xB40293D20,
                0xCBAE1F766,
                0xE66B208DB,
                0x1049C3E0CC,
                0x126AFA1E43,
                0x14D20122A1,
                0x178761313F,
                0x1A9490C105,
                0x1E040681CC,
                0x21E14A6C8A,
                0x263905019E,
                0x2B190B9BD7,
                0x3090687920,
                0x36AF5CCBF3,
                0x3D875AD5B1,
                0x452AF5B597,
                0x4DADC4494D,
                0x5724343CE7,
                0x61A34A45BB,
                0x6D404C8F26,
                0x7A1054AEB0,
                0x8827C71CBF,
                0x9799AF473D,
                0xA87700EF2D,
                0xBACDC1AAD0,
                0xCEA8201608,
                0xE40B815447,
                0xFAF790D092,
                0x1136561454B,
                0x12D46B08DBB,
                0x14885610B9B,
                0x165033AF8AC,
                0x1829A056597,
                0x1A11C01BF10,
                0x1C054CDA876,
                0x1E00AA6681F,
                0x20000000000,
                0x21FF55997E0,
                0x23FAB325789,
                0x25EE3FE40EF,
                0x27D65FA9A68,
                0x29AFCC50753,
                0x2B77A9EF464,
                0x2D2B94F7244,
                0x2EC9A9EBAB4,
                0x305086F2F6D,
                0x31BF47EABB8,
                0x33157DFE9F7,
                0x345323E552F,
                0x35788FF10D2,
                0x3686650B8C2,
                0x377D838E340,
                0x385EFAB514F,
                0x392BFB370D9,
                0x39E5CB5BA44,
                0x3A8DBCBC318,
                0x3B2523BB6B2,
                0x3BAD50A4A68,
                0x3C278A52A4E,
                0x3C950A3340C,
                0x3CF6F9786DF,
                0x3D4E6F46428,
                0x3D9C6FAFE61,
                0x3DE1EB59375,
                0x3E1FBF97E33,
                0x3E56B6F3EFA,
                0x3E8789ECEC0,
                0x3EB2DFEDD5E,
                0x3ED9505E1BC,
                0x3EFB63C1F33,
                0x3F1994DF724,
                0x3F3451E0899,
                0x3F4BFD6C2DF,
                0x3F60EFB2C12,
                0x3F73776B2AA,
                0x3F83DABF23E,
                0x3F9258260A7,
                0x3F9F272E24F,
                0x3FAA7934B75,
                0x3FB47A0D8F6,
                0x3FBD509AE7A,
                0x3FC51F569C0,
                0x3FCC04CDBCD,
                0x3FD21C0F91C,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_22_42))
    #if (defined(TINYMIND_USE_SIGMOID_23_41))
    const uint64_t SigmoidValuesTableQ23_41::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14417772F,
                0x16F1F8371,
                0x19FD99219,
                0x1D7054B1F,
                0x2157B28C2,
                0x25C2F9384,
                0x2AC365A45,
                0x306C68ED8,
                0x36D3ECFAC,
                0x3E12A06E0,
                0x46444A6AA,
                0x4F88269F6,
                0x5A0149E90,
                0x65D70FBB3,
                0x73359046D,
                0x824E1F066,
                0x9357D0F21,
                0xA69009150,
                0xBC3B0989F,
                0xD4A486082,
                0xF020340E6,
                0x10F0A53645,
                0x131C8280CF,
                0x158C85CDEB,
                0x1848343C90,
                0x1B57AE65F9,
                0x1EC3AD6AD8,
                0x22957ADACB,
                0x26D6E224A6,
                0x2B921A1E73,
                0x30D1A522DD,
                0x36A0264793,
                0x3D082A5758,
                0x4413E38E5F,
                0x4BCCD7A39E,
                0x543B807796,
                0x5D66E0D568,
                0x6754100B04,
                0x7205C0AA23,
                0x7D7BC86849,
                0x89B2B0A2A5,
                0x96A35846DD,
                0xA442B085CD,
                0xB2819D7C56,
                0xC14D02B2CB,
                0xD08E00DF88,
                0xE02A66D43B,
                0xF00553340F,
                0x10000000000,
                0x10FFAACCBF0,
                0x11FD5992BC4,
                0x12F71FF2077,
                0x13EB2FD4D34,
                0x14D7E6283A9,
                0x15BBD4F7A32,
                0x1695CA7B922,
                0x1764D4F5D5A,
                0x182843797B6,
                0x18DFA3F55DC,
                0x198ABEFF4FB,
                0x1A2991F2A97,
                0x1ABC47F8869,
                0x1B433285C61,
                0x1BBEC1C71A0,
                0x1C2F7D5A8A7,
                0x1C95FD9B86C,
                0x1CF2E5ADD22,
                0x1D46DE5E18C,
                0x1D9291DDB59,
                0x1DD6A852534,
                0x1E13C529527,
                0x1E4A8519A06,
                0x1E7B7CBC36F,
                0x1EA737A3214,
                0x1ECE37D7F30,
                0x1EF0F5AC9BA,
                0x1F0FDFCBF19,
                0x1F2B5B79F7D,
                0x1F43C4F6760,
                0x1F596FF6EAF,
                0x1F6CA82F0DE,
                0x1F7DB1E0F99,
                0x1F8CCA6FB92,
                0x1F9A28F044C,
                0x1FA5FEB616F,
                0x1FB077D9609,
                0x1FB9BBB5955,
                0x1FC1ED5F91F,
                0x1FC92C13053,
                0x1FCF9397127,
                0x1FD53C9A5BA,
                0x1FDA3D06C7B,
                0x1FDEA84D73D,
                0x1FE28FAB4E0,
                0x1FE60266DE6,
                0x1FE90E07C8E,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_23_41))
    #if (defined(TINYMIND_USE_SIGMOID_24_40))
    const uint64_t SigmoidValuesTableQ24_40::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA20BBB97,
                0xB78FC1B8,
                0xCFECC90C,
                0xEB82A58F,
                0x10ABD9461,
                0x12E17C9C2,
                0x1561B2D22,
                0x18363476C,
                0x1B69F67D6,
                0x1F0950370,
                0x232225355,
                0x27C4134FB,
                0x2D00A4F48,
                0x32EB87DD9,
                0x399AC8236,
                0x41270F833,
                0x49ABE8790,
                0x5348048A8,
                0x5E1D84C4F,
                0x6A5243041,
                0x78101A073,
                0x878529B22,
                0x98E414067,
                0xAC642E6F5,
                0xC241A1E48,
                0xDABD732FC,
                0xF61D6B56C,
                0x114ABD6D65,
                0x136B711253,
                0x15C90D0F39,
                0x1868D2916E,
                0x1B501323C9,
                0x1E84152BAC,
                0x2209F1C72F,
                0x25E66BD1CF,
                0x2A1DC03BCB,
                0x2EB3706AB4,
                0x33AA080582,
                0x3902E05511,
                0x3EBDE43424,
                0x44D9585152,
                0x4B51AC236E,
                0x52215842E6,
                0x5940CEBE2B,
                0x60A6815965,
                0x6847006FC4,
                0x7015336A1D,
                0x7802A99A07,
                0x8000000000,
                0x87FD5665F8,
                0x8FEACC95E2,
                0x97B8FF903B,
                0x9F597EA69A,
                0xA6BF3141D4,
                0xADDEA7BD19,
                0xB4AE53DC91,
                0xBB26A7AEAD,
                0xC1421BCBDB,
                0xC6FD1FAAEE,
                0xCC55F7FA7D,
                0xD14C8F954B,
                0xD5E23FC434,
                0xDA19942E30,
                0xDDF60E38D0,
                0xE17BEAD453,
                0xE4AFECDC36,
                0xE7972D6E91,
                0xEA36F2F0C6,
                0xEC948EEDAC,
                0xEEB542929A,
                0xF09E294A93,
                0xF25428CD03,
                0xF3DBE5E1B7,
                0xF539BD190A,
                0xF671BEBF98,
                0xF787AD64DD,
                0xF87EFE5F8C,
                0xF95ADBCFBE,
                0xFA1E27B3B0,
                0xFACB7FB757,
                0xFB6541786F,
                0xFBED8F07CC,
                0xFC66537DC9,
                0xFCD1478226,
                0xFD2FF5B0B7,
                0xFD83BECB04,
                0xFDCDDDACAA,
                0xFE0F6AFC8F,
                0xFE49609829,
                0xFE7C9CB893,
                0xFEA9E4D2DD,
                0xFED1E8363D,
                0xFEF5426B9E,
                0xFF147D5A70,
                0xFF301336F3,
                0xFF48703E47,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_24_40))
    #if (defined(TINYMIND_USE_SIGMOID_25_39))
    const uint64_t SigmoidValuesTableQ25_39::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5105DDCB,
                0x5BC7E0DC,
                0x67F66486,
                0x75C152C7,
                0x855ECA30,
                0x970BE4E1,
                0xAB0D9691,
                0xC1B1A3B6,
                0xDB4FB3EB,
                0xF84A81B8,
                0x1191129AA,
                0x13E209A7D,
                0x1680527A4,
                0x1975C3EEC,
                0x1CCD6411B,
                0x209387C19,
                0x24D5F43C8,
                0x29A402454,
                0x2F0EC2627,
                0x352921820,
                0x3C080D039,
                0x43C294D91,
                0x4C720A033,
                0x56321737A,
                0x6120D0F24,
                0x6D5EB997E,
                0x7B0EB5AB6,
                0x8A55EB6B2,
                0x9B5B88929,
                0xAE486879C,
                0xC346948B7,
                0xDA80991E4,
                0xF420A95D6,
                0x1104F8E397,
                0x12F335E8E7,
                0x150EE01DE5,
                0x1759B8355A,
                0x19D50402C1,
                0x1C81702A88,
                0x1F5EF21A12,
                0x226CAC28A9,
                0x25A8D611B7,
                0x2910AC2173,
                0x2CA0675F15,
                0x305340ACB2,
                0x34238037E2,
                0x380A99B50E,
                0x3C0154CD03,
                0x4000000000,
                0x43FEAB32FC,
                0x47F5664AF1,
                0x4BDC7FC81D,
                0x4FACBF534D,
                0x535F98A0EA,
                0x56EF53DE8C,
                0x5A5729EE48,
                0x5D9353D756,
                0x60A10DE5ED,
                0x637E8FD577,
                0x662AFBFD3E,
                0x68A647CAA5,
                0x6AF11FE21A,
                0x6D0CCA1718,
                0x6EFB071C68,
                0x70BDF56A29,
                0x7257F66E1B,
                0x73CB96B748,
                0x751B797863,
                0x764A4776D6,
                0x775AA1494D,
                0x784F14A549,
                0x792A146681,
                0x79EDF2F0DB,
                0x7A9CDE8C85,
                0x7B38DF5FCC,
                0x7BC3D6B26E,
                0x7C3F7F2FC6,
                0x7CAD6DE7DF,
                0x7D0F13D9D8,
                0x7D65BFDBAB,
                0x7DB2A0BC37,
                0x7DF6C783E6,
                0x7E3329BEE4,
                0x7E68A3C113,
                0x7E97FAD85B,
                0x7EC1DF6582,
                0x7EE6EED655,
                0x7F07B57E47,
                0x7F24B04C14,
                0x7F3E4E5C49,
                0x7F54F2696E,
                0x7F68F41B1E,
                0x7F7AA135CF,
                0x7F8A3EAD38,
                0x7F98099B79,
                0x7FA4381F23,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_25_39))
    #if (defined(TINYMIND_USE_SIGMOID_26_38))
    const uint64_t SigmoidValuesTableQ26_38::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2882EEE5,
                0x2DE3F06E,
                0x33FB3243,
                0x3AE0A963,
                0x42AF6518,
                0x4B85F270,
                0x5586CB48,
                0x60D8D1DB,
                0x6DA7D9F5,
                0x7C2540DC,
                0x8C8894D5,
                0x9F104D3E,
                0xB40293D2,
                0xCBAE1F76,
                0xE66B208D,
                0x1049C3E0C,
                0x126AFA1E4,
                0x14D20122A,
                0x178761313,
                0x1A9490C10,
                0x1E040681C,
                0x21E14A6C8,
                0x263905019,
                0x2B190B9BD,
                0x309068792,
                0x36AF5CCBF,
                0x3D875AD5B,
                0x452AF5B59,
                0x4DADC4494,
                0x5724343CE,
                0x61A34A45B,
                0x6D404C8F2,
                0x7A1054AEB,
                0x8827C71CB,
                0x9799AF473,
                0xA87700EF2,
                0xBACDC1AAD,
                0xCEA820160,
                0xE40B81544,
                0xFAF790D09,
                0x1136561454,
                0x12D46B08DB,
                0x14885610B9,
                0x165033AF8A,
                0x1829A05659,
                0x1A11C01BF1,
                0x1C054CDA87,
                0x1E00AA6681,
                0x2000000000,
                0x21FF55997E,
                0x23FAB32578,
                0x25EE3FE40E,
                0x27D65FA9A6,
                0x29AFCC5075,
                0x2B77A9EF46,
                0x2D2B94F724,
                0x2EC9A9EBAB,
                0x305086F2F6,
                0x31BF47EABB,
                0x33157DFE9F,
                0x345323E552,
                0x35788FF10D,
                0x3686650B8C,
                0x377D838E34,
                0x385EFAB514,
                0x392BFB370D,
                0x39E5CB5BA4,
                0x3A8DBCBC31,
                0x3B2523BB6B,
                0x3BAD50A4A6,
                0x3C278A52A4,
                0x3C950A3340,
                0x3CF6F9786D,
                0x3D4E6F4642,
                0x3D9C6FAFE6,
                0x3DE1EB5937,
                0x3E1FBF97E3,
                0x3E56B6F3EF,
                0x3E8789ECEC,
                0x3EB2DFEDD5,
                0x3ED9505E1B,
                0x3EFB63C1F3,
                0x3F1994DF72,
                0x3F3451E089,
                0x3F4BFD6C2D,
                0x3F60EFB2C1,
                0x3F73776B2A,
                0x3F83DABF23,
                0x3F9258260A,
                0x3F9F272E24,
                0x3FAA7934B7,
                0x3FB47A0D8F,
                0x3FBD509AE7,
                0x3FC51F569C,
                0x3FCC04CDBC,
                0x3FD21C0F91,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_26_38))
    #if (defined(TINYMIND_USE_SIGMOID_27_37))
    const uint64_t SigmoidValuesTableQ27_37::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14417772,
                0x16F1F837,
                0x19FD9921,
                0x1D7054B1,
                0x2157B28C,
                0x25C2F938,
                0x2AC365A4,
                0x306C68ED,
                0x36D3ECFA,
                0x3E12A06E,
                0x46444A6A,
                0x4F88269F,
                0x5A0149E9,
                0x65D70FBB,
                0x73359046,
                0x824E1F06,
                0x9357D0F2,
                0xA6900915,
                0xBC3B0989,
                0xD4A48608,
                0xF020340E,
                0x10F0A5364,
                0x131C8280C,
                0x158C85CDE,
                0x1848343C9,
                0x1B57AE65F,
                0x1EC3AD6AD,
                0x22957ADAC,
                0x26D6E224A,
                0x2B921A1E7,
                0x30D1A522D,
                0x36A026479,
                0x3D082A575,
                0x4413E38E5,
                0x4BCCD7A39,
                0x543B80779,
                0x5D66E0D56,
                0x6754100B0,
                0x7205C0AA2,
                0x7D7BC8684,
                0x89B2B0A2A,
                0x96A35846D,
                0xA442B085C,
                0xB2819D7C5,
                0xC14D02B2C,
                0xD08E00DF8,
                0xE02A66D43,
                0xF00553340,
                0x1000000000,
                0x10FFAACCBF,
                0x11FD5992BC,
                0x12F71FF207,
                0x13EB2FD4D3,
                0x14D7E6283A,
                0x15BBD4F7A3,
                0x1695CA7B92,
                0x1764D4F5D5,
                0x182843797B,
                0x18DFA3F55D,
                0x198ABEFF4F,
                0x1A2991F2A9,
                0x1ABC47F886,
                0x1B433285C6,
                0x1BBEC1C71A,
                0x1C2F7D5A8A,
                0x1C95FD9B86,
                0x1CF2E5ADD2,
                0x1D46DE5E18,
                0x1D9291DDB5,
                0x1DD6A85253,
                0x1E13C52952,
                0x1E4A8519A0,
                0x1E7B7CBC36,
                0x1EA737A321,
                0x1ECE37D7F3,
                0x1EF0F5AC9B,
                0x1F0FDFCBF1,
                0x1F2B5B79F7,
                0x1F43C4F676,
                0x1F596FF6EA,
                0x1F6CA82F0D,
                0x1F7DB1E0F9,
                0x1F8CCA6FB9,
                0x1F9A28F044,
                0x1FA5FEB616,
                0x1FB077D960,
                0x1FB9BBB595,
                0x1FC1ED5F91,
                0x1FC92C1305,
                0x1FCF939712,
                0x1FD53C9A5B,
                0x1FDA3D06C7,
                0x1FDEA84D73,
                0x1FE28FAB4E,
                0x1FE60266DE,
                0x1FE90E07C8,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_27_37))
    #if (defined(TINYMIND_USE_SIGMOID_28_36))
    const uint64_t SigmoidValuesTableQ28_36::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA20BBB9,
                0xB78FC1B,
                0xCFECC90,
                0xEB82A58,
                0x10ABD946,
                0x12E17C9C,
                0x1561B2D2,
                0x18363476,
                0x1B69F67D,
                0x1F095037,
                0x23222535,
                0x27C4134F,
                0x2D00A4F4,
                0x32EB87DD,
                0x399AC823,
                0x41270F83,
                0x49ABE879,
                0x5348048A,
                0x5E1D84C4,
                0x6A524304,
                0x78101A07,
                0x878529B2,
                0x98E41406,
                0xAC642E6F,
                0xC241A1E4,
                0xDABD732F,
                0xF61D6B56,
                0x114ABD6D6,
                0x136B71125,
                0x15C90D0F3,
                0x1868D2916,
                0x1B501323C,
                0x1E84152BA,
                0x2209F1C72,
                0x25E66BD1C,
                0x2A1DC03BC,
                0x2EB3706AB,
                0x33AA08058,
                0x3902E0551,
                0x3EBDE4342,
                0x44D958515,
                0x4B51AC236,
                0x52215842E,
                0x5940CEBE2,
                0x60A681596,
                0x6847006FC,
                0x7015336A1,
                0x7802A99A0,
                0x800000000,
                0x87FD5665F,
                0x8FEACC95E,
                0x97B8FF903,
                0x9F597EA69,
                0xA6BF3141D,
                0xADDEA7BD1,
                0xB4AE53DC9,
                0xBB26A7AEA,
                0xC1421BCBD,
                0xC6FD1FAAE,
                0xCC55F7FA7,
                0xD14C8F954,
                0xD5E23FC43,
                0xDA19942E3,
                0xDDF60E38D,
                0xE17BEAD45,
                0xE4AFECDC3,
                0xE7972D6E9,
                0xEA36F2F0C,
                0xEC948EEDA,
                0xEEB542929,
                0xF09E294A9,
                0xF25428CD0,
                0xF3DBE5E1B,
                0xF539BD190,
                0xF671BEBF9,
                0xF787AD64D,
                0xF87EFE5F8,
                0xF95ADBCFB,
                0xFA1E27B3B,
                0xFACB7FB75,
                0xFB6541786,
                0xFBED8F07C,
                0xFC66537DC,
                0xFCD147822,
                0xFD2FF5B0B,
                0xFD83BECB0,
                0xFDCDDDACA,
                0xFE0F6AFC8,
                0xFE4960982,
                0xFE7C9CB89,
                0xFEA9E4D2D,
                0xFED1E8363,
                0xFEF5426B9,
                0xFF147D5A7,
                0xFF301336F,
                0xFF48703E4,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_28_36))
    #if (defined(TINYMIND_USE_SIGMOID_29_35))
    const uint64_t SigmoidValuesTableQ29_35::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5105DDC,
                0x5BC7E0D,
                0x67F6648,
                0x75C152C,
                0x855ECA3,
                0x970BE4E,
                0xAB0D969,
                0xC1B1A3B,
                0xDB4FB3E,
                0xF84A81B,
                0x1191129A,
                0x13E209A7,
                0x1680527A,
                0x1975C3EE,
                0x1CCD6411,
                0x209387C1,
                0x24D5F43C,
                0x29A40245,
                0x2F0EC262,
                0x35292182,
                0x3C080D03,
                0x43C294D9,
                0x4C720A03,
                0x56321737,
                0x6120D0F2,
                0x6D5EB997,
                0x7B0EB5AB,
                0x8A55EB6B,
                0x9B5B8892,
                0xAE486879,
                0xC346948B,
                0xDA80991E,
                0xF420A95D,
                0x1104F8E39,
                0x12F335E8E,
                0x150EE01DE,
                0x1759B8355,
                0x19D50402C,
                0x1C81702A8,
                0x1F5EF21A1,
                0x226CAC28A,
                0x25A8D611B,
                0x2910AC217,
                0x2CA0675F1,
                0x305340ACB,
                0x34238037E,
                0x380A99B50,
                0x3C0154CD0,
                0x400000000,
                0x43FEAB32F,
                0x47F5664AF,
                0x4BDC7FC81,
                0x4FACBF534,
                0x535F98A0E,
                0x56EF53DE8,
                0x5A5729EE4,
                0x5D9353D75,
                0x60A10DE5E,
                0x637E8FD57,
                0x662AFBFD3,
                0x68A647CAA,
                0x6AF11FE21,
                0x6D0CCA171,
                0x6EFB071C6,
                0x70BDF56A2,
                0x7257F66E1,
                0x73CB96B74,
                0x751B79786,
                0x764A4776D,
                0x775AA1494,
                0x784F14A54,
                0x792A14668,
                0x79EDF2F0D,
                0x7A9CDE8C8,
                0x7B38DF5FC,
                0x7BC3D6B26,
                0x7C3F7F2FC,
                0x7CAD6DE7D,
                0x7D0F13D9D,
                0x7D65BFDBA,
                0x7DB2A0BC3,
                0x7DF6C783E,
                0x7E3329BEE,
                0x7E68A3C11,
                0x7E97FAD85,
                0x7EC1DF658,
                0x7EE6EED65,
                0x7F07B57E4,
                0x7F24B04C1,
                0x7F3E4E5C4,
                0x7F54F2696,
                0x7F68F41B1,
                0x7F7AA135C,
                0x7F8A3EAD3,
                0x7F98099B7,
                0x7FA4381F2,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_29_35))
    #if (defined(TINYMIND_USE_SIGMOID_30_34))
    const uint64_t SigmoidValuesTableQ30_34::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2882EEE,
                0x2DE3F06,
                0x33FB324,
                0x3AE0A96,
                0x42AF651,
                0x4B85F27,
                0x5586CB4,
                0x60D8D1D,
                0x6DA7D9F,
                0x7C2540D,
                0x8C8894D,
                0x9F104D3,
                0xB40293D,
                0xCBAE1F7,
                0xE66B208,
                0x1049C3E0,
                0x126AFA1E,
                0x14D20122,
                0x17876131,
                0x1A9490C1,
                0x1E040681,
                0x21E14A6C,
                0x26390501,
                0x2B190B9B,
                0x30906879,
                0x36AF5CCB,
                0x3D875AD5,
                0x452AF5B5,
                0x4DADC449,
                0x5724343C,
                0x61A34A45,
                0x6D404C8F,
                0x7A1054AE,
                0x8827C71C,
                0x9799AF47,
                0xA87700EF,
                0xBACDC1AA,
                0xCEA82016,
                0xE40B8154,
                0xFAF790D0,
                0x113656145,
                0x12D46B08D,
                0x14885610B,
                0x165033AF8,
                0x1829A0565,
                0x1A11C01BF,
                0x1C054CDA8,
                0x1E00AA668,
                0x200000000,
                0x21FF55997,
                0x23FAB3257,
                0x25EE3FE40,
                0x27D65FA9A,
                0x29AFCC507,
                0x2B77A9EF4,
                0x2D2B94F72,
                0x2EC9A9EBA,
                0x305086F2F,
                0x31BF47EAB,
                0x33157DFE9,
                0x345323E55,
                0x35788FF10,
                0x3686650B8,
                0x377D838E3,
                0x385EFAB51,
                0x392BFB370,
                0x39E5CB5BA,
                0x3A8DBCBC3,
                0x3B2523BB6,
                0x3BAD50A4A,
                0x3C278A52A,
                0x3C950A334,
                0x3CF6F9786,
                0x3D4E6F464,
                0x3D9C6FAFE,
                0x3DE1EB593,
                0x3E1FBF97E,
                0x3E56B6F3E,
                0x3E8789ECE,
                0x3EB2DFEDD,
                0x3ED9505E1,
                0x3EFB63C1F,
                0x3F1994DF7,
                0x3F3451E08,
                0x3F4BFD6C2,
                0x3F60EFB2C,
                0x3F73776B2,
                0x3F83DABF2,
                0x3F9258260,
                0x3F9F272E2,
                0x3FAA7934B,
                0x3FB47A0D8,
                0x3FBD509AE,
                0x3FC51F569,
                0x3FCC04CDB,
                0x3FD21C0F9,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_30_34))
    #if (defined(TINYMIND_USE_SIGMOID_31_33))
    const uint64_t SigmoidValuesTableQ31_33::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x1441777,
                0x16F1F83,
                0x19FD992,
                0x1D7054B,
                0x2157B28,
                0x25C2F93,
                0x2AC365A,
                0x306C68E,
                0x36D3ECF,
                0x3E12A06,
                0x46444A6,
                0x4F88269,
                0x5A0149E,
                0x65D70FB,
                0x7335904,
                0x824E1F0,
                0x9357D0F,
                0xA690091,
                0xBC3B098,
                0xD4A4860,
                0xF020340,
                0x10F0A536,
                0x131C8280,
                0x158C85CD,
                0x1848343C,
                0x1B57AE65,
                0x1EC3AD6A,
                0x22957ADA,
                0x26D6E224,
                0x2B921A1E,
                0x30D1A522,
                0x36A02647,
                0x3D082A57,
                0x4413E38E,
                0x4BCCD7A3,
                0x543B8077,
                0x5D66E0D5,
                0x6754100B,
                0x7205C0AA,
                0x7D7BC868,
                0x89B2B0A2,
                0x96A35846,
                0xA442B085,
                0xB2819D7C,
                0xC14D02B2,
                0xD08E00DF,
                0xE02A66D4,
                0xF0055334,
                0x100000000,
                0x10FFAACCB,
                0x11FD5992B,
                0x12F71FF20,
                0x13EB2FD4D,
                0x14D7E6283,
                0x15BBD4F7A,
                0x1695CA7B9,
                0x1764D4F5D,
                0x182843797,
                0x18DFA3F55,
                0x198ABEFF4,
                0x1A2991F2A,
                0x1ABC47F88,
                0x1B433285C,
                0x1BBEC1C71,
                0x1C2F7D5A8,
                0x1C95FD9B8,
                0x1CF2E5ADD,
                0x1D46DE5E1,
                0x1D9291DDB,
                0x1DD6A8525,
                0x1E13C5295,
                0x1E4A8519A,
                0x1E7B7CBC3,
                0x1EA737A32,
                0x1ECE37D7F,
                0x1EF0F5AC9,
                0x1F0FDFCBF,
                0x1F2B5B79F,
                0x1F43C4F67,
                0x1F596FF6E,
                0x1F6CA82F0,
                0x1F7DB1E0F,
                0x1F8CCA6FB,
                0x1F9A28F04,
                0x1FA5FEB61,
                0x1FB077D96,
                0x1FB9BBB59,
                0x1FC1ED5F9,
                0x1FC92C130,
                0x1FCF93971,
                0x1FD53C9A5,
                0x1FDA3D06C,
                0x1FDEA84D7,
                0x1FE28FAB4,
                0x1FE60266D,
                0x1FE90E07C,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_31_33))
    #if (defined(TINYMIND_USE_SIGMOID_32_32))
    const uint64_t SigmoidValuesTableQ32_32::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA20BBB,
                0xB78FC1,
                0xCFECC9,
                0xEB82A5,
                0x10ABD94,
                0x12E17C9,
                0x1561B2D,
                0x1836347,
                0x1B69F67,
                0x1F09503,
                0x2322253,
                0x27C4134,
                0x2D00A4F,
                0x32EB87D,
                0x399AC82,
                0x41270F8,
                0x49ABE87,
                0x5348048,
                0x5E1D84C,
                0x6A52430,
                0x78101A0,
                0x878529B,
                0x98E4140,
                0xAC642E6,
                0xC241A1E,
                0xDABD732,
                0xF61D6B5,
                0x114ABD6D,
                0x136B7112,
                0x15C90D0F,
                0x1868D291,
                0x1B501323,
                0x1E84152B,
                0x2209F1C7,
                0x25E66BD1,
                0x2A1DC03B,
                0x2EB3706A,
                0x33AA0805,
                0x3902E055,
                0x3EBDE434,
                0x44D95851,
                0x4B51AC23,
                0x52215842,
                0x5940CEBE,
                0x60A68159,
                0x6847006F,
                0x7015336A,
                0x7802A99A,
                0x80000000,
                0x87FD5665,
                0x8FEACC95,
                0x97B8FF90,
                0x9F597EA6,
                0xA6BF3141,
                0xADDEA7BD,
                0xB4AE53DC,
                0xBB26A7AE,
                0xC1421BCB,
                0xC6FD1FAA,
                0xCC55F7FA,
                0xD14C8F95,
                0xD5E23FC4,
                0xDA19942E,
                0xDDF60E38,
                0xE17BEAD4,
                0xE4AFECDC,
                0xE7972D6E,
                0xEA36F2F0,
                0xEC948EED,
                0xEEB54292,
                0xF09E294A,
                0xF25428CD,
                0xF3DBE5E1,
                0xF539BD19,
                0xF671BEBF,
                0xF787AD64,
                0xF87EFE5F,
                0xF95ADBCF,
                0xFA1E27B3,
                0xFACB7FB7,
                0xFB654178,
                0xFBED8F07,
                0xFC66537D,
                0xFCD14782,
                0xFD2FF5B0,
                0xFD83BECB,
                0xFDCDDDAC,
                0xFE0F6AFC,
                0xFE496098,
                0xFE7C9CB8,
                0xFEA9E4D2,
                0xFED1E836,
                0xFEF5426B,
                0xFF147D5A,
                0xFF301336,
                0xFF48703E,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_32_32))
    #if (defined(TINYMIND_USE_SIGMOID_33_31))
    const uint64_t SigmoidValuesTableQ33_31::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5105DD,
                0x5BC7E0,
                0x67F664,
                0x75C152,
                0x855ECA,
                0x970BE4,
                0xAB0D96,
                0xC1B1A3,
                0xDB4FB3,
                0xF84A81,
                0x1191129,
                0x13E209A,
                0x1680527,
                0x1975C3E,
                0x1CCD641,
                0x209387C,
                0x24D5F43,
                0x29A4024,
                0x2F0EC26,
                0x3529218,
                0x3C080D0,
                0x43C294D,
                0x4C720A0,
                0x5632173,
                0x6120D0F,
                0x6D5EB99,
                0x7B0EB5A,
                0x8A55EB6,
                0x9B5B889,
                0xAE48687,
                0xC346948,
                0xDA80991,
                0xF420A95,
                0x1104F8E3,
                0x12F335E8,
                0x150EE01D,
                0x1759B835,
                0x19D50402,
                0x1C81702A,
                0x1F5EF21A,
                0x226CAC28,
                0x25A8D611,
                0x2910AC21,
                0x2CA0675F,
                0x305340AC,
                0x34238037,
                0x380A99B5,
                0x3C0154CD,
                0x40000000,
                0x43FEAB32,
                0x47F5664A,
                0x4BDC7FC8,
                0x4FACBF53,
                0x535F98A0,
                0x56EF53DE,
                0x5A5729EE,
                0x5D9353D7,
                0x60A10DE5,
                0x637E8FD5,
                0x662AFBFD,
                0x68A647CA,
                0x6AF11FE2,
                0x6D0CCA17,
                0x6EFB071C,
                0x70BDF56A,
                0x7257F66E,
                0x73CB96B7,
                0x751B7978,
                0x764A4776,
                0x775AA149,
                0x784F14A5,
                0x792A1466,
                0x79EDF2F0,
                0x7A9CDE8C,
                0x7B38DF5F,
                0x7BC3D6B2,
                0x7C3F7F2F,
                0x7CAD6DE7,
                0x7D0F13D9,
                0x7D65BFDB,
                0x7DB2A0BC,
                0x7DF6C783,
                0x7E3329BE,
                0x7E68A3C1,
                0x7E97FAD8,
                0x7EC1DF65,
                0x7EE6EED6,
                0x7F07B57E,
                0x7F24B04C,
                0x7F3E4E5C,
                0x7F54F269,
                0x7F68F41B,
                0x7F7AA135,
                0x7F8A3EAD,
                0x7F98099B,
                0x7FA4381F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_33_31))
    #if (defined(TINYMIND_USE_SIGMOID_34_30))
    const uint64_t SigmoidValuesTableQ34_30::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2882EE,
                0x2DE3F0,
                0x33FB32,
                0x3AE0A9,
                0x42AF65,
                0x4B85F2,
                0x5586CB,
                0x60D8D1,
                0x6DA7D9,
                0x7C2540,
                0x8C8894,
                0x9F104D,
                0xB40293,
                0xCBAE1F,
                0xE66B20,
                0x1049C3E,
                0x126AFA1,
                0x14D2012,
                0x1787613,
                0x1A9490C,
                0x1E04068,
                0x21E14A6,
                0x2639050,
                0x2B190B9,
                0x3090687,
                0x36AF5CC,
                0x3D875AD,
                0x452AF5B,
                0x4DADC44,
                0x5724343,
                0x61A34A4,
                0x6D404C8,
                0x7A1054A,
                0x8827C71,
                0x9799AF4,
                0xA87700E,
                0xBACDC1A,
                0xCEA8201,
                0xE40B815,
                0xFAF790D,
                0x11365614,
                0x12D46B08,
                0x14885610,
                0x165033AF,
                0x1829A056,
                0x1A11C01B,
                0x1C054CDA,
                0x1E00AA66,
                0x20000000,
                0x21FF5599,
                0x23FAB325,
                0x25EE3FE4,
                0x27D65FA9,
                0x29AFCC50,
                0x2B77A9EF,
                0x2D2B94F7,
                0x2EC9A9EB,
                0x305086F2,
                0x31BF47EA,
                0x33157DFE,
                0x345323E5,
                0x35788FF1,
                0x3686650B,
                0x377D838E,
                0x385EFAB5,
                0x392BFB37,
                0x39E5CB5B,
                0x3A8DBCBC,
                0x3B2523BB,
                0x3BAD50A4,
                0x3C278A52,
                0x3C950A33,
                0x3CF6F978,
                0x3D4E6F46,
                0x3D9C6FAF,
                0x3DE1EB59,
                0x3E1FBF97,
                0x3E56B6F3,
                0x3E8789EC,
                0x3EB2DFED,
                0x3ED9505E,
                0x3EFB63C1,
                0x3F1994DF,
                0x3F3451E0,
                0x3F4BFD6C,
                0x3F60EFB2,
                0x3F73776B,
                0x3F83DABF,
                0x3F925826,
                0x3F9F272E,
                0x3FAA7934,
                0x3FB47A0D,
                0x3FBD509A,
                0x3FC51F56,
                0x3FCC04CD,
                0x3FD21C0F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_34_30))
    #if (defined(TINYMIND_USE_SIGMOID_35_29))
    const uint64_t SigmoidValuesTableQ35_29::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144177,
                0x16F1F8,
                0x19FD99,
                0x1D7054,
                0x2157B2,
                0x25C2F9,
                0x2AC365,
                0x306C68,
                0x36D3EC,
                0x3E12A0,
                0x46444A,
                0x4F8826,
                0x5A0149,
                0x65D70F,
                0x733590,
                0x824E1F,
                0x9357D0,
                0xA69009,
                0xBC3B09,
                0xD4A486,
                0xF02034,
                0x10F0A53,
                0x131C828,
                0x158C85C,
                0x1848343,
                0x1B57AE6,
                0x1EC3AD6,
                0x22957AD,
                0x26D6E22,
                0x2B921A1,
                0x30D1A52,
                0x36A0264,
                0x3D082A5,
                0x4413E38,
                0x4BCCD7A,
                0x543B807,
                0x5D66E0D,
                0x6754100,
                0x7205C0A,
                0x7D7BC86,
                0x89B2B0A,
                0x96A3584,
                0xA442B08,
                0xB2819D7,
                0xC14D02B,
                0xD08E00D,
                0xE02A66D,
                0xF005533,
                0x10000000,
                0x10FFAACC,
                0x11FD5992,
                0x12F71FF2,
                0x13EB2FD4,
                0x14D7E628,
                0x15BBD4F7,
                0x1695CA7B,
                0x1764D4F5,
                0x18284379,
                0x18DFA3F5,
                0x198ABEFF,
                0x1A2991F2,
                0x1ABC47F8,
                0x1B433285,
                0x1BBEC1C7,
                0x1C2F7D5A,
                0x1C95FD9B,
                0x1CF2E5AD,
                0x1D46DE5E,
                0x1D9291DD,
                0x1DD6A852,
                0x1E13C529,
                0x1E4A8519,
                0x1E7B7CBC,
                0x1EA737A3,
                0x1ECE37D7,
                0x1EF0F5AC,
                0x1F0FDFCB,
                0x1F2B5B79,
                0x1F43C4F6,
                0x1F596FF6,
                0x1F6CA82F,
                0x1F7DB1E0,
                0x1F8CCA6F,
                0x1F9A28F0,
                0x1FA5FEB6,
                0x1FB077D9,
                0x1FB9BBB5,
                0x1FC1ED5F,
                0x1FC92C13,
                0x1FCF9397,
                0x1FD53C9A,
                0x1FDA3D06,
                0x1FDEA84D,
                0x1FE28FAB,
                0x1FE60266,
                0x1FE90E07,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_35_29))
    #if (defined(TINYMIND_USE_SIGMOID_36_28))
    const uint64_t SigmoidValuesTableQ36_28::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA20BB,
                0xB78FC,
                0xCFECC,
                0xEB82A,
                0x10ABD9,
                0x12E17C,
                0x1561B2,
                0x183634,
                0x1B69F6,
                0x1F0950,
                0x232225,
                0x27C413,
                0x2D00A4,
                0x32EB87,
                0x399AC8,
                0x41270F,
                0x49ABE8,
                0x534804,
                0x5E1D84,
                0x6A5243,
                0x78101A,
                0x878529,
                0x98E414,
                0xAC642E,
                0xC241A1,
                0xDABD73,
                0xF61D6B,
                0x114ABD6,
                0x136B711,
                0x15C90D0,
                0x1868D29,
                0x1B50132,
                0x1E84152,
                0x2209F1C,
                0x25E66BD,
                0x2A1DC03,
                0x2EB3706,
                0x33AA080,
                0x3902E05,
                0x3EBDE43,
                0x44D9585,
                0x4B51AC2,
                0x5221584,
                0x5940CEB,
                0x60A6815,
                0x6847006,
                0x7015336,
                0x7802A99,
                0x8000000,
                0x87FD566,
                0x8FEACC9,
                0x97B8FF9,
                0x9F597EA,
                0xA6BF314,
                0xADDEA7B,
                0xB4AE53D,
                0xBB26A7A,
                0xC1421BC,
                0xC6FD1FA,
                0xCC55F7F,
                0xD14C8F9,
                0xD5E23FC,
                0xDA19942,
                0xDDF60E3,
                0xE17BEAD,
                0xE4AFECD,
                0xE7972D6,
                0xEA36F2F,
                0xEC948EE,
                0xEEB5429,
                0xF09E294,
                0xF25428C,
                0xF3DBE5E,
                0xF539BD1,
                0xF671BEB,
                0xF787AD6,
                0xF87EFE5,
                0xF95ADBC,
                0xFA1E27B,
                0xFACB7FB,
                0xFB65417,
                0xFBED8F0,
                0xFC66537,
                0xFCD1478,
                0xFD2FF5B,
                0xFD83BEC,
                0xFDCDDDA,
                0xFE0F6AF,
                0xFE49609,
                0xFE7C9CB,
                0xFEA9E4D,
                0xFED1E83,
                0xFEF5426,
                0xFF147D5,
                0xFF30133,
                0xFF48703,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_36_28))
    #if (defined(TINYMIND_USE_SIGMOID_37_27))
    const uint64_t SigmoidValuesTableQ37_27::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5105D,
                0x5BC7E,
                0x67F66,
                0x75C15,
                0x855EC,
                0x970BE,
                0xAB0D9,
                0xC1B1A,
                0xDB4FB,
                0xF84A8,
                0x119112,
                0x13E209,
                0x168052,
                0x1975C3,
                0x1CCD64,
                0x209387,
                0x24D5F4,
                0x29A402,
                0x2F0EC2,
                0x352921,
                0x3C080D,
                0x43C294,
                0x4C720A,
                0x563217,
                0x6120D0,
                0x6D5EB9,
                0x7B0EB5,
                0x8A55EB,
                0x9B5B88,
                0xAE4868,
                0xC34694,
                0xDA8099,
                0xF420A9,
                0x1104F8E,
                0x12F335E,
                0x150EE01,
                0x1759B83,
                0x19D5040,
                0x1C81702,
                0x1F5EF21,
                0x226CAC2,
                0x25A8D61,
                0x2910AC2,
                0x2CA0675,
                0x305340A,
                0x3423803,
                0x380A99B,
                0x3C0154C,
                0x4000000,
                0x43FEAB3,
                0x47F5664,
                0x4BDC7FC,
                0x4FACBF5,
                0x535F98A,
                0x56EF53D,
                0x5A5729E,
                0x5D9353D,
                0x60A10DE,
                0x637E8FD,
                0x662AFBF,
                0x68A647C,
                0x6AF11FE,
                0x6D0CCA1,
                0x6EFB071,
                0x70BDF56,
                0x7257F66,
                0x73CB96B,
                0x751B797,
                0x764A477,
                0x775AA14,
                0x784F14A,
                0x792A146,
                0x79EDF2F,
                0x7A9CDE8,
                0x7B38DF5,
                0x7BC3D6B,
                0x7C3F7F2,
                0x7CAD6DE,
                0x7D0F13D,
                0x7D65BFD,
                0x7DB2A0B,
                0x7DF6C78,
                0x7E3329B,
                0x7E68A3C,
                0x7E97FAD,
                0x7EC1DF6,
                0x7EE6EED,
                0x7F07B57,
                0x7F24B04,
                0x7F3E4E5,
                0x7F54F26,
                0x7F68F41,
                0x7F7AA13,
                0x7F8A3EA,
                0x7F98099,
                0x7FA4381,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_37_27))
    #if (defined(TINYMIND_USE_SIGMOID_38_26))
    const uint64_t SigmoidValuesTableQ38_26::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2882E,
                0x2DE3F,
                0x33FB3,
                0x3AE0A,
                0x42AF6,
                0x4B85F,
                0x5586C,
                0x60D8D,
                0x6DA7D,
                0x7C254,
                0x8C889,
                0x9F104,
                0xB4029,
                0xCBAE1,
                0xE66B2,
                0x1049C3,
                0x126AFA,
                0x14D201,
                0x178761,
                0x1A9490,
                0x1E0406,
                0x21E14A,
                0x263905,
                0x2B190B,
                0x309068,
                0x36AF5C,
                0x3D875A,
                0x452AF5,
                0x4DADC4,
                0x572434,
                0x61A34A,
                0x6D404C,
                0x7A1054,
                0x8827C7,
                0x9799AF,
                0xA87700,
                0xBACDC1,
                0xCEA820,
                0xE40B81,
                0xFAF790,
                0x1136561,
                0x12D46B0,
                0x1488561,
                0x165033A,
                0x1829A05,
                0x1A11C01,
                0x1C054CD,
                0x1E00AA6,
                0x2000000,
                0x21FF559,
                0x23FAB32,
                0x25EE3FE,
                0x27D65FA,
                0x29AFCC5,
                0x2B77A9E,
                0x2D2B94F,
                0x2EC9A9E,
                0x305086F,
                0x31BF47E,
                0x33157DF,
                0x345323E,
                0x35788FF,
                0x3686650,
                0x377D838,
                0x385EFAB,
                0x392BFB3,
                0x39E5CB5,
                0x3A8DBCB,
                0x3B2523B,
                0x3BAD50A,
                0x3C278A5,
                0x3C950A3,
                0x3CF6F97,
                0x3D4E6F4,
                0x3D9C6FA,
                0x3DE1EB5,
                0x3E1FBF9,
                0x3E56B6F,
                0x3E8789E,
                0x3EB2DFE,
                0x3ED9505,
                0x3EFB63C,
                0x3F1994D,
                0x3F3451E,
                0x3F4BFD6,
                0x3F60EFB,
                0x3F73776,
                0x3F83DAB,
                0x3F92582,
                0x3F9F272,
                0x3FAA793,
                0x3FB47A0,
                0x3FBD509,
                0x3FC51F5,
                0x3FCC04C,
                0x3FD21C0,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_38_26))
    #if (defined(TINYMIND_USE_SIGMOID_39_25))
    const uint64_t SigmoidValuesTableQ39_25::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14417,
                0x16F1F,
                0x19FD9,
                0x1D705,
                0x2157B,
                0x25C2F,
                0x2AC36,
                0x306C6,
                0x36D3E,
                0x3E12A,
                0x46444,
                0x4F882,
                0x5A014,
                0x65D70,
                0x73359,
                0x824E1,
                0x9357D,
                0xA6900,
                0xBC3B0,
                0xD4A48,
                0xF0203,
                0x10F0A5,
                0x131C82,
                0x158C85,
                0x184834,
                0x1B57AE,
                0x1EC3AD,
                0x22957A,
                0x26D6E2,
                0x2B921A,
                0x30D1A5,
                0x36A026,
                0x3D082A,
                0x4413E3,
                0x4BCCD7,
                0x543B80,
                0x5D66E0,
                0x675410,
                0x7205C0,
                0x7D7BC8,
                0x89B2B0,
                0x96A358,
                0xA442B0,
                0xB2819D,
                0xC14D02,
                0xD08E00,
                0xE02A66,
                0xF00553,
                0x1000000,
                0x10FFAAC,
                0x11FD599,
                0x12F71FF,
                0x13EB2FD,
                0x14D7E62,
                0x15BBD4F,
                0x1695CA7,
                0x1764D4F,
                0x1828437,
                0x18DFA3F,
                0x198ABEF,
                0x1A2991F,
                0x1ABC47F,
                0x1B43328,
                0x1BBEC1C,
                0x1C2F7D5,
                0x1C95FD9,
                0x1CF2E5A,
                0x1D46DE5,
                0x1D9291D,
                0x1DD6A85,
                0x1E13C52,
                0x1E4A851,
                0x1E7B7CB,
                0x1EA737A,
                0x1ECE37D,
                0x1EF0F5A,
                0x1F0FDFC,
                0x1F2B5B7,
                0x1F43C4F,
                0x1F596FF,
                0x1F6CA82,
                0x1F7DB1E,
                0x1F8CCA6,
                0x1F9A28F,
                0x1FA5FEB,
                0x1FB077D,
                0x1FB9BBB,
                0x1FC1ED5,
                0x1FC92C1,
                0x1FCF939,
                0x1FD53C9,
                0x1FDA3D0,
                0x1FDEA84,
                0x1FE28FA,
                0x1FE6026,
                0x1FE90E0,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_39_25))
    #if (defined(TINYMIND_USE_SIGMOID_40_24))
    const uint64_t SigmoidValuesTableQ40_24::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA20B,
                0xB78F,
                0xCFEC,
                0xEB82,
                0x10ABD,
                0x12E17,
                0x1561B,
                0x18363,
                0x1B69F,
                0x1F095,
                0x23222,
                0x27C41,
                0x2D00A,
                0x32EB8,
                0x399AC,
                0x41270,
                0x49ABE,
                0x53480,
                0x5E1D8,
                0x6A524,
                0x78101,
                0x87852,
                0x98E41,
                0xAC642,
                0xC241A,
                0xDABD7,
                0xF61D6,
                0x114ABD,
                0x136B71,
                0x15C90D,
                0x1868D2,
                0x1B5013,
                0x1E8415,
                0x2209F1,
                0x25E66B,
                0x2A1DC0,
                0x2EB370,
                0x33AA08,
                0x3902E0,
                0x3EBDE4,
                0x44D958,
                0x4B51AC,
                0x522158,
                0x5940CE,
                0x60A681,
                0x684700,
                0x701533,
                0x7802A9,
                0x800000,
                0x87FD56,
                0x8FEACC,
                0x97B8FF,
                0x9F597E,
                0xA6BF31,
                0xADDEA7,
                0xB4AE53,
                0xBB26A7,
                0xC1421B,
                0xC6FD1F,
                0xCC55F7,
                0xD14C8F,
                0xD5E23F,
                0xDA1994,
                0xDDF60E,
                0xE17BEA,
                0xE4AFEC,
                0xE7972D,
                0xEA36F2,
                0xEC948E,
                0xEEB542,
                0xF09E29,
                0xF25428,
                0xF3DBE5,
                0xF539BD,
                0xF671BE,
                0xF787AD,
                0xF87EFE,
                0xF95ADB,
                0xFA1E27,
                0xFACB7F,
                0xFB6541,
                0xFBED8F,
                0xFC6653,
                0xFCD147,
                0xFD2FF5,
                0xFD83BE,
                0xFDCDDD,
                0xFE0F6A,
                0xFE4960,
                0xFE7C9C,
                0xFEA9E4,
                0xFED1E8,
                0xFEF542,
                0xFF147D,
                0xFF3013,
                0xFF4870,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_40_24))
    #if (defined(TINYMIND_USE_SIGMOID_41_23))
    const uint64_t SigmoidValuesTableQ41_23::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5105,
                0x5BC7,
                0x67F6,
                0x75C1,
                0x855E,
                0x970B,
                0xAB0D,
                0xC1B1,
                0xDB4F,
                0xF84A,
                0x11911,
                0x13E20,
                0x16805,
                0x1975C,
                0x1CCD6,
                0x20938,
                0x24D5F,
                0x29A40,
                0x2F0EC,
                0x35292,
                0x3C080,
                0x43C29,
                0x4C720,
                0x56321,
                0x6120D,
                0x6D5EB,
                0x7B0EB,
                0x8A55E,
                0x9B5B8,
                0xAE486,
                0xC3469,
                0xDA809,
                0xF420A,
                0x1104F8,
                0x12F335,
                0x150EE0,
                0x1759B8,
                0x19D504,
                0x1C8170,
                0x1F5EF2,
                0x226CAC,
                0x25A8D6,
                0x2910AC,
                0x2CA067,
                0x305340,
                0x342380,
                0x380A99,
                0x3C0154,
                0x400000,
                0x43FEAB,
                0x47F566,
                0x4BDC7F,
                0x4FACBF,
                0x535F98,
                0x56EF53,
                0x5A5729,
                0x5D9353,
                0x60A10D,
                0x637E8F,
                0x662AFB,
                0x68A647,
                0x6AF11F,
                0x6D0CCA,
                0x6EFB07,
                0x70BDF5,
                0x7257F6,
                0x73CB96,
                0x751B79,
                0x764A47,
                0x775AA1,
                0x784F14,
                0x792A14,
                0x79EDF2,
                0x7A9CDE,
                0x7B38DF,
                0x7BC3D6,
                0x7C3F7F,
                0x7CAD6D,
                0x7D0F13,
                0x7D65BF,
                0x7DB2A0,
                0x7DF6C7,
                0x7E3329,
                0x7E68A3,
                0x7E97FA,
                0x7EC1DF,
                0x7EE6EE,
                0x7F07B5,
                0x7F24B0,
                0x7F3E4E,
                0x7F54F2,
                0x7F68F4,
                0x7F7AA1,
                0x7F8A3E,
                0x7F9809,
                0x7FA438,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_41_23))
    #if (defined(TINYMIND_USE_SIGMOID_42_22))
    const uint64_t SigmoidValuesTableQ42_22::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2882,
                0x2DE3,
                0x33FB,
                0x3AE0,
                0x42AF,
                0x4B85,
                0x5586,
                0x60D8,
                0x6DA7,
                0x7C25,
                0x8C88,
                0x9F10,
                0xB402,
                0xCBAE,
                0xE66B,
                0x1049C,
                0x126AF,
                0x14D20,
                0x17876,
                0x1A949,
                0x1E040,
                0x21E14,
                0x26390,
                0x2B190,
                0x30906,
                0x36AF5,
                0x3D875,
                0x452AF,
                0x4DADC,
                0x57243,
                0x61A34,
                0x6D404,
                0x7A105,
                0x8827C,
                0x9799A,
                0xA8770,
                0xBACDC,
                0xCEA82,
                0xE40B8,
                0xFAF79,
                0x113656,
                0x12D46B,
                0x148856,
                0x165033,
                0x1829A0,
                0x1A11C0,
                0x1C054C,
                0x1E00AA,
                0x200000,
                0x21FF55,
                0x23FAB3,
                0x25EE3F,
                0x27D65F,
                0x29AFCC,
                0x2B77A9,
                0x2D2B94,
                0x2EC9A9,
                0x305086,
                0x31BF47,
                0x33157D,
                0x345323,
                0x35788F,
                0x368665,
                0x377D83,
                0x385EFA,
                0x392BFB,
                0x39E5CB,
                0x3A8DBC,
                0x3B2523,
                0x3BAD50,
                0x3C278A,
                0x3C950A,
                0x3CF6F9,
                0x3D4E6F,
                0x3D9C6F,
                0x3DE1EB,
                0x3E1FBF,
                0x3E56B6,
                0x3E8789,
                0x3EB2DF,
                0x3ED950,
                0x3EFB63,
                0x3F1994,
                0x3F3451,
                0x3F4BFD,
                0x3F60EF,
                0x3F7377,
                0x3F83DA,
                0x3F9258,
                0x3F9F27,
                0x3FAA79,
                0x3FB47A,
                0x3FBD50,
                0x3FC51F,
                0x3FCC04,
                0x3FD21C,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_42_22))
    #if (defined(TINYMIND_USE_SIGMOID_43_21))
    const uint64_t SigmoidValuesTableQ43_21::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x1441,
                0x16F1,
                0x19FD,
                0x1D70,
                0x2157,
                0x25C2,
                0x2AC3,
                0x306C,
                0x36D3,
                0x3E12,
                0x4644,
                0x4F88,
                0x5A01,
                0x65D7,
                0x7335,
                0x824E,
                0x9357,
                0xA690,
                0xBC3B,
                0xD4A4,
                0xF020,
                0x10F0A,
                0x131C8,
                0x158C8,
                0x18483,
                0x1B57A,
                0x1EC3A,
                0x22957,
                0x26D6E,
                0x2B921,
                0x30D1A,
                0x36A02,
                0x3D082,
                0x4413E,
                0x4BCCD,
                0x543B8,
                0x5D66E,
                0x67541,
                0x7205C,
                0x7D7BC,
                0x89B2B,
                0x96A35,
                0xA442B,
                0xB2819,
                0xC14D0,
                0xD08E0,
                0xE02A6,
                0xF0055,
                0x100000,
                0x10FFAA,
                0x11FD59,
                0x12F71F,
                0x13EB2F,
                0x14D7E6,
                0x15BBD4,
                0x1695CA,
                0x1764D4,
                0x182843,
                0x18DFA3,
                0x198ABE,
                0x1A2991,
                0x1ABC47,
                0x1B4332,
                0x1BBEC1,
                0x1C2F7D,
                0x1C95FD,
                0x1CF2E5,
                0x1D46DE,
                0x1D9291,
                0x1DD6A8,
                0x1E13C5,
                0x1E4A85,
                0x1E7B7C,
                0x1EA737,
                0x1ECE37,
                0x1EF0F5,
                0x1F0FDF,
                0x1F2B5B,
                0x1F43C4,
                0x1F596F,
                0x1F6CA8,
                0x1F7DB1,
                0x1F8CCA,
                0x1F9A28,
                0x1FA5FE,
                0x1FB077,
                0x1FB9BB,
                0x1FC1ED,
                0x1FC92C,
                0x1FCF93,
                0x1FD53C,
                0x1FDA3D,
                0x1FDEA8,
                0x1FE28F,
                0x1FE602,
                0x1FE90E,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_43_21))
    #if (defined(TINYMIND_USE_SIGMOID_44_20))
    const uint64_t SigmoidValuesTableQ44_20::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA20,
                0xB78,
                0xCFE,
                0xEB8,
                0x10AB,
                0x12E1,
                0x1561,
                0x1836,
                0x1B69,
                0x1F09,
                0x2322,
                0x27C4,
                0x2D00,
                0x32EB,
                0x399A,
                0x4127,
                0x49AB,
                0x5348,
                0x5E1D,
                0x6A52,
                0x7810,
                0x8785,
                0x98E4,
                0xAC64,
                0xC241,
                0xDABD,
                0xF61D,
                0x114AB,
                0x136B7,
                0x15C90,
                0x1868D,
                0x1B501,
                0x1E841,
                0x2209F,
                0x25E66,
                0x2A1DC,
                0x2EB37,
                0x33AA0,
                0x3902E,
                0x3EBDE,
                0x44D95,
                0x4B51A,
                0x52215,
                0x5940C,
                0x60A68,
                0x68470,
                0x70153,
                0x7802A,
                0x80000,
                0x87FD5,
                0x8FEAC,
                0x97B8F,
                0x9F597,
                0xA6BF3,
                0xADDEA,
                0xB4AE5,
                0xBB26A,
                0xC1421,
                0xC6FD1,
                0xCC55F,
                0xD14C8,
                0xD5E23,
                0xDA199,
                0xDDF60,
                0xE17BE,
                0xE4AFE,
                0xE7972,
                0xEA36F,
                0xEC948,
                0xEEB54,
                0xF09E2,
                0xF2542,
                0xF3DBE,
                0xF539B,
                0xF671B,
                0xF787A,
                0xF87EF,
                0xF95AD,
                0xFA1E2,
                0xFACB7,
                0xFB654,
                0xFBED8,
                0xFC665,
                0xFCD14,
                0xFD2FF,
                0xFD83B,
                0xFDCDD,
                0xFE0F6,
                0xFE496,
                0xFE7C9,
                0xFEA9E,
                0xFED1E,
                0xFEF54,
                0xFF147,
                0xFF301,
                0xFF487,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_44_20))
    #if (defined(TINYMIND_USE_SIGMOID_45_19))
    const uint64_t SigmoidValuesTableQ45_19::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x510,
                0x5BC,
                0x67F,
                0x75C,
                0x855,
                0x970,
                0xAB0,
                0xC1B,
                0xDB4,
                0xF84,
                0x1191,
                0x13E2,
                0x1680,
                0x1975,
                0x1CCD,
                0x2093,
                0x24D5,
                0x29A4,
                0x2F0E,
                0x3529,
                0x3C08,
                0x43C2,
                0x4C72,
                0x5632,
                0x6120,
                0x6D5E,
                0x7B0E,
                0x8A55,
                0x9B5B,
                0xAE48,
                0xC346,
                0xDA80,
                0xF420,
                0x1104F,
                0x12F33,
                0x150EE,
                0x1759B,
                0x19D50,
                0x1C817,
                0x1F5EF,
                0x226CA,
                0x25A8D,
                0x2910A,
                0x2CA06,
                0x30534,
                0x34238,
                0x380A9,
                0x3C015,
                0x40000,
                0x43FEA,
                0x47F56,
                0x4BDC7,
                0x4FACB,
                0x535F9,
                0x56EF5,
                0x5A572,
                0x5D935,
                0x60A10,
                0x637E8,
                0x662AF,
                0x68A64,
                0x6AF11,
                0x6D0CC,
                0x6EFB0,
                0x70BDF,
                0x7257F,
                0x73CB9,
                0x751B7,
                0x764A4,
                0x775AA,
                0x784F1,
                0x792A1,
                0x79EDF,
                0x7A9CD,
                0x7B38D,
                0x7BC3D,
                0x7C3F7,
                0x7CAD6,
                0x7D0F1,
                0x7D65B,
                0x7DB2A,
                0x7DF6C,
                0x7E332,
                0x7E68A,
                0x7E97F,
                0x7EC1D,
                0x7EE6E,
                0x7F07B,
                0x7F24B,
                0x7F3E4,
                0x7F54F,
                0x7F68F,
                0x7F7AA,
                0x7F8A3,
                0x7F980,
                0x7FA43,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_45_19))
    #if (defined(TINYMIND_USE_SIGMOID_46_18))
    const uint64_t SigmoidValuesTableQ46_18::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x288,
                0x2DE,
                0x33F,
                0x3AE,
                0x42A,
                0x4B8,
                0x558,
                0x60D,
                0x6DA,
                0x7C2,
                0x8C8,
                0x9F1,
                0xB40,
                0xCBA,
                0xE66,
                0x1049,
                0x126A,
                0x14D2,
                0x1787,
                0x1A94,
                0x1E04,
                0x21E1,
                0x2639,
                0x2B19,
                0x3090,
                0x36AF,
                0x3D87,
                0x452A,
                0x4DAD,
                0x5724,
                0x61A3,
                0x6D40,
                0x7A10,
                0x8827,
                0x9799,
                0xA877,
                0xBACD,
                0xCEA8,
                0xE40B,
                0xFAF7,
                0x11365,
                0x12D46,
                0x14885,
                0x16503,
                0x1829A,
                0x1A11C,
                0x1C054,
                0x1E00A,
                0x20000,
                0x21FF5,
                0x23FAB,
                0x25EE3,
                0x27D65,
                0x29AFC,
                0x2B77A,
                0x2D2B9,
                0x2EC9A,
                0x30508,
                0x31BF4,
                0x33157,
                0x34532,
                0x35788,
                0x36866,
                0x377D8,
                0x385EF,
                0x392BF,
                0x39E5C,
                0x3A8DB,
                0x3B252,
                0x3BAD5,
                0x3C278,
                0x3C950,
                0x3CF6F,
                0x3D4E6,
                0x3D9C6,
                0x3DE1E,
                0x3E1FB,
                0x3E56B,
                0x3E878,
                0x3EB2D,
                0x3ED95,
                0x3EFB6,
                0x3F199,
                0x3F345,
                0x3F4BF,
                0x3F60E,
                0x3F737,
                0x3F83D,
                0x3F925,
                0x3F9F2,
                0x3FAA7,
                0x3FB47,
                0x3FBD5,
                0x3FC51,
                0x3FCC0,
                0x3FD21,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_46_18))
    #if (defined(TINYMIND_USE_SIGMOID_47_17))
    const uint64_t SigmoidValuesTableQ47_17::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144,
                0x16F,
                0x19F,
                0x1D7,
                0x215,
                0x25C,
                0x2AC,
                0x306,
                0x36D,
                0x3E1,
                0x464,
                0x4F8,
                0x5A0,
                0x65D,
                0x733,
                0x824,
                0x935,
                0xA69,
                0xBC3,
                0xD4A,
                0xF02,
                0x10F0,
                0x131C,
                0x158C,
                0x1848,
                0x1B57,
                0x1EC3,
                0x2295,
                0x26D6,
                0x2B92,
                0x30D1,
                0x36A0,
                0x3D08,
                0x4413,
                0x4BCC,
                0x543B,
                0x5D66,
                0x6754,
                0x7205,
                0x7D7B,
                0x89B2,
                0x96A3,
                0xA442,
                0xB281,
                0xC14D,
                0xD08E,
                0xE02A,
                0xF005,
                0x10000,
                0x10FFA,
                0x11FD5,
                0x12F71,
                0x13EB2,
                0x14D7E,
                0x15BBD,
                0x1695C,
                0x1764D,
                0x18284,
                0x18DFA,
                0x198AB,
                0x1A299,
                0x1ABC4,
                0x1B433,
                0x1BBEC,
                0x1C2F7,
                0x1C95F,
                0x1CF2E,
                0x1D46D,
                0x1D929,
                0x1DD6A,
                0x1E13C,
                0x1E4A8,
                0x1E7B7,
                0x1EA73,
                0x1ECE3,
                0x1EF0F,
                0x1F0FD,
                0x1F2B5,
                0x1F43C,
                0x1F596,
                0x1F6CA,
                0x1F7DB,
                0x1F8CC,
                0x1F9A2,
                0x1FA5F,
                0x1FB07,
                0x1FB9B,
                0x1FC1E,
                0x1FC92,
                0x1FCF9,
                0x1FD53,
                0x1FDA3,
                0x1FDEA,
                0x1FE28,
                0x1FE60,
                0x1FE90,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_47_17))
    #if (defined(TINYMIND_USE_SIGMOID_48_16))
    const uint64_t SigmoidValuesTableQ48_16::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA2,
                0xB7,
                0xCF,
                0xEB,
                0x10A,
                0x12E,
                0x156,
                0x183,
                0x1B6,
                0x1F0,
                0x232,
                0x27C,
                0x2D0,
                0x32E,
                0x399,
                0x412,
                0x49A,
                0x534,
                0x5E1,
                0x6A5,
                0x781,
                0x878,
                0x98E,
                0xAC6,
                0xC24,
                0xDAB,
                0xF61,
                0x114A,
                0x136B,
                0x15C9,
                0x1868,
                0x1B50,
                0x1E84,
                0x2209,
                0x25E6,
                0x2A1D,
                0x2EB3,
                0x33AA,
                0x3902,
                0x3EBD,
                0x44D9,
                0x4B51,
                0x5221,
                0x5940,
                0x60A6,
                0x6847,
                0x7015,
                0x7802,
                0x8000,
                0x87FD,
                0x8FEA,
                0x97B8,
                0x9F59,
                0xA6BF,
                0xADDE,
                0xB4AE,
                0xBB26,
                0xC142,
                0xC6FD,
                0xCC55,
                0xD14C,
                0xD5E2,
                0xDA19,
                0xDDF6,
                0xE17B,
                0xE4AF,
                0xE797,
                0xEA36,
                0xEC94,
                0xEEB5,
                0xF09E,
                0xF254,
                0xF3DB,
                0xF539,
                0xF671,
                0xF787,
                0xF87E,
                0xF95A,
                0xFA1E,
                0xFACB,
                0xFB65,
                0xFBED,
                0xFC66,
                0xFCD1,
                0xFD2F,
                0xFD83,
                0xFDCD,
                0xFE0F,
                0xFE49,
                0xFE7C,
                0xFEA9,
                0xFED1,
                0xFEF5,
                0xFF14,
                0xFF30,
                0xFF48,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_48_16))
    #if (defined(TINYMIND_USE_SIGMOID_49_15))
    const uint64_t SigmoidValuesTableQ49_15::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x51,
                0x5B,
                0x67,
                0x75,
                0x85,
                0x97,
                0xAB,
                0xC1,
                0xDB,
                0xF8,
                0x119,
                0x13E,
                0x168,
                0x197,
                0x1CC,
                0x209,
                0x24D,
                0x29A,
                0x2F0,
                0x352,
                0x3C0,
                0x43C,
                0x4C7,
                0x563,
                0x612,
                0x6D5,
                0x7B0,
                0x8A5,
                0x9B5,
                0xAE4,
                0xC34,
                0xDA8,
                0xF42,
                0x1104,
                0x12F3,
                0x150E,
                0x1759,
                0x19D5,
                0x1C81,
                0x1F5E,
                0x226C,
                0x25A8,
                0x2910,
                0x2CA0,
                0x3053,
                0x3423,
                0x380A,
                0x3C01,
                0x4000,
                0x43FE,
                0x47F5,
                0x4BDC,
                0x4FAC,
                0x535F,
                0x56EF,
                0x5A57,
                0x5D93,
                0x60A1,
                0x637E,
                0x662A,
                0x68A6,
                0x6AF1,
                0x6D0C,
                0x6EFB,
                0x70BD,
                0x7257,
                0x73CB,
                0x751B,
                0x764A,
                0x775A,
                0x784F,
                0x792A,
                0x79ED,
                0x7A9C,
                0x7B38,
                0x7BC3,
                0x7C3F,
                0x7CAD,
                0x7D0F,
                0x7D65,
                0x7DB2,
                0x7DF6,
                0x7E33,
                0x7E68,
                0x7E97,
                0x7EC1,
                0x7EE6,
                0x7F07,
                0x7F24,
                0x7F3E,
                0x7F54,
                0x7F68,
                0x7F7A,
                0x7F8A,
                0x7F98,
                0x7FA4,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_49_15))
    #if (defined(TINYMIND_USE_SIGMOID_50_14))
    const uint64_t SigmoidValuesTableQ50_14::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x28,
                0x2D,
                0x33,
                0x3A,
                0x42,
                0x4B,
                0x55,
                0x60,
                0x6D,
                0x7C,
                0x8C,
                0x9F,
                0xB4,
                0xCB,
                0xE6,
                0x104,
                0x126,
                0x14D,
                0x178,
                0x1A9,
                0x1E0,
                0x21E,
                0x263,
                0x2B1,
                0x309,
                0x36A,
                0x3D8,
                0x452,
                0x4DA,
                0x572,
                0x61A,
                0x6D4,
                0x7A1,
                0x882,
                0x979,
                0xA87,
                0xBAC,
                0xCEA,
                0xE40,
                0xFAF,
                0x1136,
                0x12D4,
                0x1488,
                0x1650,
                0x1829,
                0x1A11,
                0x1C05,
                0x1E00,
                0x2000,
                0x21FF,
                0x23FA,
                0x25EE,
                0x27D6,
                0x29AF,
                0x2B77,
                0x2D2B,
                0x2EC9,
                0x3050,
                0x31BF,
                0x3315,
                0x3453,
                0x3578,
                0x3686,
                0x377D,
                0x385E,
                0x392B,
                0x39E5,
                0x3A8D,
                0x3B25,
                0x3BAD,
                0x3C27,
                0x3C95,
                0x3CF6,
                0x3D4E,
                0x3D9C,
                0x3DE1,
                0x3E1F,
                0x3E56,
                0x3E87,
                0x3EB2,
                0x3ED9,
                0x3EFB,
                0x3F19,
                0x3F34,
                0x3F4B,
                0x3F60,
                0x3F73,
                0x3F83,
                0x3F92,
                0x3F9F,
                0x3FAA,
                0x3FB4,
                0x3FBD,
                0x3FC5,
                0x3FCC,
                0x3FD2,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_50_14))
    #if (defined(TINYMIND_USE_SIGMOID_51_13))
    const uint64_t SigmoidValuesTableQ51_13::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14,
                0x16,
                0x19,
                0x1D,
                0x21,
                0x25,
                0x2A,
                0x30,
                0x36,
                0x3E,
                0x46,
                0x4F,
                0x5A,
                0x65,
                0x73,
                0x82,
                0x93,
                0xA6,
                0xBC,
                0xD4,
                0xF0,
                0x10F,
                0x131,
                0x158,
                0x184,
                0x1B5,
                0x1EC,
                0x229,
                0x26D,
                0x2B9,
                0x30D,
                0x36A,
                0x3D0,
                0x441,
                0x4BC,
                0x543,
                0x5D6,
                0x675,
                0x720,
                0x7D7,
                0x89B,
                0x96A,
                0xA44,
                0xB28,
                0xC14,
                0xD08,
                0xE02,
                0xF00,
                0x1000,
                0x10FF,
                0x11FD,
                0x12F7,
                0x13EB,
                0x14D7,
                0x15BB,
                0x1695,
                0x1764,
                0x1828,
                0x18DF,
                0x198A,
                0x1A29,
                0x1ABC,
                0x1B43,
                0x1BBE,
                0x1C2F,
                0x1C95,
                0x1CF2,
                0x1D46,
                0x1D92,
                0x1DD6,
                0x1E13,
                0x1E4A,
                0x1E7B,
                0x1EA7,
                0x1ECE,
                0x1EF0,
                0x1F0F,
                0x1F2B,
                0x1F43,
                0x1F59,
                0x1F6C,
                0x1F7D,
                0x1F8C,
                0x1F9A,
                0x1FA5,
                0x1FB0,
                0x1FB9,
                0x1FC1,
                0x1FC9,
                0x1FCF,
                0x1FD5,
                0x1FDA,
                0x1FDE,
                0x1FE2,
                0x1FE6,
                0x1FE9,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_51_13))
    #if (defined(TINYMIND_USE_SIGMOID_52_12))
    const uint64_t SigmoidValuesTableQ52_12::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x15,
                0x18,
                0x1B,
                0x1F,
                0x23,
                0x27,
                0x2D,
                0x32,
                0x39,
                0x41,
                0x49,
                0x53,
                0x5E,
                0x6A,
                0x78,
                0x87,
                0x98,
                0xAC,
                0xC2,
                0xDA,
                0xF6,
                0x114,
                0x136,
                0x15C,
                0x186,
                0x1B5,
                0x1E8,
                0x220,
                0x25E,
                0x2A1,
                0x2EB,
                0x33A,
                0x390,
                0x3EB,
                0x44D,
                0x4B5,
                0x522,
                0x594,
                0x60A,
                0x684,
                0x701,
                0x780,
                0x800,
                0x87F,
                0x8FE,
                0x97B,
                0x9F5,
                0xA6B,
                0xADD,
                0xB4A,
                0xBB2,
                0xC14,
                0xC6F,
                0xCC5,
                0xD14,
                0xD5E,
                0xDA1,
                0xDDF,
                0xE17,
                0xE4A,
                0xE79,
                0xEA3,
                0xEC9,
                0xEEB,
                0xF09,
                0xF25,
                0xF3D,
                0xF53,
                0xF67,
                0xF78,
                0xF87,
                0xF95,
                0xFA1,
                0xFAC,
                0xFB6,
                0xFBE,
                0xFC6,
                0xFCD,
                0xFD2,
                0xFD8,
                0xFDC,
                0xFE0,
                0xFE4,
                0xFE7,
                0xFEA,
                0xFED,
                0xFEF,
                0xFF1,
                0xFF3,
                0xFF4,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_52_12))
    #if (defined(TINYMIND_USE_SIGMOID_53_11))
    const uint64_t SigmoidValuesTableQ53_11::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x13,
                0x16,
                0x19,
                0x1C,
                0x20,
                0x24,
                0x29,
                0x2F,
                0x35,
                0x3C,
                0x43,
                0x4C,
                0x56,
                0x61,
                0x6D,
                0x7B,
                0x8A,
                0x9B,
                0xAE,
                0xC3,
                0xDA,
                0xF4,
                0x110,
                0x12F,
                0x150,
                0x175,
                0x19D,
                0x1C8,
                0x1F5,
                0x226,
                0x25A,
                0x291,
                0x2CA,
                0x305,
                0x342,
                0x380,
                0x3C0,
                0x400,
                0x43F,
                0x47F,
                0x4BD,
                0x4FA,
                0x535,
                0x56E,
                0x5A5,
                0x5D9,
                0x60A,
                0x637,
                0x662,
                0x68A,
                0x6AF,
                0x6D0,
                0x6EF,
                0x70B,
                0x725,
                0x73C,
                0x751,
                0x764,
                0x775,
                0x784,
                0x792,
                0x79E,
                0x7A9,
                0x7B3,
                0x7BC,
                0x7C3,
                0x7CA,
                0x7D0,
                0x7D6,
                0x7DB,
                0x7DF,
                0x7E3,
                0x7E6,
                0x7E9,
                0x7EC,
                0x7EE,
                0x7F0,
                0x7F2,
                0x7F3,
                0x7F5,
                0x7F6,
                0x7F7,
                0x7F8,
                0x7F9,
                0x7FA,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_53_11))
    #if (defined(TINYMIND_USE_SIGMOID_54_10))
    const uint64_t SigmoidValuesTableQ54_10::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0x9,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x14,
                0x17,
                0x1A,
                0x1E,
                0x21,
                0x26,
                0x2B,
                0x30,
                0x36,
                0x3D,
                0x45,
                0x4D,
                0x57,
                0x61,
                0x6D,
                0x7A,
                0x88,
                0x97,
                0xA8,
                0xBA,
                0xCE,
                0xE4,
                0xFA,
                0x113,
                0x12D,
                0x148,
                0x165,
                0x182,
                0x1A1,
                0x1C0,
                0x1E0,
                0x200,
                0x21F,
                0x23F,
                0x25E,
                0x27D,
                0x29A,
                0x2B7,
                0x2D2,
                0x2EC,
                0x305,
                0x31B,
                0x331,
                0x345,
                0x357,
                0x368,
                0x377,
                0x385,
                0x392,
                0x39E,
                0x3A8,
                0x3B2,
                0x3BA,
                0x3C2,
                0x3C9,
                0x3CF,
                0x3D4,
                0x3D9,
                0x3DE,
                0x3E1,
                0x3E5,
                0x3E8,
                0x3EB,
                0x3ED,
                0x3EF,
                0x3F1,
                0x3F3,
                0x3F4,
                0x3F6,
                0x3F7,
                0x3F8,
                0x3F9,
                0x3F9,
                0x3FA,
                0x3FB,
                0x3FB,
                0x3FC,
                0x3FC,
                0x3FD,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_54_10))
    #if (defined(TINYMIND_USE_SIGMOID_55_9))
    const uint64_t SigmoidValuesTableQ55_9::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xF,
                0x10,
                0x13,
                0x15,
                0x18,
                0x1B,
                0x1E,
                0x22,
                0x26,
                0x2B,
                0x30,
                0x36,
                0x3D,
                0x44,
                0x4B,
                0x54,
                0x5D,
                0x67,
                0x72,
                0x7D,
                0x89,
                0x96,
                0xA4,
                0xB2,
                0xC1,
                0xD0,
                0xE0,
                0xF0,
                0x100,
                0x10F,
                0x11F,
                0x12F,
                0x13E,
                0x14D,
                0x15B,
                0x169,
                0x176,
                0x182,
                0x18D,
                0x198,
                0x1A2,
                0x1AB,
                0x1B4,
                0x1BB,
                0x1C2,
                0x1C9,
                0x1CF,
                0x1D4,
                0x1D9,
                0x1DD,
                0x1E1,
                0x1E4,
                0x1E7,
                0x1EA,
                0x1EC,
                0x1EF,
                0x1F0,
                0x1F2,
                0x1F4,
                0x1F5,
                0x1F6,
                0x1F7,
                0x1F8,
                0x1F9,
                0x1FA,
                0x1FB,
                0x1FB,
                0x1FC,
                0x1FC,
                0x1FC,
                0x1FD,
                0x1FD,
                0x1FD,
                0x1FE,
                0x1FE,
                0x1FE,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_55_9))
    #if (defined(TINYMIND_USE_SIGMOID_56_8))
    const uint64_t SigmoidValuesTableQ56_8::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x13,
                0x15,
                0x18,
                0x1B,
                0x1E,
                0x22,
                0x25,
                0x2A,
                0x2E,
                0x33,
                0x39,
                0x3E,
                0x44,
                0x4B,
                0x52,
                0x59,
                0x60,
                0x68,
                0x70,
                0x78,
                0x80,
                0x87,
                0x8F,
                0x97,
                0x9F,
                0xA6,
                0xAD,
                0xB4,
                0xBB,
                0xC1,
                0xC6,
                0xCC,
                0xD1,
                0xD5,
                0xDA,
                0xDD,
                0xE1,
                0xE4,
                0xE7,
                0xEA,
                0xEC,
                0xEE,
                0xF0,
                0xF2,
                0xF3,
                0xF5,
                0xF6,
                0xF7,
                0xF8,
                0xF9,
                0xFA,
                0xFA,
                0xFB,
                0xFB,
                0xFC,
                0xFC,
                0xFD,
                0xFD,
                0xFD,
                0xFE,
                0xFE,
                0xFE,
                0xFE,
                0xFE,
                0xFE,
                0xFF,
                0xFF,
                0xFF,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_56_8))
    #if (defined(TINYMIND_USE_SIGMOID_57_7))
    const uint64_t SigmoidValuesTableQ57_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x12,
                0x15,
                0x17,
                0x19,
                0x1C,
                0x1F,
                0x22,
                0x25,
                0x29,
                0x2C,
                0x30,
                0x34,
                0x38,
                0x3C,
                0x40,
                0x43,
                0x47,
                0x4B,
                0x4F,
                0x53,
                0x56,
                0x5A,
                0x5D,
                0x60,
                0x63,
                0x66,
                0x68,
                0x6A,
                0x6D,
                0x6E,
                0x70,
                0x72,
                0x73,
                0x75,
                0x76,
                0x77,
                0x78,
                0x79,
                0x79,
                0x7A,
                0x7B,
                0x7B,
                0x7C,
                0x7C,
                0x7D,
                0x7D,
                0x7D,
                0x7D,
                0x7E,
                0x7E,
                0x7E,
                0x7E,
                0x7E,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
                0x7F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_57_7))
    #if (defined(TINYMIND_USE_SIGMOID_58_6))
    const uint64_t SigmoidValuesTableQ58_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xC,
                0xE,
                0xF,
                0x11,
                0x12,
                0x14,
                0x16,
                0x18,
                0x1A,
                0x1C,
                0x1E,
                0x20,
                0x21,
                0x23,
                0x25,
                0x27,
                0x29,
                0x2B,
                0x2D,
                0x2E,
                0x30,
                0x31,
                0x33,
                0x34,
                0x35,
                0x36,
                0x37,
                0x38,
                0x39,
                0x39,
                0x3A,
                0x3B,
                0x3B,
                0x3C,
                0x3C,
                0x3C,
                0x3D,
                0x3D,
                0x3D,
                0x3E,
                0x3E,
                0x3E,
                0x3E,
                0x3E,
                0x3E,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
                0x3F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_58_6))
    #if (defined(TINYMIND_USE_SIGMOID_59_5))
    const uint64_t SigmoidValuesTableQ59_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xC,
                0xD,
                0xE,
                0xF,
                0x10,
                0x10,
                0x11,
                0x12,
                0x13,
                0x14,
                0x15,
                0x16,
                0x17,
                0x18,
                0x18,
                0x19,
                0x1A,
                0x1A,
                0x1B,
                0x1B,
                0x1C,
                0x1C,
                0x1C,
                0x1D,
                0x1D,
                0x1D,
                0x1E,
                0x1E,
                0x1E,
                0x1E,
                0x1E,
                0x1E,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
                0x1F,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_59_5))
    #if (defined(TINYMIND_USE_SIGMOID_60_4))
    const uint64_t SigmoidValuesTableQ60_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x6,
                0x7,
                0x7,
                0x8,
                0x8,
                0x8,
                0x9,
                0x9,
                0xA,
                0xA,
                0xB,
                0xB,
                0xC,
                0xC,
                0xC,
                0xD,
                0xD,
                0xD,
                0xD,
                0xE,
                0xE,
                0xE,
                0xE,
                0xE,
                0xE,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
                0xF,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_60_4))
    #if (defined(TINYMIND_USE_SIGMOID_61_3))
    const uint64_t SigmoidValuesTableQ61_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x4,
                0x4,
                0x4,
                0x5,
                0x5,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
                0x7,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_61_3))
    #if (defined(TINYMIND_USE_SIGMOID_62_2))
    const uint64_t SigmoidValuesTableQ62_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_62_2))
    #if (defined(TINYMIND_USE_SIGMOID_63_1))
    const uint64_t SigmoidValuesTableQ63_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
    };
    #endif // (defined(TINYMIND_USE_SIGMOID_63_1))
    #if (defined(TINYMIND_USE_EXP_1_7))
    const uint8_t ExpValuesTableQ1_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xF,
                0x11,
                0x13,
                0x16,
                0x19,
                0x1C,
                0x20,
                0x24,
                0x29,
                0x2F,
                0x35,
                0x3C,
                0x44,
                0x4D,
                0x57,
                0x63,
                0x70,
                0x80,
                0x91,
                0xA4,
                0xBA,
                0xD3,
                0xEF,
                0xE,
                0x33,
                0x5B,
                0x8A,
                0xBE,
                0xFA,
                0x3D,
                0x8A,
                0xE0,
                0x42,
                0xB1,
                0x2F,
                0xBE,
                0x60,
                0x17,
                0xE6,
                0xD2,
                0xDC,
                0xA,
                0x61,
                0xE5,
                0x9C,
                0x8E,
                0xC3,
                0x42,
                0x17,
                0x4C,
                0xEF,
                0xD,
                0xB8,
                0x2,
                0x0,
                0xCA,
                0x7C,
                0x34,
                0x16,
                0x48,
                0xF8,
                0x58,
                0xA2,
                0x18,
                0x3,
    };
    #endif // (defined(TINYMIND_USE_EXP_1_7))
    #if (defined(TINYMIND_USE_EXP_2_6))
    const uint8_t ExpValuesTableQ2_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x14,
                0x17,
                0x1A,
                0x1E,
                0x22,
                0x26,
                0x2B,
                0x31,
                0x38,
                0x40,
                0x48,
                0x52,
                0x5D,
                0x69,
                0x77,
                0x87,
                0x99,
                0xAD,
                0xC5,
                0xDF,
                0xFD,
                0x1E,
                0x45,
                0x70,
                0xA1,
                0xD8,
                0x17,
                0x5F,
                0xB0,
                0xB,
                0x73,
                0xE9,
                0x6E,
                0x5,
                0xB0,
                0x72,
                0x4E,
                0x47,
                0x61,
                0xA1,
                0xB,
                0xA6,
                0x77,
                0x86,
                0xDC,
                0x81,
                0x80,
                0xE5,
                0xBE,
                0x1A,
                0xB,
                0xA4,
                0xFC,
                0x2C,
                0x51,
                0x8C,
                0x1,
    };
    #endif // (defined(TINYMIND_USE_EXP_2_6))
    #if (defined(TINYMIND_USE_EXP_3_5))
    const uint8_t ExpValuesTableQ3_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xF,
                0x11,
                0x13,
                0x15,
                0x18,
                0x1C,
                0x20,
                0x24,
                0x29,
                0x2E,
                0x34,
                0x3B,
                0x43,
                0x4C,
                0x56,
                0x62,
                0x6F,
                0x7E,
                0x8F,
                0xA2,
                0xB8,
                0xD0,
                0xEC,
                0xB,
                0x2F,
                0x58,
                0x85,
                0xB9,
                0xF4,
                0x37,
                0x82,
                0xD8,
                0x39,
                0xA7,
                0x23,
                0xB0,
                0x50,
                0x5,
                0xD3,
                0xBB,
                0xC3,
                0xEE,
                0x40,
                0xC0,
                0x72,
                0x5F,
                0x8D,
                0x5,
                0xD2,
                0xFE,
                0x96,
                0xA8,
                0x46,
                0x80,
    };
    #endif // (defined(TINYMIND_USE_EXP_3_5))
    #if (defined(TINYMIND_USE_EXP_4_4))
    const uint8_t ExpValuesTableQ4_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xE,
                0x10,
                0x12,
                0x14,
                0x17,
                0x1A,
                0x1D,
                0x21,
                0x26,
                0x2B,
                0x31,
                0x37,
                0x3F,
                0x47,
                0x51,
                0x5C,
                0x68,
                0x76,
                0x85,
                0x97,
                0xAC,
                0xC2,
                0xDC,
                0xFA,
                0x1B,
                0x41,
                0x6C,
                0x9C,
                0xD3,
                0x11,
                0x58,
                0xA8,
                0x2,
                0x69,
                0xDD,
                0x61,
                0xF7,
                0xA0,
                0x60,
                0x39,
                0x2F,
                0x46,
                0x82,
                0xE9,
                0x7F,
                0x4B,
                0x54,
                0xA3,
                0x40,
    };
    #endif // (defined(TINYMIND_USE_EXP_4_4))
    #if (defined(TINYMIND_USE_EXP_5_3))
    const uint8_t ExpValuesTableQ5_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xE,
                0x10,
                0x13,
                0x15,
                0x18,
                0x1B,
                0x1F,
                0x23,
                0x28,
                0x2E,
                0x34,
                0x3B,
                0x42,
                0x4B,
                0x56,
                0x61,
                0x6E,
                0x7D,
                0x8D,
                0xA0,
                0xB6,
                0xCE,
                0xE9,
                0x8,
                0x2C,
                0x54,
                0x81,
                0xB4,
                0xEE,
                0x30,
                0x7B,
                0xD0,
                0x30,
                0x9C,
                0x17,
                0xA3,
                0x41,
                0xF4,
                0xBF,
                0xA5,
                0xAA,
                0xD1,
                0x20,
    };
    #endif // (defined(TINYMIND_USE_EXP_5_3))
    #if (defined(TINYMIND_USE_EXP_6_2))
    const uint8_t ExpValuesTableQ6_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x14,
                0x17,
                0x1A,
                0x1D,
                0x21,
                0x25,
                0x2B,
                0x30,
                0x37,
                0x3E,
                0x46,
                0x50,
                0x5B,
                0x67,
                0x74,
                0x84,
                0x96,
                0xAA,
                0xC0,
                0xDA,
                0xF7,
                0x18,
                0x3D,
                0x68,
                0x98,
                0xCE,
                0xB,
                0x51,
                0xA0,
                0xFA,
                0x5F,
                0xD2,
                0x55,
                0xE8,
                0x90,
    };
    #endif // (defined(TINYMIND_USE_EXP_6_2))
    #if (defined(TINYMIND_USE_EXP_7_1))
    const uint8_t ExpValuesTableQ7_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0xA,
                0xB,
                0xD,
                0xE,
                0x10,
                0x12,
                0x15,
                0x18,
                0x1B,
                0x1F,
                0x23,
                0x28,
                0x2D,
                0x33,
                0x3A,
                0x42,
                0x4B,
                0x55,
                0x60,
                0x6D,
                0x7B,
                0x8C,
                0x9E,
                0xB4,
                0xCC,
                0xE7,
                0x5,
                0x28,
                0x50,
                0x7D,
                0xAF,
                0xE9,
                0x2A,
                0x74,
                0xC8,
    };
    #endif // (defined(TINYMIND_USE_EXP_7_1))
    #if (defined(TINYMIND_USE_EXP_1_15))
    const uint16_t ExpValuesTableQ1_15::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x51,
                0x5C,
                0x68,
                0x76,
                0x85,
                0x97,
                0xAB,
                0xC2,
                0xDC,
                0xFA,
                0x11B,
                0x141,
                0x16C,
                0x19C,
                0x1D3,
                0x211,
                0x258,
                0x2A8,
                0x302,
                0x369,
                0x3DD,
                0x461,
                0x4F6,
                0x59F,
                0x65F,
                0x738,
                0x82E,
                0x945,
                0xA81,
                0xBE7,
                0xD7D,
                0xF49,
                0x1152,
                0x13A1,
                0x163E,
                0x1934,
                0x1C8F,
                0x205D,
                0x24AC,
                0x298E,
                0x2F16,
                0x355B,
                0x3C76,
                0x4483,
                0x4DA2,
                0x57F9,
                0x63AF,
                0x70F5,
                0x8000,
                0x910B,
                0xA45A,
                0xBA3D,
                0xD309,
                0xEF22,
                0xEF9,
                0x330E,
                0x5BF0,
                0x8A44,
                0xBEC3,
                0xFA3F,
                0x3DA7,
                0x8A09,
                0xE096,
                0x42AA,
                0xB1CC,
                0x2FBB,
                0xBE6E,
                0x6021,
                0x175B,
                0xE6FC,
                0xD241,
                0xDCDA,
                0xAF2,
                0x6144,
                0xE529,
                0x9CB5,
                0x8EC7,
                0xC32A,
                0x42B2,
                0x1762,
                0x4C90,
                0xEF14,
                0xD7E,
                0xB84C,
                0x231,
                0x5A,
                0xCAC9,
                0x7CB1,
                0x34E2,
                0x164A,
                0x487B,
                0xF84D,
                0x5891,
                0xA2DA,
                0x1867,
                0x328,
    };
    #endif // (defined(TINYMIND_USE_EXP_1_15))
    #if (defined(TINYMIND_USE_EXP_2_14))
    const uint16_t ExpValuesTableQ2_14::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x28,
                0x2E,
                0x34,
                0x3B,
                0x42,
                0x4B,
                0x55,
                0x61,
                0x6E,
                0x7D,
                0x8D,
                0xA0,
                0xB6,
                0xCE,
                0xE9,
                0x108,
                0x12C,
                0x154,
                0x181,
                0x1B4,
                0x1EE,
                0x230,
                0x27B,
                0x2CF,
                0x32F,
                0x39C,
                0x417,
                0x4A2,
                0x540,
                0x5F3,
                0x6BE,
                0x7A4,
                0x8A9,
                0x9D0,
                0xB1F,
                0xC9A,
                0xE47,
                0x102E,
                0x1256,
                0x14C7,
                0x178B,
                0x1AAD,
                0x1E3B,
                0x2241,
                0x26D1,
                0x2BFC,
                0x31D7,
                0x387A,
                0x4000,
                0x4885,
                0x522D,
                0x5D1E,
                0x6984,
                0x7791,
                0x877C,
                0x9987,
                0xADF8,
                0xC522,
                0xDF61,
                0xFD1F,
                0x1ED3,
                0x4504,
                0x704B,
                0xA155,
                0xD8E6,
                0x17DD,
                0x5F37,
                0xB010,
                0xBAD,
                0x737E,
                0xE920,
                0x6E6D,
                0x579,
                0xB0A2,
                0x7294,
                0x4E5A,
                0x4763,
                0x6195,
                0xA159,
                0xBB1,
                0xA648,
                0x778A,
                0x86BF,
                0xDC26,
                0x8118,
                0x802D,
                0xE564,
                0xBE58,
                0x1A71,
                0xB25,
                0xA43D,
                0xFC26,
                0x2C48,
                0x516D,
                0x8C33,
                0x194,
    };
    #endif // (defined(TINYMIND_USE_EXP_2_14))
    #if (defined(TINYMIND_USE_EXP_3_13))
    const uint16_t ExpValuesTableQ3_13::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14,
                0x17,
                0x1A,
                0x1D,
                0x21,
                0x25,
                0x2A,
                0x30,
                0x37,
                0x3E,
                0x46,
                0x50,
                0x5B,
                0x67,
                0x74,
                0x84,
                0x96,
                0xAA,
                0xC0,
                0xDA,
                0xF7,
                0x118,
                0x13D,
                0x167,
                0x197,
                0x1CE,
                0x20B,
                0x251,
                0x2A0,
                0x2F9,
                0x35F,
                0x3D2,
                0x454,
                0x4E8,
                0x58F,
                0x64D,
                0x723,
                0x817,
                0x92B,
                0xA63,
                0xBC5,
                0xD56,
                0xF1D,
                0x1120,
                0x1368,
                0x15FE,
                0x18EB,
                0x1C3D,
                0x2000,
                0x2442,
                0x2916,
                0x2E8F,
                0x34C2,
                0x3BC8,
                0x43BE,
                0x4CC3,
                0x56FC,
                0x6291,
                0x6FB0,
                0x7E8F,
                0x8F69,
                0xA282,
                0xB825,
                0xD0AA,
                0xEC73,
                0xBEE,
                0x2F9B,
                0x5808,
                0x85D6,
                0xB9BF,
                0xF490,
                0x3736,
                0x82BC,
                0xD851,
                0x394A,
                0xA72D,
                0x23B1,
                0xB0CA,
                0x50AC,
                0x5D8,
                0xD324,
                0xBBC5,
                0xC35F,
                0xEE13,
                0x408C,
                0xC016,
                0x72B2,
                0x5F2C,
                0x8D38,
                0x592,
                0xD21E,
                0xFE13,
                0x9624,
                0xA8B6,
                0x4619,
                0x80CA,
    };
    #endif // (defined(TINYMIND_USE_EXP_3_13))
    #if (defined(TINYMIND_USE_EXP_4_12))
    const uint16_t ExpValuesTableQ4_12::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA,
                0xB,
                0xD,
                0xE,
                0x10,
                0x12,
                0x15,
                0x18,
                0x1B,
                0x1F,
                0x23,
                0x28,
                0x2D,
                0x33,
                0x3A,
                0x42,
                0x4B,
                0x55,
                0x60,
                0x6D,
                0x7B,
                0x8C,
                0x9E,
                0xB3,
                0xCB,
                0xE7,
                0x105,
                0x128,
                0x150,
                0x17C,
                0x1AF,
                0x1E9,
                0x22A,
                0x274,
                0x2C7,
                0x326,
                0x391,
                0x40B,
                0x495,
                0x531,
                0x5E2,
                0x6AB,
                0x78E,
                0x890,
                0x9B4,
                0xAFF,
                0xC75,
                0xE1E,
                0x1000,
                0x1221,
                0x148B,
                0x1747,
                0x1A61,
                0x1DE4,
                0x21DF,
                0x2661,
                0x2B7E,
                0x3148,
                0x37D8,
                0x3F47,
                0x47B4,
                0x5141,
                0x5C12,
                0x6855,
                0x7639,
                0x85F7,
                0x97CD,
                0xAC04,
                0xC2EB,
                0xDCDF,
                0xFA48,
                0x1B9B,
                0x415E,
                0x6C28,
                0x9CA5,
                0xD396,
                0x11D8,
                0x5865,
                0xA856,
                0x2EC,
                0x6992,
                0xDDE2,
                0x61AF,
                0xF709,
                0xA046,
                0x600B,
                0x3959,
                0x2F96,
                0x469C,
                0x82C9,
                0xE90F,
                0x7F09,
                0x4B12,
                0x545B,
                0xA30C,
                0x4065,
    };
    #endif // (defined(TINYMIND_USE_EXP_4_12))
    #if (defined(TINYMIND_USE_EXP_5_11))
    const uint16_t ExpValuesTableQ5_11::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x14,
                0x16,
                0x19,
                0x1D,
                0x21,
                0x25,
                0x2A,
                0x30,
                0x36,
                0x3D,
                0x46,
                0x4F,
                0x59,
                0x65,
                0x73,
                0x82,
                0x94,
                0xA8,
                0xBE,
                0xD7,
                0xF4,
                0x115,
                0x13A,
                0x163,
                0x193,
                0x1C8,
                0x205,
                0x24A,
                0x298,
                0x2F1,
                0x355,
                0x3C7,
                0x448,
                0x4DA,
                0x57F,
                0x63A,
                0x70F,
                0x800,
                0x910,
                0xA45,
                0xBA3,
                0xD30,
                0xEF2,
                0x10EF,
                0x1330,
                0x15BF,
                0x18A4,
                0x1BEC,
                0x1FA3,
                0x23DA,
                0x28A0,
                0x2E09,
                0x342A,
                0x3B1C,
                0x42FB,
                0x4BE6,
                0x5602,
                0x6175,
                0x6E6F,
                0x7D24,
                0x8DCD,
                0xA0AF,
                0xB614,
                0xCE52,
                0xE9CB,
                0x8EC,
                0x2C32,
                0x542B,
                0x8176,
                0xB4C9,
                0xEEF1,
                0x30D7,
                0x7B84,
                0xD023,
                0x3005,
                0x9CAC,
                0x17CB,
                0xA34E,
                0x4164,
                0xF487,
                0xBF84,
                0xA589,
                0xAA2D,
                0xD186,
                0x2032,
    };
    #endif // (defined(TINYMIND_USE_EXP_5_11))
    #if (defined(TINYMIND_USE_EXP_6_10))
    const uint16_t ExpValuesTableQ6_10::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0xA,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x15,
                0x18,
                0x1B,
                0x1E,
                0x23,
                0x27,
                0x2C,
                0x32,
                0x39,
                0x41,
                0x4A,
                0x54,
                0x5F,
                0x6B,
                0x7A,
                0x8A,
                0x9D,
                0xB1,
                0xC9,
                0xE4,
                0x102,
                0x125,
                0x14C,
                0x178,
                0x1AA,
                0x1E3,
                0x224,
                0x26D,
                0x2BF,
                0x31D,
                0x387,
                0x400,
                0x488,
                0x522,
                0x5D1,
                0x698,
                0x779,
                0x877,
                0x998,
                0xADF,
                0xC52,
                0xDF6,
                0xFD1,
                0x11ED,
                0x1450,
                0x1704,
                0x1A15,
                0x1D8E,
                0x217D,
                0x25F3,
                0x2B01,
                0x30BA,
                0x3737,
                0x3E92,
                0x46E6,
                0x5057,
                0x5B0A,
                0x6729,
                0x74E5,
                0x8476,
                0x9619,
                0xAA15,
                0xC0BB,
                0xDA64,
                0xF778,
                0x186B,
                0x3DC2,
                0x6811,
                0x9802,
                0xCE56,
                0xBE5,
                0x51A7,
                0xA0B2,
                0xFA43,
                0x5FC2,
                0xD2C4,
                0x5516,
                0xE8C3,
                0x9019,
    };
    #endif // (defined(TINYMIND_USE_EXP_6_10))
    #if (defined(TINYMIND_USE_EXP_7_9))
    const uint16_t ExpValuesTableQ7_9::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x13,
                0x16,
                0x19,
                0x1C,
                0x20,
                0x25,
                0x2A,
                0x2F,
                0x35,
                0x3D,
                0x45,
                0x4E,
                0x58,
                0x64,
                0x72,
                0x81,
                0x92,
                0xA6,
                0xBC,
                0xD5,
                0xF1,
                0x112,
                0x136,
                0x15F,
                0x18E,
                0x1C3,
                0x200,
                0x244,
                0x291,
                0x2E8,
                0x34C,
                0x3BC,
                0x43B,
                0x4CC,
                0x56F,
                0x629,
                0x6FB,
                0x7E8,
                0x8F6,
                0xA28,
                0xB82,
                0xD0A,
                0xEC7,
                0x10BE,
                0x12F9,
                0x1580,
                0x185D,
                0x1B9B,
                0x1F49,
                0x2373,
                0x282B,
                0x2D85,
                0x3394,
                0x3A72,
                0x423B,
                0x4B0C,
                0x550A,
                0x605D,
                0x6D32,
                0x7BBC,
                0x8C35,
                0x9EE1,
                0xB408,
                0xCC01,
                0xE72B,
                0x5F2,
                0x28D3,
                0x5059,
                0x7D21,
                0xAFE1,
                0xE962,
                0x2A8B,
                0x7461,
                0xC80C,
    };
    #endif // (defined(TINYMIND_USE_EXP_7_9))
    #if (defined(TINYMIND_USE_EXP_8_8))
    const uint16_t ExpValuesTableQ8_8::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0x9,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x15,
                0x17,
                0x1A,
                0x1E,
                0x22,
                0x27,
                0x2C,
                0x32,
                0x39,
                0x40,
                0x49,
                0x53,
                0x5E,
                0x6A,
                0x78,
                0x89,
                0x9B,
                0xAF,
                0xC7,
                0xE1,
                0x100,
                0x122,
                0x148,
                0x174,
                0x1A6,
                0x1DE,
                0x21D,
                0x266,
                0x2B7,
                0x314,
                0x37D,
                0x3F4,
                0x47B,
                0x514,
                0x5C1,
                0x685,
                0x763,
                0x85F,
                0x97C,
                0xAC0,
                0xC2E,
                0xDCD,
                0xFA4,
                0x11B9,
                0x1415,
                0x16C2,
                0x19CA,
                0x1D39,
                0x211D,
                0x2586,
                0x2A85,
                0x302E,
                0x3699,
                0x3DDE,
                0x461A,
                0x4F70,
                0x5A04,
                0x6600,
                0x7395,
                0x82F9,
                0x9469,
                0xA82C,
                0xBE90,
                0xD7F0,
                0xF4B1,
                0x1545,
                0x3A30,
                0x6406,
    };
    #endif // (defined(TINYMIND_USE_EXP_8_8))
    #if (defined(TINYMIND_USE_EXP_9_7))
    const uint16_t ExpValuesTableQ9_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xF,
                0x11,
                0x13,
                0x16,
                0x19,
                0x1C,
                0x20,
                0x24,
                0x29,
                0x2F,
                0x35,
                0x3C,
                0x44,
                0x4D,
                0x57,
                0x63,
                0x70,
                0x80,
                0x91,
                0xA4,
                0xBA,
                0xD3,
                0xEF,
                0x10E,
                0x133,
                0x15B,
                0x18A,
                0x1BE,
                0x1FA,
                0x23D,
                0x28A,
                0x2E0,
                0x342,
                0x3B1,
                0x42F,
                0x4BE,
                0x560,
                0x617,
                0x6E6,
                0x7D2,
                0x8DC,
                0xA0A,
                0xB61,
                0xCE5,
                0xE9C,
                0x108E,
                0x12C3,
                0x1542,
                0x1817,
                0x1B4C,
                0x1EEF,
                0x230D,
                0x27B8,
                0x2D02,
                0x3300,
                0x39CA,
                0x417C,
                0x4A34,
                0x5416,
                0x5F48,
                0x6BF8,
                0x7A58,
                0x8AA2,
                0x9D18,
                0xB203,
    };
    #endif // (defined(TINYMIND_USE_EXP_9_7))
    #if (defined(TINYMIND_USE_EXP_10_6))
    const uint16_t ExpValuesTableQ10_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x14,
                0x17,
                0x1A,
                0x1E,
                0x22,
                0x26,
                0x2B,
                0x31,
                0x38,
                0x40,
                0x48,
                0x52,
                0x5D,
                0x69,
                0x77,
                0x87,
                0x99,
                0xAD,
                0xC5,
                0xDF,
                0xFD,
                0x11E,
                0x145,
                0x170,
                0x1A1,
                0x1D8,
                0x217,
                0x25F,
                0x2B0,
                0x30B,
                0x373,
                0x3E9,
                0x46E,
                0x505,
                0x5B0,
                0x672,
                0x74E,
                0x847,
                0x961,
                0xAA1,
                0xC0B,
                0xDA6,
                0xF77,
                0x1186,
                0x13DC,
                0x1681,
                0x1980,
                0x1CE5,
                0x20BE,
                0x251A,
                0x2A0B,
                0x2FA4,
                0x35FC,
                0x3D2C,
                0x4551,
                0x4E8C,
                0x5901,
    };
    #endif // (defined(TINYMIND_USE_EXP_10_6))
    #if (defined(TINYMIND_USE_EXP_11_5))
    const uint16_t ExpValuesTableQ11_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xF,
                0x11,
                0x13,
                0x15,
                0x18,
                0x1C,
                0x20,
                0x24,
                0x29,
                0x2E,
                0x34,
                0x3B,
                0x43,
                0x4C,
                0x56,
                0x62,
                0x6F,
                0x7E,
                0x8F,
                0xA2,
                0xB8,
                0xD0,
                0xEC,
                0x10B,
                0x12F,
                0x158,
                0x185,
                0x1B9,
                0x1F4,
                0x237,
                0x282,
                0x2D8,
                0x339,
                0x3A7,
                0x423,
                0x4B0,
                0x550,
                0x605,
                0x6D3,
                0x7BB,
                0x8C3,
                0x9EE,
                0xB40,
                0xCC0,
                0xE72,
                0x105F,
                0x128D,
                0x1505,
                0x17D2,
                0x1AFE,
                0x1E96,
                0x22A8,
                0x2746,
                0x2C80,
    };
    #endif // (defined(TINYMIND_USE_EXP_11_5))
    #if (defined(TINYMIND_USE_EXP_12_4))
    const uint16_t ExpValuesTableQ12_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xE,
                0x10,
                0x12,
                0x14,
                0x17,
                0x1A,
                0x1D,
                0x21,
                0x26,
                0x2B,
                0x31,
                0x37,
                0x3F,
                0x47,
                0x51,
                0x5C,
                0x68,
                0x76,
                0x85,
                0x97,
                0xAC,
                0xC2,
                0xDC,
                0xFA,
                0x11B,
                0x141,
                0x16C,
                0x19C,
                0x1D3,
                0x211,
                0x258,
                0x2A8,
                0x302,
                0x369,
                0x3DD,
                0x461,
                0x4F7,
                0x5A0,
                0x660,
                0x739,
                0x82F,
                0x946,
                0xA82,
                0xBE9,
                0xD7F,
                0xF4B,
                0x1154,
                0x13A3,
                0x1640,
    };
    #endif // (defined(TINYMIND_USE_EXP_12_4))
    #if (defined(TINYMIND_USE_EXP_13_3))
    const uint16_t ExpValuesTableQ13_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xE,
                0x10,
                0x13,
                0x15,
                0x18,
                0x1B,
                0x1F,
                0x23,
                0x28,
                0x2E,
                0x34,
                0x3B,
                0x42,
                0x4B,
                0x56,
                0x61,
                0x6E,
                0x7D,
                0x8D,
                0xA0,
                0xB6,
                0xCE,
                0xE9,
                0x108,
                0x12C,
                0x154,
                0x181,
                0x1B4,
                0x1EE,
                0x230,
                0x27B,
                0x2D0,
                0x330,
                0x39C,
                0x417,
                0x4A3,
                0x541,
                0x5F4,
                0x6BF,
                0x7A5,
                0x8AA,
                0x9D1,
                0xB20,
    };
    #endif // (defined(TINYMIND_USE_EXP_13_3))
    #if (defined(TINYMIND_USE_EXP_14_2))
    const uint16_t ExpValuesTableQ14_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x14,
                0x17,
                0x1A,
                0x1D,
                0x21,
                0x25,
                0x2B,
                0x30,
                0x37,
                0x3E,
                0x46,
                0x50,
                0x5B,
                0x67,
                0x74,
                0x84,
                0x96,
                0xAA,
                0xC0,
                0xDA,
                0xF7,
                0x118,
                0x13D,
                0x168,
                0x198,
                0x1CE,
                0x20B,
                0x251,
                0x2A0,
                0x2FA,
                0x35F,
                0x3D2,
                0x455,
                0x4E8,
                0x590,
    };
    #endif // (defined(TINYMIND_USE_EXP_14_2))
    #if (defined(TINYMIND_USE_EXP_15_1))
    const uint16_t ExpValuesTableQ15_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0xA,
                0xB,
                0xD,
                0xE,
                0x10,
                0x12,
                0x15,
                0x18,
                0x1B,
                0x1F,
                0x23,
                0x28,
                0x2D,
                0x33,
                0x3A,
                0x42,
                0x4B,
                0x55,
                0x60,
                0x6D,
                0x7B,
                0x8C,
                0x9E,
                0xB4,
                0xCC,
                0xE7,
                0x105,
                0x128,
                0x150,
                0x17D,
                0x1AF,
                0x1E9,
                0x22A,
                0x274,
                0x2C8,
    };
    #endif // (defined(TINYMIND_USE_EXP_15_1))
    #if (defined(TINYMIND_USE_EXP_1_31))
    const uint32_t ExpValuesTableQ1_31::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x513947,
                0x5C09DF,
                0x684B19,
                0x762E0B,
                0x85EA52,
                0x97BEF6,
                0xABF35F,
                0xC2D87C,
                0xDCC9FF,
                0xFA2FCF,
                0x11B7FAD,
                0x1413F04,
                0x16C0504,
                0x19C7CFD,
                0x1D36911,
                0x211A538,
                0x2582AB7,
                0x2A81401,
                0x302A126,
                0x3693CD4,
                0x3DD8203,
                0x4614261,
                0x4F68DA1,
                0x59FB9B6,
                0x65F6C33,
                0x738A4E1,
                0x82EC9C4,
                0x945B4B9,
                0xA81C2E0,
                0xBE7E616,
                0xD7DB8C7,
                0xF49945A,
                0x1152AAA3,
                0x13A122B3,
                0x163E397E,
                0x193466DA,
                0x1C8F8772,
                0x205D0C41,
                0x24AC306E,
                0x298E3648,
                0x2F16AC6C,
                0x355BBC12,
                0x3C7681D7,
                0x4483724D,
                0x4DA2CBF1,
                0x57F91857,
                0x63AFBE7A,
                0x70F5A893,
                0x80000000,
                0x910B022D,
                0xA45AF1E1,
                0xBA3D289E,
                0xD3094C70,
                0xEF22AEFC,
                0xEF9DB46,
                0x330E587B,
                0x5BF0A8B1,
                0x8A448BB3,
                0xBEC38EDB,
                0xFA3FF43D,
                0x3DA7FCC9,
                0x8A09A290,
                0xE096D20B,
                0x42AA3370,
                0xB1CC971A,
                0x2FBB1ADA,
                0xBE6E20BD,
                0x60213338,
                0x175BF64C,
                0xE6FC4974,
                0xD241C2F6,
                0xDCDAB296,
                0xAF2DFB7,
                0x61443E0F,
                0xE529DBC0,
                0x9CB554B8,
                0x8EC72139,
                0xC32A20E4,
                0x42B2D0A2,
                0x1762A858,
                0x4C902E27,
                0xEF145F9E,
                0xD7E26DA,
                0xB84CA996,
                0x2315BC3,
                0x5ADE4D,
                0xCAC9D5DB,
                0x7CB10D6A,
                0x34E265C0,
                0x164A460D,
                0x487B7C1F,
                0xF84DBC62,
                0x58913C86,
                0xA2DA3821,
                0x18678E65,
                0x32814B3,
    };
    #endif // (defined(TINYMIND_USE_EXP_1_31))
    #if (defined(TINYMIND_USE_EXP_2_30))
    const uint32_t ExpValuesTableQ2_30::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289CA3,
                0x2E04EF,
                0x34258C,
                0x3B1705,
                0x42F529,
                0x4BDF7B,
                0x55F9AF,
                0x616C3E,
                0x6E64FF,
                0x7D17E7,
                0x8DBFD6,
                0xA09F82,
                0xB60282,
                0xCE3E7E,
                0xE9B488,
                0x108D29C,
                0x12C155B,
                0x1540A00,
                0x1815093,
                0x1B49E6A,
                0x1EEC101,
                0x230A130,
                0x27B46D0,
                0x2CFDCDB,
                0x32FB619,
                0x39C5270,
                0x41764E2,
                0x4A2DA5C,
                0x540E170,
                0x5F3F30B,
                0x6BEDC63,
                0x7A4CA2D,
                0x8A95551,
                0x9D09159,
                0xB1F1CBF,
                0xC9A336D,
                0xE47C3B9,
                0x102E8620,
                0x12561837,
                0x14C71B24,
                0x178B5636,
                0x1AADDE09,
                0x1E3B40EB,
                0x2241B926,
                0x26D165F8,
                0x2BFC8C2B,
                0x31D7DF3D,
                0x387AD449,
                0x40000000,
                0x48858116,
                0x522D78F0,
                0x5D1E944F,
                0x6984A638,
                0x7791577E,
                0x877CEDA3,
                0x99872C3D,
                0xADF85458,
                0xC52245D9,
                0xDF61C76D,
                0xFD1FFA1E,
                0x1ED3FE64,
                0x4504D148,
                0x704B6905,
                0xA15519B8,
                0xD8E64B8D,
                0x17DD8D6D,
                0x5F37105E,
                0xB010999C,
                0xBADFB26,
                0x737E24BA,
                0xE920E17B,
                0x6E6D594B,
                0x5796FDB,
                0xB0A21F07,
                0x7294EDE0,
                0x4E5AAA5C,
                0x4763909C,
                0x61951072,
                0xA1596851,
                0xBB1542C,
                0xA6481713,
                0x778A2FCF,
                0x86BF136D,
                0xDC2654CB,
                0x8118ADE1,
                0x802D6F26,
                0xE564EAED,
                0xBE5886B5,
                0x1A7132E0,
                0xB252306,
                0xA43DBE0F,
                0xFC26DE31,
                0x2C489E43,
                0x516D1C10,
                0x8C33C732,
                0x1940A59,
    };
    #endif // (defined(TINYMIND_USE_EXP_2_30))
    #if (defined(TINYMIND_USE_EXP_3_29))
    const uint32_t ExpValuesTableQ3_29::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144E51,
                0x170277,
                0x1A12C6,
                0x1D8B82,
                0x217A94,
                0x25EFBD,
                0x2AFCD7,
                0x30B61F,
                0x37327F,
                0x3E8BF3,
                0x46DFEB,
                0x504FC1,
                0x5B0141,
                0x671F3F,
                0x74DA44,
                0x84694E,
                0x960AAD,
                0xAA0500,
                0xC0A849,
                0xDA4F35,
                0xF76080,
                0x1185098,
                0x13DA368,
                0x167EE6D,
                0x197DB0C,
                0x1CE2938,
                0x20BB271,
                0x2516D2E,
                0x2A070B8,
                0x2F9F985,
                0x35F6E31,
                0x3D26516,
                0x454AAA8,
                0x4E848AC,
                0x58F8E5F,
                0x64D19B6,
                0x723E1DC,
                0x8174310,
                0x92B0C1B,
                0xA638D92,
                0xBC5AB1B,
                0xD56EF04,
                0xF1DA075,
                0x1120DC93,
                0x1368B2FC,
                0x15FE4615,
                0x18EBEF9E,
                0x1C3D6A24,
                0x20000000,
                0x2442C08B,
                0x2916BC78,
                0x2E8F4A27,
                0x34C2531C,
                0x3BC8ABBF,
                0x43BE76D1,
                0x4CC3961E,
                0x56FC2A2C,
                0x629122EC,
                0x6FB0E3B6,
                0x7E8FFD0F,
                0x8F69FF32,
                0xA28268A4,
                0xB825B482,
                0xD0AA8CDC,
                0xEC7325C6,
                0xBEEC6B6,
                0x2F9B882F,
                0x58084CCE,
                0x85D6FD93,
                0xB9BF125D,
                0xF49070BD,
                0x3736ACA5,
                0x82BCB7ED,
                0xD8510F83,
                0x394A76F0,
                0xA72D552E,
                0x23B1C84E,
                0xB0CA8839,
                0x50ACB428,
                0x5D8AA16,
                0xD3240B89,
                0xBBC517E7,
                0xC35F89B6,
                0xEE132A65,
                0x408C56F0,
                0xC016B793,
                0x72B27576,
                0x5F2C435A,
                0x8D389970,
                0x5929183,
                0xD21EDF07,
                0xFE136F18,
                0x96244F21,
                0xA8B68E08,
                0x4619E399,
                0x80CA052C,
    };
    #endif // (defined(TINYMIND_USE_EXP_3_29))
    #if (defined(TINYMIND_USE_EXP_4_28))
    const uint32_t ExpValuesTableQ4_28::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA2728,
                0xB813B,
                0xD0963,
                0xEC5C1,
                0x10BD4A,
                0x12F7DE,
                0x157E6B,
                0x185B0F,
                0x1B993F,
                0x1F45F9,
                0x236FF5,
                0x2827E0,
                0x2D80A0,
                0x338F9F,
                0x3A6D22,
                0x4234A7,
                0x4B0556,
                0x550280,
                0x605424,
                0x6D279A,
                0x7BB040,
                0x8C284C,
                0x9ED1B4,
                0xB3F736,
                0xCBED86,
                0xE7149C,
                0x105D938,
                0x128B697,
                0x150385C,
                0x17CFCC2,
                0x1AFB718,
                0x1E9328B,
                0x22A5554,
                0x2742456,
                0x2C7C72F,
                0x3268CDB,
                0x391F0EE,
                0x40BA188,
                0x495860D,
                0x531C6C9,
                0x5E2D58D,
                0x6AB7782,
                0x78ED03A,
                0x8906E49,
                0x9B4597E,
                0xAFF230A,
                0xC75F7CF,
                0xE1EB512,
                0x10000000,
                0x12216045,
                0x148B5E3C,
                0x1747A513,
                0x1A61298E,
                0x1DE455DF,
                0x21DF3B68,
                0x2661CB0F,
                0x2B7E1516,
                0x31489176,
                0x37D871DB,
                0x3F47FE87,
                0x47B4FF99,
                0x51413452,
                0x5C12DA41,
                0x6855466E,
                0x763992E3,
                0x85F7635B,
                0x97CDC417,
                0xAC042667,
                0xC2EB7EC9,
                0xDCDF892E,
                0xFA48385E,
                0x1B9B5652,
                0x415E5BF6,
                0x6C2887C1,
                0x9CA53B78,
                0xD396AA97,
                0x11D8E427,
                0x5865441C,
                0xA8565A14,
                0x2EC550B,
                0x699205C4,
                0xDDE28BF3,
                0x61AFC4DB,
                0xF7099532,
                0xA0462B78,
                0x600B5BC9,
                0x39593ABB,
                0x2F9621AD,
                0x469C4CB8,
                0x82C948C1,
                0xE90F6F83,
                0x7F09B78C,
                0x4B122790,
                0x545B4704,
                0xA30CF1CC,
                0x40650296,
    };
    #endif // (defined(TINYMIND_USE_EXP_4_28))
    #if (defined(TINYMIND_USE_EXP_5_27))
    const uint32_t ExpValuesTableQ5_27::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x51394,
                0x5C09D,
                0x684B1,
                0x762E0,
                0x85EA5,
                0x97BEF,
                0xABF35,
                0xC2D87,
                0xDCC9F,
                0xFA2FC,
                0x11B7FA,
                0x1413F0,
                0x16C050,
                0x19C7CF,
                0x1D3691,
                0x211A53,
                0x2582AB,
                0x2A8140,
                0x302A12,
                0x3693CD,
                0x3DD820,
                0x461426,
                0x4F68DA,
                0x59FB9B,
                0x65F6C3,
                0x738A4E,
                0x82EC9C,
                0x945B4B,
                0xA81C2E,
                0xBE7E61,
                0xD7DB8C,
                0xF49945,
                0x1152AAA,
                0x13A122B,
                0x163E397,
                0x193466D,
                0x1C8F877,
                0x205D0C4,
                0x24AC306,
                0x298E364,
                0x2F16AC6,
                0x355BBC1,
                0x3C7681D,
                0x4483724,
                0x4DA2CBF,
                0x57F9185,
                0x63AFBE7,
                0x70F5A89,
                0x8000000,
                0x910B022,
                0xA45AF1E,
                0xBA3D289,
                0xD3094C7,
                0xEF22AEF,
                0x10EF9DB4,
                0x1330E587,
                0x15BF0A8B,
                0x18A448BB,
                0x1BEC38ED,
                0x1FA3FF43,
                0x23DA7FCC,
                0x28A09A29,
                0x2E096D20,
                0x342AA337,
                0x3B1CC971,
                0x42FBB1AD,
                0x4BE6E20B,
                0x56021333,
                0x6175BF64,
                0x6E6FC497,
                0x7D241C2F,
                0x8DCDAB29,
                0xA0AF2DFB,
                0xB61443E0,
                0xCE529DBC,
                0xE9CB554B,
                0x8EC7213,
                0x2C32A20E,
                0x542B2D0A,
                0x81762A85,
                0xB4C902E2,
                0xEEF145F9,
                0x30D7E26D,
                0x7B84CA99,
                0xD02315BC,
                0x3005ADE4,
                0x9CAC9D5D,
                0x17CB10D6,
                0xA34E265C,
                0x4164A460,
                0xF487B7C1,
                0xBF84DBC6,
                0xA58913C8,
                0xAA2DA382,
                0xD18678E6,
                0x2032814B,
    };
    #endif // (defined(TINYMIND_USE_EXP_5_27))
    #if (defined(TINYMIND_USE_EXP_6_26))
    const uint32_t ExpValuesTableQ6_26::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289CA,
                0x2E04E,
                0x34258,
                0x3B170,
                0x42F52,
                0x4BDF7,
                0x55F9A,
                0x616C3,
                0x6E64F,
                0x7D17E,
                0x8DBFD,
                0xA09F8,
                0xB6028,
                0xCE3E7,
                0xE9B48,
                0x108D29,
                0x12C155,
                0x1540A0,
                0x181509,
                0x1B49E6,
                0x1EEC10,
                0x230A13,
                0x27B46D,
                0x2CFDCD,
                0x32FB61,
                0x39C527,
                0x41764E,
                0x4A2DA5,
                0x540E17,
                0x5F3F30,
                0x6BEDC6,
                0x7A4CA2,
                0x8A9555,
                0x9D0915,
                0xB1F1CB,
                0xC9A336,
                0xE47C3B,
                0x102E862,
                0x1256183,
                0x14C71B2,
                0x178B563,
                0x1AADDE0,
                0x1E3B40E,
                0x2241B92,
                0x26D165F,
                0x2BFC8C2,
                0x31D7DF3,
                0x387AD44,
                0x4000000,
                0x4885811,
                0x522D78F,
                0x5D1E944,
                0x6984A63,
                0x7791577,
                0x877CEDA,
                0x99872C3,
                0xADF8545,
                0xC52245D,
                0xDF61C76,
                0xFD1FFA1,
                0x11ED3FE6,
                0x14504D14,
                0x1704B690,
                0x1A15519B,
                0x1D8E64B8,
                0x217DD8D6,
                0x25F37105,
                0x2B010999,
                0x30BADFB2,
                0x3737E24B,
                0x3E920E17,
                0x46E6D594,
                0x505796FD,
                0x5B0A21F0,
                0x67294EDE,
                0x74E5AAA5,
                0x84763909,
                0x96195107,
                0xAA159685,
                0xC0BB1542,
                0xDA648171,
                0xF778A2FC,
                0x186BF136,
                0x3DC2654C,
                0x68118ADE,
                0x9802D6F2,
                0xCE564EAE,
                0xBE5886B,
                0x51A7132E,
                0xA0B25230,
                0xFA43DBE0,
                0x5FC26DE3,
                0xD2C489E4,
                0x5516D1C1,
                0xE8C33C73,
                0x901940A5,
    };
    #endif // (defined(TINYMIND_USE_EXP_6_26))
    #if (defined(TINYMIND_USE_EXP_7_25))
    const uint32_t ExpValuesTableQ7_25::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144E5,
                0x17027,
                0x1A12C,
                0x1D8B8,
                0x217A9,
                0x25EFB,
                0x2AFCD,
                0x30B61,
                0x37327,
                0x3E8BF,
                0x46DFE,
                0x504FC,
                0x5B014,
                0x671F3,
                0x74DA4,
                0x84694,
                0x960AA,
                0xAA050,
                0xC0A84,
                0xDA4F3,
                0xF7608,
                0x118509,
                0x13DA36,
                0x167EE6,
                0x197DB0,
                0x1CE293,
                0x20BB27,
                0x2516D2,
                0x2A070B,
                0x2F9F98,
                0x35F6E3,
                0x3D2651,
                0x454AAA,
                0x4E848A,
                0x58F8E5,
                0x64D19B,
                0x723E1D,
                0x817431,
                0x92B0C1,
                0xA638D9,
                0xBC5AB1,
                0xD56EF0,
                0xF1DA07,
                0x1120DC9,
                0x1368B2F,
                0x15FE461,
                0x18EBEF9,
                0x1C3D6A2,
                0x2000000,
                0x2442C08,
                0x2916BC7,
                0x2E8F4A2,
                0x34C2531,
                0x3BC8ABB,
                0x43BE76D,
                0x4CC3961,
                0x56FC2A2,
                0x629122E,
                0x6FB0E3B,
                0x7E8FFD0,
                0x8F69FF3,
                0xA28268A,
                0xB825B48,
                0xD0AA8CD,
                0xEC7325C,
                0x10BEEC6B,
                0x12F9B882,
                0x158084CC,
                0x185D6FD9,
                0x1B9BF125,
                0x1F49070B,
                0x23736ACA,
                0x282BCB7E,
                0x2D8510F8,
                0x3394A76F,
                0x3A72D552,
                0x423B1C84,
                0x4B0CA883,
                0x550ACB42,
                0x605D8AA1,
                0x6D3240B8,
                0x7BBC517E,
                0x8C35F89B,
                0x9EE132A6,
                0xB408C56F,
                0xCC016B79,
                0xE72B2757,
                0x5F2C435,
                0x28D38997,
                0x50592918,
                0x7D21EDF0,
                0xAFE136F1,
                0xE96244F2,
                0x2A8B68E0,
                0x74619E39,
                0xC80CA052,
    };
    #endif // (defined(TINYMIND_USE_EXP_7_25))
    #if (defined(TINYMIND_USE_EXP_8_24))
    const uint32_t ExpValuesTableQ8_24::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA272,
                0xB813,
                0xD096,
                0xEC5C,
                0x10BD4,
                0x12F7D,
                0x157E6,
                0x185B0,
                0x1B993,
                0x1F45F,
                0x236FF,
                0x2827E,
                0x2D80A,
                0x338F9,
                0x3A6D2,
                0x4234A,
                0x4B055,
                0x55028,
                0x60542,
                0x6D279,
                0x7BB04,
                0x8C284,
                0x9ED1B,
                0xB3F73,
                0xCBED8,
                0xE7149,
                0x105D93,
                0x128B69,
                0x150385,
                0x17CFCC,
                0x1AFB71,
                0x1E9328,
                0x22A555,
                0x274245,
                0x2C7C72,
                0x3268CD,
                0x391F0E,
                0x40BA18,
                0x495860,
                0x531C6C,
                0x5E2D58,
                0x6AB778,
                0x78ED03,
                0x8906E4,
                0x9B4597,
                0xAFF230,
                0xC75F7C,
                0xE1EB51,
                0x1000000,
                0x1221604,
                0x148B5E3,
                0x1747A51,
                0x1A61298,
                0x1DE455D,
                0x21DF3B6,
                0x2661CB0,
                0x2B7E151,
                0x3148917,
                0x37D871D,
                0x3F47FE8,
                0x47B4FF9,
                0x5141345,
                0x5C12DA4,
                0x6855466,
                0x763992E,
                0x85F7635,
                0x97CDC41,
                0xAC04266,
                0xC2EB7EC,
                0xDCDF892,
                0xFA48385,
                0x11B9B565,
                0x1415E5BF,
                0x16C2887C,
                0x19CA53B7,
                0x1D396AA9,
                0x211D8E42,
                0x25865441,
                0x2A8565A1,
                0x302EC550,
                0x3699205C,
                0x3DDE28BF,
                0x461AFC4D,
                0x4F709953,
                0x5A0462B7,
                0x6600B5BC,
                0x739593AB,
                0x82F9621A,
                0x9469C4CB,
                0xA82C948C,
                0xBE90F6F8,
                0xD7F09B78,
                0xF4B12279,
                0x1545B470,
                0x3A30CF1C,
                0x64065029,
    };
    #endif // (defined(TINYMIND_USE_EXP_8_24))
    #if (defined(TINYMIND_USE_EXP_9_23))
    const uint32_t ExpValuesTableQ9_23::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5139,
                0x5C09,
                0x684B,
                0x762E,
                0x85EA,
                0x97BE,
                0xABF3,
                0xC2D8,
                0xDCC9,
                0xFA2F,
                0x11B7F,
                0x1413F,
                0x16C05,
                0x19C7C,
                0x1D369,
                0x211A5,
                0x2582A,
                0x2A814,
                0x302A1,
                0x3693C,
                0x3DD82,
                0x46142,
                0x4F68D,
                0x59FB9,
                0x65F6C,
                0x738A4,
                0x82EC9,
                0x945B4,
                0xA81C2,
                0xBE7E6,
                0xD7DB8,
                0xF4994,
                0x1152AA,
                0x13A122,
                0x163E39,
                0x193466,
                0x1C8F87,
                0x205D0C,
                0x24AC30,
                0x298E36,
                0x2F16AC,
                0x355BBC,
                0x3C7681,
                0x448372,
                0x4DA2CB,
                0x57F918,
                0x63AFBE,
                0x70F5A8,
                0x800000,
                0x910B02,
                0xA45AF1,
                0xBA3D28,
                0xD3094C,
                0xEF22AE,
                0x10EF9DB,
                0x1330E58,
                0x15BF0A8,
                0x18A448B,
                0x1BEC38E,
                0x1FA3FF4,
                0x23DA7FC,
                0x28A09A2,
                0x2E096D2,
                0x342AA33,
                0x3B1CC97,
                0x42FBB1A,
                0x4BE6E20,
                0x5602133,
                0x6175BF6,
                0x6E6FC49,
                0x7D241C2,
                0x8DCDAB2,
                0xA0AF2DF,
                0xB61443E,
                0xCE529DB,
                0xE9CB554,
                0x108EC721,
                0x12C32A20,
                0x1542B2D0,
                0x181762A8,
                0x1B4C902E,
                0x1EEF145F,
                0x230D7E26,
                0x27B84CA9,
                0x2D02315B,
                0x33005ADE,
                0x39CAC9D5,
                0x417CB10D,
                0x4A34E265,
                0x54164A46,
                0x5F487B7C,
                0x6BF84DBC,
                0x7A58913C,
                0x8AA2DA38,
                0x9D18678E,
                0xB2032814,
    };
    #endif // (defined(TINYMIND_USE_EXP_9_23))
    #if (defined(TINYMIND_USE_EXP_10_22))
    const uint32_t ExpValuesTableQ10_22::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289C,
                0x2E04,
                0x3425,
                0x3B17,
                0x42F5,
                0x4BDF,
                0x55F9,
                0x616C,
                0x6E64,
                0x7D17,
                0x8DBF,
                0xA09F,
                0xB602,
                0xCE3E,
                0xE9B4,
                0x108D2,
                0x12C15,
                0x1540A,
                0x18150,
                0x1B49E,
                0x1EEC1,
                0x230A1,
                0x27B46,
                0x2CFDC,
                0x32FB6,
                0x39C52,
                0x41764,
                0x4A2DA,
                0x540E1,
                0x5F3F3,
                0x6BEDC,
                0x7A4CA,
                0x8A955,
                0x9D091,
                0xB1F1C,
                0xC9A33,
                0xE47C3,
                0x102E86,
                0x125618,
                0x14C71B,
                0x178B56,
                0x1AADDE,
                0x1E3B40,
                0x2241B9,
                0x26D165,
                0x2BFC8C,
                0x31D7DF,
                0x387AD4,
                0x400000,
                0x488581,
                0x522D78,
                0x5D1E94,
                0x6984A6,
                0x779157,
                0x877CED,
                0x99872C,
                0xADF854,
                0xC52245,
                0xDF61C7,
                0xFD1FFA,
                0x11ED3FE,
                0x14504D1,
                0x1704B69,
                0x1A15519,
                0x1D8E64B,
                0x217DD8D,
                0x25F3710,
                0x2B01099,
                0x30BADFB,
                0x3737E24,
                0x3E920E1,
                0x46E6D59,
                0x505796F,
                0x5B0A21F,
                0x67294ED,
                0x74E5AAA,
                0x8476390,
                0x9619510,
                0xAA15968,
                0xC0BB154,
                0xDA64817,
                0xF778A2F,
                0x1186BF13,
                0x13DC2654,
                0x168118AD,
                0x19802D6F,
                0x1CE564EA,
                0x20BE5886,
                0x251A7132,
                0x2A0B2523,
                0x2FA43DBE,
                0x35FC26DE,
                0x3D2C489E,
                0x45516D1C,
                0x4E8C33C7,
                0x5901940A,
    };
    #endif // (defined(TINYMIND_USE_EXP_10_22))
    #if (defined(TINYMIND_USE_EXP_11_21))
    const uint32_t ExpValuesTableQ11_21::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144E,
                0x1702,
                0x1A12,
                0x1D8B,
                0x217A,
                0x25EF,
                0x2AFC,
                0x30B6,
                0x3732,
                0x3E8B,
                0x46DF,
                0x504F,
                0x5B01,
                0x671F,
                0x74DA,
                0x8469,
                0x960A,
                0xAA05,
                0xC0A8,
                0xDA4F,
                0xF760,
                0x11850,
                0x13DA3,
                0x167EE,
                0x197DB,
                0x1CE29,
                0x20BB2,
                0x2516D,
                0x2A070,
                0x2F9F9,
                0x35F6E,
                0x3D265,
                0x454AA,
                0x4E848,
                0x58F8E,
                0x64D19,
                0x723E1,
                0x81743,
                0x92B0C,
                0xA638D,
                0xBC5AB,
                0xD56EF,
                0xF1DA0,
                0x1120DC,
                0x1368B2,
                0x15FE46,
                0x18EBEF,
                0x1C3D6A,
                0x200000,
                0x2442C0,
                0x2916BC,
                0x2E8F4A,
                0x34C253,
                0x3BC8AB,
                0x43BE76,
                0x4CC396,
                0x56FC2A,
                0x629122,
                0x6FB0E3,
                0x7E8FFD,
                0x8F69FF,
                0xA28268,
                0xB825B4,
                0xD0AA8C,
                0xEC7325,
                0x10BEEC6,
                0x12F9B88,
                0x158084C,
                0x185D6FD,
                0x1B9BF12,
                0x1F49070,
                0x23736AC,
                0x282BCB7,
                0x2D8510F,
                0x3394A76,
                0x3A72D55,
                0x423B1C8,
                0x4B0CA88,
                0x550ACB4,
                0x605D8AA,
                0x6D3240B,
                0x7BBC517,
                0x8C35F89,
                0x9EE132A,
                0xB408C56,
                0xCC016B7,
                0xE72B275,
                0x105F2C43,
                0x128D3899,
                0x15059291,
                0x17D21EDF,
                0x1AFE136F,
                0x1E96244F,
                0x22A8B68E,
                0x274619E3,
                0x2C80CA05,
    };
    #endif // (defined(TINYMIND_USE_EXP_11_21))
    #if (defined(TINYMIND_USE_EXP_12_20))
    const uint32_t ExpValuesTableQ12_20::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA27,
                0xB81,
                0xD09,
                0xEC5,
                0x10BD,
                0x12F7,
                0x157E,
                0x185B,
                0x1B99,
                0x1F45,
                0x236F,
                0x2827,
                0x2D80,
                0x338F,
                0x3A6D,
                0x4234,
                0x4B05,
                0x5502,
                0x6054,
                0x6D27,
                0x7BB0,
                0x8C28,
                0x9ED1,
                0xB3F7,
                0xCBED,
                0xE714,
                0x105D9,
                0x128B6,
                0x15038,
                0x17CFC,
                0x1AFB7,
                0x1E932,
                0x22A55,
                0x27424,
                0x2C7C7,
                0x3268C,
                0x391F0,
                0x40BA1,
                0x49586,
                0x531C6,
                0x5E2D5,
                0x6AB77,
                0x78ED0,
                0x8906E,
                0x9B459,
                0xAFF23,
                0xC75F7,
                0xE1EB5,
                0x100000,
                0x122160,
                0x148B5E,
                0x1747A5,
                0x1A6129,
                0x1DE455,
                0x21DF3B,
                0x2661CB,
                0x2B7E15,
                0x314891,
                0x37D871,
                0x3F47FE,
                0x47B4FF,
                0x514134,
                0x5C12DA,
                0x685546,
                0x763992,
                0x85F763,
                0x97CDC4,
                0xAC0426,
                0xC2EB7E,
                0xDCDF89,
                0xFA4838,
                0x11B9B56,
                0x1415E5B,
                0x16C2887,
                0x19CA53B,
                0x1D396AA,
                0x211D8E4,
                0x2586544,
                0x2A8565A,
                0x302EC55,
                0x3699205,
                0x3DDE28B,
                0x461AFC4,
                0x4F70995,
                0x5A0462B,
                0x6600B5B,
                0x739593A,
                0x82F9621,
                0x9469C4C,
                0xA82C948,
                0xBE90F6F,
                0xD7F09B7,
                0xF4B1227,
                0x11545B47,
                0x13A30CF1,
                0x16406502,
    };
    #endif // (defined(TINYMIND_USE_EXP_12_20))
    #if (defined(TINYMIND_USE_EXP_13_19))
    const uint32_t ExpValuesTableQ13_19::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x513,
                0x5C0,
                0x684,
                0x762,
                0x85E,
                0x97B,
                0xABF,
                0xC2D,
                0xDCC,
                0xFA2,
                0x11B7,
                0x1413,
                0x16C0,
                0x19C7,
                0x1D36,
                0x211A,
                0x2582,
                0x2A81,
                0x302A,
                0x3693,
                0x3DD8,
                0x4614,
                0x4F68,
                0x59FB,
                0x65F6,
                0x738A,
                0x82EC,
                0x945B,
                0xA81C,
                0xBE7E,
                0xD7DB,
                0xF499,
                0x1152A,
                0x13A12,
                0x163E3,
                0x19346,
                0x1C8F8,
                0x205D0,
                0x24AC3,
                0x298E3,
                0x2F16A,
                0x355BB,
                0x3C768,
                0x44837,
                0x4DA2C,
                0x57F91,
                0x63AFB,
                0x70F5A,
                0x80000,
                0x910B0,
                0xA45AF,
                0xBA3D2,
                0xD3094,
                0xEF22A,
                0x10EF9D,
                0x1330E5,
                0x15BF0A,
                0x18A448,
                0x1BEC38,
                0x1FA3FF,
                0x23DA7F,
                0x28A09A,
                0x2E096D,
                0x342AA3,
                0x3B1CC9,
                0x42FBB1,
                0x4BE6E2,
                0x560213,
                0x6175BF,
                0x6E6FC4,
                0x7D241C,
                0x8DCDAB,
                0xA0AF2D,
                0xB61443,
                0xCE529D,
                0xE9CB55,
                0x108EC72,
                0x12C32A2,
                0x1542B2D,
                0x181762A,
                0x1B4C902,
                0x1EEF145,
                0x230D7E2,
                0x27B84CA,
                0x2D02315,
                0x33005AD,
                0x39CAC9D,
                0x417CB10,
                0x4A34E26,
                0x54164A4,
                0x5F487B7,
                0x6BF84DB,
                0x7A58913,
                0x8AA2DA3,
                0x9D18678,
                0xB203281,
    };
    #endif // (defined(TINYMIND_USE_EXP_13_19))
    #if (defined(TINYMIND_USE_EXP_14_18))
    const uint32_t ExpValuesTableQ14_18::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289,
                0x2E0,
                0x342,
                0x3B1,
                0x42F,
                0x4BD,
                0x55F,
                0x616,
                0x6E6,
                0x7D1,
                0x8DB,
                0xA09,
                0xB60,
                0xCE3,
                0xE9B,
                0x108D,
                0x12C1,
                0x1540,
                0x1815,
                0x1B49,
                0x1EEC,
                0x230A,
                0x27B4,
                0x2CFD,
                0x32FB,
                0x39C5,
                0x4176,
                0x4A2D,
                0x540E,
                0x5F3F,
                0x6BED,
                0x7A4C,
                0x8A95,
                0x9D09,
                0xB1F1,
                0xC9A3,
                0xE47C,
                0x102E8,
                0x12561,
                0x14C71,
                0x178B5,
                0x1AADD,
                0x1E3B4,
                0x2241B,
                0x26D16,
                0x2BFC8,
                0x31D7D,
                0x387AD,
                0x40000,
                0x48858,
                0x522D7,
                0x5D1E9,
                0x6984A,
                0x77915,
                0x877CE,
                0x99872,
                0xADF85,
                0xC5224,
                0xDF61C,
                0xFD1FF,
                0x11ED3F,
                0x14504D,
                0x1704B6,
                0x1A1551,
                0x1D8E64,
                0x217DD8,
                0x25F371,
                0x2B0109,
                0x30BADF,
                0x3737E2,
                0x3E920E,
                0x46E6D5,
                0x505796,
                0x5B0A21,
                0x67294E,
                0x74E5AA,
                0x847639,
                0x961951,
                0xAA1596,
                0xC0BB15,
                0xDA6481,
                0xF778A2,
                0x1186BF1,
                0x13DC265,
                0x168118A,
                0x19802D6,
                0x1CE564E,
                0x20BE588,
                0x251A713,
                0x2A0B252,
                0x2FA43DB,
                0x35FC26D,
                0x3D2C489,
                0x45516D1,
                0x4E8C33C,
                0x5901940,
    };
    #endif // (defined(TINYMIND_USE_EXP_14_18))
    #if (defined(TINYMIND_USE_EXP_15_17))
    const uint32_t ExpValuesTableQ15_17::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144,
                0x170,
                0x1A1,
                0x1D8,
                0x217,
                0x25E,
                0x2AF,
                0x30B,
                0x373,
                0x3E8,
                0x46D,
                0x504,
                0x5B0,
                0x671,
                0x74D,
                0x846,
                0x960,
                0xAA0,
                0xC0A,
                0xDA4,
                0xF76,
                0x1185,
                0x13DA,
                0x167E,
                0x197D,
                0x1CE2,
                0x20BB,
                0x2516,
                0x2A07,
                0x2F9F,
                0x35F6,
                0x3D26,
                0x454A,
                0x4E84,
                0x58F8,
                0x64D1,
                0x723E,
                0x8174,
                0x92B0,
                0xA638,
                0xBC5A,
                0xD56E,
                0xF1DA,
                0x1120D,
                0x1368B,
                0x15FE4,
                0x18EBE,
                0x1C3D6,
                0x20000,
                0x2442C,
                0x2916B,
                0x2E8F4,
                0x34C25,
                0x3BC8A,
                0x43BE7,
                0x4CC39,
                0x56FC2,
                0x62912,
                0x6FB0E,
                0x7E8FF,
                0x8F69F,
                0xA2826,
                0xB825B,
                0xD0AA8,
                0xEC732,
                0x10BEEC,
                0x12F9B8,
                0x158084,
                0x185D6F,
                0x1B9BF1,
                0x1F4907,
                0x23736A,
                0x282BCB,
                0x2D8510,
                0x3394A7,
                0x3A72D5,
                0x423B1C,
                0x4B0CA8,
                0x550ACB,
                0x605D8A,
                0x6D3240,
                0x7BBC51,
                0x8C35F8,
                0x9EE132,
                0xB408C5,
                0xCC016B,
                0xE72B27,
                0x105F2C4,
                0x128D389,
                0x1505929,
                0x17D21ED,
                0x1AFE136,
                0x1E96244,
                0x22A8B68,
                0x274619E,
                0x2C80CA0,
    };
    #endif // (defined(TINYMIND_USE_EXP_15_17))
    #if (defined(TINYMIND_USE_EXP_16_16))
    const uint32_t ExpValuesTableQ16_16::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA2,
                0xB8,
                0xD0,
                0xEC,
                0x10B,
                0x12F,
                0x157,
                0x185,
                0x1B9,
                0x1F4,
                0x236,
                0x282,
                0x2D8,
                0x338,
                0x3A6,
                0x423,
                0x4B0,
                0x550,
                0x605,
                0x6D2,
                0x7BB,
                0x8C2,
                0x9ED,
                0xB3F,
                0xCBE,
                0xE71,
                0x105D,
                0x128B,
                0x1503,
                0x17CF,
                0x1AFB,
                0x1E93,
                0x22A5,
                0x2742,
                0x2C7C,
                0x3268,
                0x391F,
                0x40BA,
                0x4958,
                0x531C,
                0x5E2D,
                0x6AB7,
                0x78ED,
                0x8906,
                0x9B45,
                0xAFF2,
                0xC75F,
                0xE1EB,
                0x10000,
                0x12216,
                0x148B5,
                0x1747A,
                0x1A612,
                0x1DE45,
                0x21DF3,
                0x2661C,
                0x2B7E1,
                0x31489,
                0x37D87,
                0x3F47F,
                0x47B4F,
                0x51413,
                0x5C12D,
                0x68554,
                0x76399,
                0x85F76,
                0x97CDC,
                0xAC042,
                0xC2EB7,
                0xDCDF8,
                0xFA483,
                0x11B9B5,
                0x1415E5,
                0x16C288,
                0x19CA53,
                0x1D396A,
                0x211D8E,
                0x258654,
                0x2A8565,
                0x302EC5,
                0x369920,
                0x3DDE28,
                0x461AFC,
                0x4F7099,
                0x5A0462,
                0x6600B5,
                0x739593,
                0x82F962,
                0x9469C4,
                0xA82C94,
                0xBE90F6,
                0xD7F09B,
                0xF4B122,
                0x11545B4,
                0x13A30CF,
                0x1640650,
    };
    #endif // (defined(TINYMIND_USE_EXP_16_16))
    #if (defined(TINYMIND_USE_EXP_17_15))
    const uint32_t ExpValuesTableQ17_15::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x51,
                0x5C,
                0x68,
                0x76,
                0x85,
                0x97,
                0xAB,
                0xC2,
                0xDC,
                0xFA,
                0x11B,
                0x141,
                0x16C,
                0x19C,
                0x1D3,
                0x211,
                0x258,
                0x2A8,
                0x302,
                0x369,
                0x3DD,
                0x461,
                0x4F6,
                0x59F,
                0x65F,
                0x738,
                0x82E,
                0x945,
                0xA81,
                0xBE7,
                0xD7D,
                0xF49,
                0x1152,
                0x13A1,
                0x163E,
                0x1934,
                0x1C8F,
                0x205D,
                0x24AC,
                0x298E,
                0x2F16,
                0x355B,
                0x3C76,
                0x4483,
                0x4DA2,
                0x57F9,
                0x63AF,
                0x70F5,
                0x8000,
                0x910B,
                0xA45A,
                0xBA3D,
                0xD309,
                0xEF22,
                0x10EF9,
                0x1330E,
                0x15BF0,
                0x18A44,
                0x1BEC3,
                0x1FA3F,
                0x23DA7,
                0x28A09,
                0x2E096,
                0x342AA,
                0x3B1CC,
                0x42FBB,
                0x4BE6E,
                0x56021,
                0x6175B,
                0x6E6FC,
                0x7D241,
                0x8DCDA,
                0xA0AF2,
                0xB6144,
                0xCE529,
                0xE9CB5,
                0x108EC7,
                0x12C32A,
                0x1542B2,
                0x181762,
                0x1B4C90,
                0x1EEF14,
                0x230D7E,
                0x27B84C,
                0x2D0231,
                0x33005A,
                0x39CAC9,
                0x417CB1,
                0x4A34E2,
                0x54164A,
                0x5F487B,
                0x6BF84D,
                0x7A5891,
                0x8AA2DA,
                0x9D1867,
                0xB20328,
    };
    #endif // (defined(TINYMIND_USE_EXP_17_15))
    #if (defined(TINYMIND_USE_EXP_18_14))
    const uint32_t ExpValuesTableQ18_14::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x28,
                0x2E,
                0x34,
                0x3B,
                0x42,
                0x4B,
                0x55,
                0x61,
                0x6E,
                0x7D,
                0x8D,
                0xA0,
                0xB6,
                0xCE,
                0xE9,
                0x108,
                0x12C,
                0x154,
                0x181,
                0x1B4,
                0x1EE,
                0x230,
                0x27B,
                0x2CF,
                0x32F,
                0x39C,
                0x417,
                0x4A2,
                0x540,
                0x5F3,
                0x6BE,
                0x7A4,
                0x8A9,
                0x9D0,
                0xB1F,
                0xC9A,
                0xE47,
                0x102E,
                0x1256,
                0x14C7,
                0x178B,
                0x1AAD,
                0x1E3B,
                0x2241,
                0x26D1,
                0x2BFC,
                0x31D7,
                0x387A,
                0x4000,
                0x4885,
                0x522D,
                0x5D1E,
                0x6984,
                0x7791,
                0x877C,
                0x9987,
                0xADF8,
                0xC522,
                0xDF61,
                0xFD1F,
                0x11ED3,
                0x14504,
                0x1704B,
                0x1A155,
                0x1D8E6,
                0x217DD,
                0x25F37,
                0x2B010,
                0x30BAD,
                0x3737E,
                0x3E920,
                0x46E6D,
                0x50579,
                0x5B0A2,
                0x67294,
                0x74E5A,
                0x84763,
                0x96195,
                0xAA159,
                0xC0BB1,
                0xDA648,
                0xF778A,
                0x1186BF,
                0x13DC26,
                0x168118,
                0x19802D,
                0x1CE564,
                0x20BE58,
                0x251A71,
                0x2A0B25,
                0x2FA43D,
                0x35FC26,
                0x3D2C48,
                0x45516D,
                0x4E8C33,
                0x590194,
    };
    #endif // (defined(TINYMIND_USE_EXP_18_14))
    #if (defined(TINYMIND_USE_EXP_19_13))
    const uint32_t ExpValuesTableQ19_13::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14,
                0x17,
                0x1A,
                0x1D,
                0x21,
                0x25,
                0x2A,
                0x30,
                0x37,
                0x3E,
                0x46,
                0x50,
                0x5B,
                0x67,
                0x74,
                0x84,
                0x96,
                0xAA,
                0xC0,
                0xDA,
                0xF7,
                0x118,
                0x13D,
                0x167,
                0x197,
                0x1CE,
                0x20B,
                0x251,
                0x2A0,
                0x2F9,
                0x35F,
                0x3D2,
                0x454,
                0x4E8,
                0x58F,
                0x64D,
                0x723,
                0x817,
                0x92B,
                0xA63,
                0xBC5,
                0xD56,
                0xF1D,
                0x1120,
                0x1368,
                0x15FE,
                0x18EB,
                0x1C3D,
                0x2000,
                0x2442,
                0x2916,
                0x2E8F,
                0x34C2,
                0x3BC8,
                0x43BE,
                0x4CC3,
                0x56FC,
                0x6291,
                0x6FB0,
                0x7E8F,
                0x8F69,
                0xA282,
                0xB825,
                0xD0AA,
                0xEC73,
                0x10BEE,
                0x12F9B,
                0x15808,
                0x185D6,
                0x1B9BF,
                0x1F490,
                0x23736,
                0x282BC,
                0x2D851,
                0x3394A,
                0x3A72D,
                0x423B1,
                0x4B0CA,
                0x550AC,
                0x605D8,
                0x6D324,
                0x7BBC5,
                0x8C35F,
                0x9EE13,
                0xB408C,
                0xCC016,
                0xE72B2,
                0x105F2C,
                0x128D38,
                0x150592,
                0x17D21E,
                0x1AFE13,
                0x1E9624,
                0x22A8B6,
                0x274619,
                0x2C80CA,
    };
    #endif // (defined(TINYMIND_USE_EXP_19_13))
    #if (defined(TINYMIND_USE_EXP_20_12))
    const uint32_t ExpValuesTableQ20_12::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA,
                0xB,
                0xD,
                0xE,
                0x10,
                0x12,
                0x15,
                0x18,
                0x1B,
                0x1F,
                0x23,
                0x28,
                0x2D,
                0x33,
                0x3A,
                0x42,
                0x4B,
                0x55,
                0x60,
                0x6D,
                0x7B,
                0x8C,
                0x9E,
                0xB3,
                0xCB,
                0xE7,
                0x105,
                0x128,
                0x150,
                0x17C,
                0x1AF,
                0x1E9,
                0x22A,
                0x274,
                0x2C7,
                0x326,
                0x391,
                0x40B,
                0x495,
                0x531,
                0x5E2,
                0x6AB,
                0x78E,
                0x890,
                0x9B4,
                0xAFF,
                0xC75,
                0xE1E,
                0x1000,
                0x1221,
                0x148B,
                0x1747,
                0x1A61,
                0x1DE4,
                0x21DF,
                0x2661,
                0x2B7E,
                0x3148,
                0x37D8,
                0x3F47,
                0x47B4,
                0x5141,
                0x5C12,
                0x6855,
                0x7639,
                0x85F7,
                0x97CD,
                0xAC04,
                0xC2EB,
                0xDCDF,
                0xFA48,
                0x11B9B,
                0x1415E,
                0x16C28,
                0x19CA5,
                0x1D396,
                0x211D8,
                0x25865,
                0x2A856,
                0x302EC,
                0x36992,
                0x3DDE2,
                0x461AF,
                0x4F709,
                0x5A046,
                0x6600B,
                0x73959,
                0x82F96,
                0x9469C,
                0xA82C9,
                0xBE90F,
                0xD7F09,
                0xF4B12,
                0x11545B,
                0x13A30C,
                0x164065,
    };
    #endif // (defined(TINYMIND_USE_EXP_20_12))
    #if (defined(TINYMIND_USE_EXP_21_11))
    const uint32_t ExpValuesTableQ21_11::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x14,
                0x16,
                0x19,
                0x1D,
                0x21,
                0x25,
                0x2A,
                0x30,
                0x36,
                0x3D,
                0x46,
                0x4F,
                0x59,
                0x65,
                0x73,
                0x82,
                0x94,
                0xA8,
                0xBE,
                0xD7,
                0xF4,
                0x115,
                0x13A,
                0x163,
                0x193,
                0x1C8,
                0x205,
                0x24A,
                0x298,
                0x2F1,
                0x355,
                0x3C7,
                0x448,
                0x4DA,
                0x57F,
                0x63A,
                0x70F,
                0x800,
                0x910,
                0xA45,
                0xBA3,
                0xD30,
                0xEF2,
                0x10EF,
                0x1330,
                0x15BF,
                0x18A4,
                0x1BEC,
                0x1FA3,
                0x23DA,
                0x28A0,
                0x2E09,
                0x342A,
                0x3B1C,
                0x42FB,
                0x4BE6,
                0x5602,
                0x6175,
                0x6E6F,
                0x7D24,
                0x8DCD,
                0xA0AF,
                0xB614,
                0xCE52,
                0xE9CB,
                0x108EC,
                0x12C32,
                0x1542B,
                0x18176,
                0x1B4C9,
                0x1EEF1,
                0x230D7,
                0x27B84,
                0x2D023,
                0x33005,
                0x39CAC,
                0x417CB,
                0x4A34E,
                0x54164,
                0x5F487,
                0x6BF84,
                0x7A589,
                0x8AA2D,
                0x9D186,
                0xB2032,
    };
    #endif // (defined(TINYMIND_USE_EXP_21_11))
    #if (defined(TINYMIND_USE_EXP_22_10))
    const uint32_t ExpValuesTableQ22_10::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0xA,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x15,
                0x18,
                0x1B,
                0x1E,
                0x23,
                0x27,
                0x2C,
                0x32,
                0x39,
                0x41,
                0x4A,
                0x54,
                0x5F,
                0x6B,
                0x7A,
                0x8A,
                0x9D,
                0xB1,
                0xC9,
                0xE4,
                0x102,
                0x125,
                0x14C,
                0x178,
                0x1AA,
                0x1E3,
                0x224,
                0x26D,
                0x2BF,
                0x31D,
                0x387,
                0x400,
                0x488,
                0x522,
                0x5D1,
                0x698,
                0x779,
                0x877,
                0x998,
                0xADF,
                0xC52,
                0xDF6,
                0xFD1,
                0x11ED,
                0x1450,
                0x1704,
                0x1A15,
                0x1D8E,
                0x217D,
                0x25F3,
                0x2B01,
                0x30BA,
                0x3737,
                0x3E92,
                0x46E6,
                0x5057,
                0x5B0A,
                0x6729,
                0x74E5,
                0x8476,
                0x9619,
                0xAA15,
                0xC0BB,
                0xDA64,
                0xF778,
                0x1186B,
                0x13DC2,
                0x16811,
                0x19802,
                0x1CE56,
                0x20BE5,
                0x251A7,
                0x2A0B2,
                0x2FA43,
                0x35FC2,
                0x3D2C4,
                0x45516,
                0x4E8C3,
                0x59019,
    };
    #endif // (defined(TINYMIND_USE_EXP_22_10))
    #if (defined(TINYMIND_USE_EXP_23_9))
    const uint32_t ExpValuesTableQ23_9::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x13,
                0x16,
                0x19,
                0x1C,
                0x20,
                0x25,
                0x2A,
                0x2F,
                0x35,
                0x3D,
                0x45,
                0x4E,
                0x58,
                0x64,
                0x72,
                0x81,
                0x92,
                0xA6,
                0xBC,
                0xD5,
                0xF1,
                0x112,
                0x136,
                0x15F,
                0x18E,
                0x1C3,
                0x200,
                0x244,
                0x291,
                0x2E8,
                0x34C,
                0x3BC,
                0x43B,
                0x4CC,
                0x56F,
                0x629,
                0x6FB,
                0x7E8,
                0x8F6,
                0xA28,
                0xB82,
                0xD0A,
                0xEC7,
                0x10BE,
                0x12F9,
                0x1580,
                0x185D,
                0x1B9B,
                0x1F49,
                0x2373,
                0x282B,
                0x2D85,
                0x3394,
                0x3A72,
                0x423B,
                0x4B0C,
                0x550A,
                0x605D,
                0x6D32,
                0x7BBC,
                0x8C35,
                0x9EE1,
                0xB408,
                0xCC01,
                0xE72B,
                0x105F2,
                0x128D3,
                0x15059,
                0x17D21,
                0x1AFE1,
                0x1E962,
                0x22A8B,
                0x27461,
                0x2C80C,
    };
    #endif // (defined(TINYMIND_USE_EXP_23_9))
    #if (defined(TINYMIND_USE_EXP_24_8))
    const uint32_t ExpValuesTableQ24_8::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0x9,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x15,
                0x17,
                0x1A,
                0x1E,
                0x22,
                0x27,
                0x2C,
                0x32,
                0x39,
                0x40,
                0x49,
                0x53,
                0x5E,
                0x6A,
                0x78,
                0x89,
                0x9B,
                0xAF,
                0xC7,
                0xE1,
                0x100,
                0x122,
                0x148,
                0x174,
                0x1A6,
                0x1DE,
                0x21D,
                0x266,
                0x2B7,
                0x314,
                0x37D,
                0x3F4,
                0x47B,
                0x514,
                0x5C1,
                0x685,
                0x763,
                0x85F,
                0x97C,
                0xAC0,
                0xC2E,
                0xDCD,
                0xFA4,
                0x11B9,
                0x1415,
                0x16C2,
                0x19CA,
                0x1D39,
                0x211D,
                0x2586,
                0x2A85,
                0x302E,
                0x3699,
                0x3DDE,
                0x461A,
                0x4F70,
                0x5A04,
                0x6600,
                0x7395,
                0x82F9,
                0x9469,
                0xA82C,
                0xBE90,
                0xD7F0,
                0xF4B1,
                0x11545,
                0x13A30,
                0x16406,
    };
    #endif // (defined(TINYMIND_USE_EXP_24_8))
    #if (defined(TINYMIND_USE_EXP_25_7))
    const uint32_t ExpValuesTableQ25_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xF,
                0x11,
                0x13,
                0x16,
                0x19,
                0x1C,
                0x20,
                0x24,
                0x29,
                0x2F,
                0x35,
                0x3C,
                0x44,
                0x4D,
                0x57,
                0x63,
                0x70,
                0x80,
                0x91,
                0xA4,
                0xBA,
                0xD3,
                0xEF,
                0x10E,
                0x133,
                0x15B,
                0x18A,
                0x1BE,
                0x1FA,
                0x23D,
                0x28A,
                0x2E0,
                0x342,
                0x3B1,
                0x42F,
                0x4BE,
                0x560,
                0x617,
                0x6E6,
                0x7D2,
                0x8DC,
                0xA0A,
                0xB61,
                0xCE5,
                0xE9C,
                0x108E,
                0x12C3,
                0x1542,
                0x1817,
                0x1B4C,
                0x1EEF,
                0x230D,
                0x27B8,
                0x2D02,
                0x3300,
                0x39CA,
                0x417C,
                0x4A34,
                0x5416,
                0x5F48,
                0x6BF8,
                0x7A58,
                0x8AA2,
                0x9D18,
                0xB203,
    };
    #endif // (defined(TINYMIND_USE_EXP_25_7))
    #if (defined(TINYMIND_USE_EXP_26_6))
    const uint32_t ExpValuesTableQ26_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x14,
                0x17,
                0x1A,
                0x1E,
                0x22,
                0x26,
                0x2B,
                0x31,
                0x38,
                0x40,
                0x48,
                0x52,
                0x5D,
                0x69,
                0x77,
                0x87,
                0x99,
                0xAD,
                0xC5,
                0xDF,
                0xFD,
                0x11E,
                0x145,
                0x170,
                0x1A1,
                0x1D8,
                0x217,
                0x25F,
                0x2B0,
                0x30B,
                0x373,
                0x3E9,
                0x46E,
                0x505,
                0x5B0,
                0x672,
                0x74E,
                0x847,
                0x961,
                0xAA1,
                0xC0B,
                0xDA6,
                0xF77,
                0x1186,
                0x13DC,
                0x1681,
                0x1980,
                0x1CE5,
                0x20BE,
                0x251A,
                0x2A0B,
                0x2FA4,
                0x35FC,
                0x3D2C,
                0x4551,
                0x4E8C,
                0x5901,
    };
    #endif // (defined(TINYMIND_USE_EXP_26_6))
    #if (defined(TINYMIND_USE_EXP_27_5))
    const uint32_t ExpValuesTableQ27_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xF,
                0x11,
                0x13,
                0x15,
                0x18,
                0x1C,
                0x20,
                0x24,
                0x29,
                0x2E,
                0x34,
                0x3B,
                0x43,
                0x4C,
                0x56,
                0x62,
                0x6F,
                0x7E,
                0x8F,
                0xA2,
                0xB8,
                0xD0,
                0xEC,
                0x10B,
                0x12F,
                0x158,
                0x185,
                0x1B9,
                0x1F4,
                0x237,
                0x282,
                0x2D8,
                0x339,
                0x3A7,
                0x423,
                0x4B0,
                0x550,
                0x605,
                0x6D3,
                0x7BB,
                0x8C3,
                0x9EE,
                0xB40,
                0xCC0,
                0xE72,
                0x105F,
                0x128D,
                0x1505,
                0x17D2,
                0x1AFE,
                0x1E96,
                0x22A8,
                0x2746,
                0x2C80,
    };
    #endif // (defined(TINYMIND_USE_EXP_27_5))
    #if (defined(TINYMIND_USE_EXP_28_4))
    const uint32_t ExpValuesTableQ28_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xE,
                0x10,
                0x12,
                0x14,
                0x17,
                0x1A,
                0x1D,
                0x21,
                0x26,
                0x2B,
                0x31,
                0x37,
                0x3F,
                0x47,
                0x51,
                0x5C,
                0x68,
                0x76,
                0x85,
                0x97,
                0xAC,
                0xC2,
                0xDC,
                0xFA,
                0x11B,
                0x141,
                0x16C,
                0x19C,
                0x1D3,
                0x211,
                0x258,
                0x2A8,
                0x302,
                0x369,
                0x3DD,
                0x461,
                0x4F7,
                0x5A0,
                0x660,
                0x739,
                0x82F,
                0x946,
                0xA82,
                0xBE9,
                0xD7F,
                0xF4B,
                0x1154,
                0x13A3,
                0x1640,
    };
    #endif // (defined(TINYMIND_USE_EXP_28_4))
    #if (defined(TINYMIND_USE_EXP_29_3))
    const uint32_t ExpValuesTableQ29_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xE,
                0x10,
                0x13,
                0x15,
                0x18,
                0x1B,
                0x1F,
                0x23,
                0x28,
                0x2E,
                0x34,
                0x3B,
                0x42,
                0x4B,
                0x56,
                0x61,
                0x6E,
                0x7D,
                0x8D,
                0xA0,
                0xB6,
                0xCE,
                0xE9,
                0x108,
                0x12C,
                0x154,
                0x181,
                0x1B4,
                0x1EE,
                0x230,
                0x27B,
                0x2D0,
                0x330,
                0x39C,
                0x417,
                0x4A3,
                0x541,
                0x5F4,
                0x6BF,
                0x7A5,
                0x8AA,
                0x9D1,
                0xB20,
    };
    #endif // (defined(TINYMIND_USE_EXP_29_3))
    #if (defined(TINYMIND_USE_EXP_30_2))
    const uint32_t ExpValuesTableQ30_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x14,
                0x17,
                0x1A,
                0x1D,
                0x21,
                0x25,
                0x2B,
                0x30,
                0x37,
                0x3E,
                0x46,
                0x50,
                0x5B,
                0x67,
                0x74,
                0x84,
                0x96,
                0xAA,
                0xC0,
                0xDA,
                0xF7,
                0x118,
                0x13D,
                0x168,
                0x198,
                0x1CE,
                0x20B,
                0x251,
                0x2A0,
                0x2FA,
                0x35F,
                0x3D2,
                0x455,
                0x4E8,
                0x590,
    };
    #endif // (defined(TINYMIND_USE_EXP_30_2))
    #if (defined(TINYMIND_USE_EXP_31_1))
    const uint32_t ExpValuesTableQ31_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0xA,
                0xB,
                0xD,
                0xE,
                0x10,
                0x12,
                0x15,
                0x18,
                0x1B,
                0x1F,
                0x23,
                0x28,
                0x2D,
                0x33,
                0x3A,
                0x42,
                0x4B,
                0x55,
                0x60,
                0x6D,
                0x7B,
                0x8C,
                0x9E,
                0xB4,
                0xCC,
                0xE7,
                0x105,
                0x128,
                0x150,
                0x17D,
                0x1AF,
                0x1E9,
                0x22A,
                0x274,
                0x2C8,
    };
    #endif // (defined(TINYMIND_USE_EXP_31_1))
    #if (defined(TINYMIND_USE_EXP_1_63))
    const uint64_t ExpValuesTableQ1_63::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x513947C44F5358,
                0x5C09DF9A748C18,
                0x684B19B7365740,
                0x762E0B5C2DC4E4,
                0x85EA52D653B940,
                0x97BEF641671B00,
                0xABF35FF46F28D8,
                0xC2D87C8A5CBD98,
                0xDCC9FF006A9BB0,
                0xFA2FCFFC66A2D0,
                0x11B7FADF9E70990,
                0x1413F04E14BA090,
                0x16C0504695C4170,
                0x19C7CFD9FD3C470,
                0x1D3691112217520,
                0x211A538529766E0,
                0x2582AB704279E80,
                0x2A8140135765C40,
                0x302A126A9E1A520,
                0x3693CD4C3875520,
                0x3DD82031C9FECC0,
                0x46142618A255580,
                0x4F68DA148640B40,
                0x59FB9B67FE11F00,
                0x65F6C3333AC2BC0,
                0x738A4E111516CC0,
                0x82EC9C497D00800,
                0x945B4B9B236C100,
                0xA81C2E04A7A1280,
                0xBE7E6169B628900,
                0xD7DB8C7422BFB80,
                0xF49945A6287B600,
                0x1152AAA3BF81CC00,
                0x13A122B3A399D500,
                0x163E397E02207300,
                0x193466DA99EE6400,
                0x1C8F87724B5C1D00,
                0x205D0C418EC05800,
                0x24AC306E54B09E00,
                0x298E3648EF564000,
                0x2F16AC6C59DE7000,
                0x355BBC12BB5A9600,
                0x3C7681D7DF9AFC00,
                0x4483724D264FA000,
                0x4DA2CBF1BE582800,
                0x57F91857A63A3C00,
                0x63AFBE7AB2082C00,
                0x70F5A893B6088800,
                0x8000000000000000,
                0x910B022DB7AE6800,
                0xA45AF1E1F40C3000,
                0xBA3D289EDF7B5000,
                0xD3094C70F034E000,
                0xEF22AEFC071E0000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
    };
    #endif // (defined(TINYMIND_USE_EXP_1_63))
    #if (defined(TINYMIND_USE_EXP_2_62))
    const uint64_t ExpValuesTableQ2_62::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289CA3E227A9AC,
                0x2E04EFCD3A460C,
                0x34258CDB9B2BA0,
                0x3B1705AE16E272,
                0x42F5296B29DCA0,
                0x4BDF7B20B38D80,
                0x55F9AFFA37946C,
                0x616C3E452E5ECC,
                0x6E64FF80354DD8,
                0x7D17E7FE335168,
                0x8DBFD6FCF384C8,
                0xA09F8270A5D048,
                0xB6028234AE20B8,
                0xCE3E7ECFE9E238,
                0xE9B4888910BA90,
                0x108D29C294BB370,
                0x12C155B8213CF40,
                0x1540A009ABB2E20,
                0x181509354F0D290,
                0x1B49E6A61C3AA90,
                0x1EEC1018E4FF660,
                0x230A130C512AAC0,
                0x27B46D0A43205A0,
                0x2CFDCDB3FF08F80,
                0x32FB61999D615E0,
                0x39C527088A8B660,
                0x41764E24BE80400,
                0x4A2DA5CD91B6080,
                0x540E170253D0940,
                0x5F3F30B4DB14480,
                0x6BEDC63A115FDC0,
                0x7A4CA2D3143DB00,
                0x8A95551DFC0E600,
                0x9D09159D1CCEA80,
                0xB1F1CBF01103980,
                0xC9A336D4CF73200,
                0xE47C3B925AE0E80,
                0x102E8620C7602C00,
                0x125618372A584F00,
                0x14C71B2477AB2000,
                0x178B56362CEF3800,
                0x1AADDE095DAD4B00,
                0x1E3B40EBEFCD7E00,
                0x2241B9269327D000,
                0x26D165F8DF2C1400,
                0x2BFC8C2BD31D1E00,
                0x31D7DF3D59041600,
                0x387AD449DB044400,
                0x4000000000000000,
                0x48858116DBD73400,
                0x522D78F0FA061800,
                0x5D1E944F6FBDA800,
                0x6984A638781A7000,
                0x7791577E038F0000,
                0x877CEDA33EE7C000,
                0x99872C3DB1594000,
                0xADF85458A2BB4800,
                0xC52245D9AC3B4000,
                0xDF61C76D87D78000,
                0xFD1FFA1E8757C800,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
    };
    #endif // (defined(TINYMIND_USE_EXP_2_62))
    #if (defined(TINYMIND_USE_EXP_3_61))
    const uint64_t ExpValuesTableQ3_61::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144E51F113D4D6,
                0x170277E69D2306,
                0x1A12C66DCD95D0,
                0x1D8B82D70B7139,
                0x217A94B594EE50,
                0x25EFBD9059C6C0,
                0x2AFCD7FD1BCA36,
                0x30B61F22972F66,
                0x37327FC01AA6EC,
                0x3E8BF3FF19A8B4,
                0x46DFEB7E79C264,
                0x504FC13852E824,
                0x5B01411A57105C,
                0x671F3F67F4F11C,
                0x74DA4444885D48,
                0x84694E14A5D9B8,
                0x960AADC109E7A0,
                0xAA05004D5D9710,
                0xC0A849AA786948,
                0xDA4F3530E1D548,
                0xF76080C727FB30,
                0x118509862895560,
                0x13DA368521902D0,
                0x167EE6D9FF847C0,
                0x197DB0CCCEB0AF0,
                0x1CE293844545B30,
                0x20BB27125F40200,
                0x2516D2E6C8DB040,
                0x2A070B8129E84A0,
                0x2F9F985A6D8A240,
                0x35F6E31D08AFEE0,
                0x3D2651698A1ED80,
                0x454AAA8EFE07300,
                0x4E848ACE8E67540,
                0x58F8E5F80881CC0,
                0x64D19B6A67B9900,
                0x723E1DC92D70740,
                0x817431063B01600,
                0x92B0C1B952C2780,
                0xA638D923BD59000,
                0xBC5AB1B16779C00,
                0xD56EF04AED6A580,
                0xF1DA075F7E6BF00,
                0x1120DC934993E800,
                0x1368B2FC6F960A00,
                0x15FE4615E98E8F00,
                0x18EBEF9EAC820B00,
                0x1C3D6A24ED822200,
                0x2000000000000000,
                0x2442C08B6DEB9A00,
                0x2916BC787D030C00,
                0x2E8F4A27B7DED400,
                0x34C2531C3C0D3800,
                0x3BC8ABBF01C78000,
                0x43BE76D19F73E000,
                0x4CC3961ED8ACA000,
                0x56FC2A2C515DA400,
                0x629122ECD61DA000,
                0x6FB0E3B6C3EBC000,
                0x7E8FFD0F43ABE400,
                0x8F69FF327E2A0800,
                0xA28268A4024FF000,
                0xB825B482DD65F800,
                0xD0AA8CDC1E60D800,
                0xEC7325C6A6ED7000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
    };
    #endif // (defined(TINYMIND_USE_EXP_3_61))
    #if (defined(TINYMIND_USE_EXP_4_60))
    const uint64_t ExpValuesTableQ4_60::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA2728F889EA6B,
                0xB813BF34E9183,
                0xD096336E6CAE8,
                0xEC5C16B85B89C,
                0x10BD4A5ACA7728,
                0x12F7DEC82CE360,
                0x157E6BFE8DE51B,
                0x185B0F914B97B3,
                0x1B993FE00D5376,
                0x1F45F9FF8CD45A,
                0x236FF5BF3CE132,
                0x2827E09C297412,
                0x2D80A08D2B882E,
                0x338F9FB3FA788E,
                0x3A6D2222442EA4,
                0x4234A70A52ECDC,
                0x4B0556E084F3D0,
                0x55028026AECB88,
                0x605424D53C34A4,
                0x6D279A9870EAA4,
                0x7BB0406393FD98,
                0x8C284C3144AAB0,
                0x9ED1B4290C8168,
                0xB3F736CFFC23E0,
                0xCBED8666758578,
                0xE7149C222A2D98,
                0x105D93892FA0100,
                0x128B6973646D820,
                0x150385C094F4250,
                0x17CFCC2D36C5120,
                0x1AFB718E8457F70,
                0x1E9328B4C50F6C0,
                0x22A555477F03980,
                0x274245674733AA0,
                0x2C7C72FC0440E60,
                0x3268CDB533DCC80,
                0x391F0EE496B83A0,
                0x40BA18831D80B00,
                0x495860DCA9613C0,
                0x531C6C91DEAC800,
                0x5E2D58D8B3BCE00,
                0x6AB7782576B52C0,
                0x78ED03AFBF35F80,
                0x8906E49A4C9F400,
                0x9B4597E37CB0500,
                0xAFF230AF4C74780,
                0xC75F7CF56410580,
                0xE1EB51276C11100,
                0x1000000000000000,
                0x12216045B6F5CD00,
                0x148B5E3C3E818600,
                0x1747A513DBEF6A00,
                0x1A61298E1E069C00,
                0x1DE455DF80E3C000,
                0x21DF3B68CFB9F000,
                0x2661CB0F6C565000,
                0x2B7E151628AED200,
                0x314891766B0ED000,
                0x37D871DB61F5E000,
                0x3F47FE87A1D5F200,
                0x47B4FF993F150400,
                0x514134520127F800,
                0x5C12DA416EB2FC00,
                0x6855466E0F306C00,
                0x763992E35376B800,
                0x85F7635B44464000,
                0x97CDC417A3F40800,
                0xAC0426671100D800,
                0xC2EB7EC98F05D800,
                0xDCDF892E85D2E800,
                0xFA48385EDF47E800,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
    };
    #endif // (defined(TINYMIND_USE_EXP_4_60))
    #if (defined(TINYMIND_USE_EXP_5_59))
    const uint64_t ExpValuesTableQ5_59::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x513947C44F535,
                0x5C09DF9A748C1,
                0x684B19B736574,
                0x762E0B5C2DC4E,
                0x85EA52D653B94,
                0x97BEF641671B0,
                0xABF35FF46F28D,
                0xC2D87C8A5CBD9,
                0xDCC9FF006A9BB,
                0xFA2FCFFC66A2D,
                0x11B7FADF9E7099,
                0x1413F04E14BA09,
                0x16C0504695C417,
                0x19C7CFD9FD3C47,
                0x1D369111221752,
                0x211A538529766E,
                0x2582AB704279E8,
                0x2A8140135765C4,
                0x302A126A9E1A52,
                0x3693CD4C387552,
                0x3DD82031C9FECC,
                0x46142618A25558,
                0x4F68DA148640B4,
                0x59FB9B67FE11F0,
                0x65F6C3333AC2BC,
                0x738A4E111516CC,
                0x82EC9C497D0080,
                0x945B4B9B236C10,
                0xA81C2E04A7A128,
                0xBE7E6169B62890,
                0xD7DB8C7422BFB8,
                0xF49945A6287B60,
                0x1152AAA3BF81CC0,
                0x13A122B3A399D50,
                0x163E397E0220730,
                0x193466DA99EE640,
                0x1C8F87724B5C1D0,
                0x205D0C418EC0580,
                0x24AC306E54B09E0,
                0x298E3648EF56400,
                0x2F16AC6C59DE700,
                0x355BBC12BB5A960,
                0x3C7681D7DF9AFC0,
                0x4483724D264FA00,
                0x4DA2CBF1BE58280,
                0x57F91857A63A3C0,
                0x63AFBE7AB2082C0,
                0x70F5A893B608880,
                0x800000000000000,
                0x910B022DB7AE680,
                0xA45AF1E1F40C300,
                0xBA3D289EDF7B500,
                0xD3094C70F034E00,
                0xEF22AEFC071E000,
                0x10EF9DB467DCF800,
                0x1330E587B62B2800,
                0x15BF0A8B14576900,
                0x18A448BB35876800,
                0x1BEC38EDB0FAF000,
                0x1FA3FF43D0EAF900,
                0x23DA7FCC9F8A8200,
                0x28A09A290093FC00,
                0x2E096D20B7597E00,
                0x342AA33707983600,
                0x3B1CC971A9BB5C00,
                0x42FBB1ADA2232000,
                0x4BE6E20BD1FA0400,
                0x5602133388806C00,
                0x6175BF64C782EC00,
                0x6E6FC49742E97400,
                0x7D241C2F6FA3F400,
                0x8DCDAB296B422000,
                0xA0AF2DFB7D883000,
                0xB61443E0F8B49000,
                0xCE529DBC088A5800,
                0xE9CB554B8B6B1800,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
    };
    #endif // (defined(TINYMIND_USE_EXP_5_59))
    #if (defined(TINYMIND_USE_EXP_6_58))
    const uint64_t ExpValuesTableQ6_58::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289CA3E227A9A,
                0x2E04EFCD3A460,
                0x34258CDB9B2BA,
                0x3B1705AE16E27,
                0x42F5296B29DCA,
                0x4BDF7B20B38D8,
                0x55F9AFFA37946,
                0x616C3E452E5EC,
                0x6E64FF80354DD,
                0x7D17E7FE33516,
                0x8DBFD6FCF384C,
                0xA09F8270A5D04,
                0xB6028234AE20B,
                0xCE3E7ECFE9E23,
                0xE9B4888910BA9,
                0x108D29C294BB37,
                0x12C155B8213CF4,
                0x1540A009ABB2E2,
                0x181509354F0D29,
                0x1B49E6A61C3AA9,
                0x1EEC1018E4FF66,
                0x230A130C512AAC,
                0x27B46D0A43205A,
                0x2CFDCDB3FF08F8,
                0x32FB61999D615E,
                0x39C527088A8B66,
                0x41764E24BE8040,
                0x4A2DA5CD91B608,
                0x540E170253D094,
                0x5F3F30B4DB1448,
                0x6BEDC63A115FDC,
                0x7A4CA2D3143DB0,
                0x8A95551DFC0E60,
                0x9D09159D1CCEA8,
                0xB1F1CBF0110398,
                0xC9A336D4CF7320,
                0xE47C3B925AE0E8,
                0x102E8620C7602C0,
                0x125618372A584F0,
                0x14C71B2477AB200,
                0x178B56362CEF380,
                0x1AADDE095DAD4B0,
                0x1E3B40EBEFCD7E0,
                0x2241B9269327D00,
                0x26D165F8DF2C140,
                0x2BFC8C2BD31D1E0,
                0x31D7DF3D5904160,
                0x387AD449DB04440,
                0x400000000000000,
                0x48858116DBD7340,
                0x522D78F0FA06180,
                0x5D1E944F6FBDA80,
                0x6984A638781A700,
                0x7791577E038F000,
                0x877CEDA33EE7C00,
                0x99872C3DB159400,
                0xADF85458A2BB480,
                0xC52245D9AC3B400,
                0xDF61C76D87D7800,
                0xFD1FFA1E8757C80,
                0x11ED3FE64FC54100,
                0x14504D148049FE00,
                0x1704B6905BACBF00,
                0x1A15519B83CC1B00,
                0x1D8E64B8D4DDAE00,
                0x217DD8D6D1119000,
                0x25F37105E8FD0200,
                0x2B010999C4403600,
                0x30BADFB263C17600,
                0x3737E24BA174BA00,
                0x3E920E17B7D1FA00,
                0x46E6D594B5A11000,
                0x505796FDBEC41800,
                0x5B0A21F07C5A4800,
                0x67294EDE04452C00,
                0x74E5AAA5C5B58C00,
                0x84763909CB5ED800,
                0x9619510727C2A000,
                0xAA15968513373800,
                0xC0BB1542C537D000,
                0xDA64817139D2C000,
                0xF778A2FCF5FC4000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
    };
    #endif // (defined(TINYMIND_USE_EXP_6_58))
    #if (defined(TINYMIND_USE_EXP_7_57))
    const uint64_t ExpValuesTableQ7_57::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144E51F113D4D,
                0x170277E69D230,
                0x1A12C66DCD95D,
                0x1D8B82D70B713,
                0x217A94B594EE5,
                0x25EFBD9059C6C,
                0x2AFCD7FD1BCA3,
                0x30B61F22972F6,
                0x37327FC01AA6E,
                0x3E8BF3FF19A8B,
                0x46DFEB7E79C26,
                0x504FC13852E82,
                0x5B01411A57105,
                0x671F3F67F4F11,
                0x74DA4444885D4,
                0x84694E14A5D9B,
                0x960AADC109E7A,
                0xAA05004D5D971,
                0xC0A849AA78694,
                0xDA4F3530E1D54,
                0xF76080C727FB3,
                0x11850986289556,
                0x13DA368521902D,
                0x167EE6D9FF847C,
                0x197DB0CCCEB0AF,
                0x1CE293844545B3,
                0x20BB27125F4020,
                0x2516D2E6C8DB04,
                0x2A070B8129E84A,
                0x2F9F985A6D8A24,
                0x35F6E31D08AFEE,
                0x3D2651698A1ED8,
                0x454AAA8EFE0730,
                0x4E848ACE8E6754,
                0x58F8E5F80881CC,
                0x64D19B6A67B990,
                0x723E1DC92D7074,
                0x817431063B0160,
                0x92B0C1B952C278,
                0xA638D923BD5900,
                0xBC5AB1B16779C0,
                0xD56EF04AED6A58,
                0xF1DA075F7E6BF0,
                0x1120DC934993E80,
                0x1368B2FC6F960A0,
                0x15FE4615E98E8F0,
                0x18EBEF9EAC820B0,
                0x1C3D6A24ED82220,
                0x200000000000000,
                0x2442C08B6DEB9A0,
                0x2916BC787D030C0,
                0x2E8F4A27B7DED40,
                0x34C2531C3C0D380,
                0x3BC8ABBF01C7800,
                0x43BE76D19F73E00,
                0x4CC3961ED8ACA00,
                0x56FC2A2C515DA40,
                0x629122ECD61DA00,
                0x6FB0E3B6C3EBC00,
                0x7E8FFD0F43ABE40,
                0x8F69FF327E2A080,
                0xA28268A4024FF00,
                0xB825B482DD65F80,
                0xD0AA8CDC1E60D80,
                0xEC7325C6A6ED700,
                0x10BEEC6B6888C800,
                0x12F9B882F47E8100,
                0x158084CCE2201B00,
                0x185D6FD931E0BB00,
                0x1B9BF125D0BA5D00,
                0x1F49070BDBE8FD00,
                0x23736ACA5AD08800,
                0x282BCB7EDF620C00,
                0x2D8510F83E2D2400,
                0x3394A76F02229600,
                0x3A72D552E2DAC600,
                0x423B1C84E5AF6C00,
                0x4B0CA88393E15000,
                0x550ACB42899B9C00,
                0x605D8AA1629BE800,
                0x6D3240B89CE96000,
                0x7BBC517E7AFE2000,
                0x8C35F89B6B3CE800,
                0x9EE132A658E64000,
                0xB408C56F0EF55000,
                0xCC016B7937023000,
                0xE72B27576FA8E000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
    };
    #endif // (defined(TINYMIND_USE_EXP_7_57))
    #if (defined(TINYMIND_USE_EXP_8_56))
    const uint64_t ExpValuesTableQ8_56::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA2728F889EA6,
                0xB813BF34E918,
                0xD096336E6CAE,
                0xEC5C16B85B89,
                0x10BD4A5ACA772,
                0x12F7DEC82CE36,
                0x157E6BFE8DE51,
                0x185B0F914B97B,
                0x1B993FE00D537,
                0x1F45F9FF8CD45,
                0x236FF5BF3CE13,
                0x2827E09C29741,
                0x2D80A08D2B882,
                0x338F9FB3FA788,
                0x3A6D2222442EA,
                0x4234A70A52ECD,
                0x4B0556E084F3D,
                0x55028026AECB8,
                0x605424D53C34A,
                0x6D279A9870EAA,
                0x7BB0406393FD9,
                0x8C284C3144AAB,
                0x9ED1B4290C816,
                0xB3F736CFFC23E,
                0xCBED866675857,
                0xE7149C222A2D9,
                0x105D93892FA010,
                0x128B6973646D82,
                0x150385C094F425,
                0x17CFCC2D36C512,
                0x1AFB718E8457F7,
                0x1E9328B4C50F6C,
                0x22A555477F0398,
                0x274245674733AA,
                0x2C7C72FC0440E6,
                0x3268CDB533DCC8,
                0x391F0EE496B83A,
                0x40BA18831D80B0,
                0x495860DCA9613C,
                0x531C6C91DEAC80,
                0x5E2D58D8B3BCE0,
                0x6AB7782576B52C,
                0x78ED03AFBF35F8,
                0x8906E49A4C9F40,
                0x9B4597E37CB050,
                0xAFF230AF4C7478,
                0xC75F7CF5641058,
                0xE1EB51276C1110,
                0x100000000000000,
                0x12216045B6F5CD0,
                0x148B5E3C3E81860,
                0x1747A513DBEF6A0,
                0x1A61298E1E069C0,
                0x1DE455DF80E3C00,
                0x21DF3B68CFB9F00,
                0x2661CB0F6C56500,
                0x2B7E151628AED20,
                0x314891766B0ED00,
                0x37D871DB61F5E00,
                0x3F47FE87A1D5F20,
                0x47B4FF993F15040,
                0x514134520127F80,
                0x5C12DA416EB2FC0,
                0x6855466E0F306C0,
                0x763992E35376B80,
                0x85F7635B4446400,
                0x97CDC417A3F4080,
                0xAC0426671100D80,
                0xC2EB7EC98F05D80,
                0xDCDF892E85D2E80,
                0xFA48385EDF47E80,
                0x11B9B5652D684400,
                0x1415E5BF6FB10600,
                0x16C2887C1F169200,
                0x19CA53B781114B00,
                0x1D396AA9716D6300,
                0x211D8E4272D7B600,
                0x25865441C9F0A800,
                0x2A8565A144CDCE00,
                0x302EC550B14DF400,
                0x3699205C4E74B000,
                0x3DDE28BF3D7F1000,
                0x461AFC4DB59E7400,
                0x4F7099532C732000,
                0x5A0462B7877AA800,
                0x6600B5BC9B811800,
                0x739593ABB7D47000,
                0x82F9621AD5C26000,
                0x9469C4CB819C7800,
                0xA82C948C1B8C3000,
                0xBE90F6F83E927800,
                0xD7F09B78C480E800,
                0xF4B122790DDFB000,
                0x8000000000000000,
                0x8000000000000000,
                0x8000000000000000,
    };
    #endif // (defined(TINYMIND_USE_EXP_8_56))
    #if (defined(TINYMIND_USE_EXP_9_55))
    const uint64_t ExpValuesTableQ9_55::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x513947C44F53,
                0x5C09DF9A748C,
                0x684B19B73657,
                0x762E0B5C2DC4,
                0x85EA52D653B9,
                0x97BEF641671B,
                0xABF35FF46F28,
                0xC2D87C8A5CBD,
                0xDCC9FF006A9B,
                0xFA2FCFFC66A2,
                0x11B7FADF9E709,
                0x1413F04E14BA0,
                0x16C0504695C41,
                0x19C7CFD9FD3C4,
                0x1D36911122175,
                0x211A538529766,
                0x2582AB704279E,
                0x2A8140135765C,
                0x302A126A9E1A5,
                0x3693CD4C38755,
                0x3DD82031C9FEC,
                0x46142618A2555,
                0x4F68DA148640B,
                0x59FB9B67FE11F,
                0x65F6C3333AC2B,
                0x738A4E111516C,
                0x82EC9C497D008,
                0x945B4B9B236C1,
                0xA81C2E04A7A12,
                0xBE7E6169B6289,
                0xD7DB8C7422BFB,
                0xF49945A6287B6,
                0x1152AAA3BF81CC,
                0x13A122B3A399D5,
                0x163E397E022073,
                0x193466DA99EE64,
                0x1C8F87724B5C1D,
                0x205D0C418EC058,
                0x24AC306E54B09E,
                0x298E3648EF5640,
                0x2F16AC6C59DE70,
                0x355BBC12BB5A96,
                0x3C7681D7DF9AFC,
                0x4483724D264FA0,
                0x4DA2CBF1BE5828,
                0x57F91857A63A3C,
                0x63AFBE7AB2082C,
                0x70F5A893B60888,
                0x80000000000000,
                0x910B022DB7AE68,
                0xA45AF1E1F40C30,
                0xBA3D289EDF7B50,
                0xD3094C70F034E0,
                0xEF22AEFC071E00,
                0x10EF9DB467DCF80,
                0x1330E587B62B280,
                0x15BF0A8B1457690,
                0x18A448BB3587680,
                0x1BEC38EDB0FAF00,
                0x1FA3FF43D0EAF90,
                0x23DA7FCC9F8A820,
                0x28A09A290093FC0,
                0x2E096D20B7597E0,
                0x342AA3370798360,
                0x3B1CC971A9BB5C0,
                0x42FBB1ADA223200,
                0x4BE6E20BD1FA040,
                0x5602133388806C0,
                0x6175BF64C782EC0,
                0x6E6FC49742E9740,
                0x7D241C2F6FA3F40,
                0x8DCDAB296B42200,
                0xA0AF2DFB7D88300,
                0xB61443E0F8B4900,
                0xCE529DBC088A580,
                0xE9CB554B8B6B180,
                0x108EC721396BDB00,
                0x12C32A20E4F85400,
                0x1542B2D0A266E700,
                0x181762A858A6FA00,
                0x1B4C902E273A5800,
                0x1EEF145F9EBF8800,
                0x230D7E26DACF3A00,
                0x27B84CA996399000,
                0x2D02315BC3BD5400,
                0x33005ADE4DC08C00,
                0x39CAC9D5DBEA3800,
                0x417CB10D6AE13000,
                0x4A34E265C0CE3C00,
                0x54164A460DC61800,
                0x5F487B7C1F493C00,
                0x6BF84DBC62407400,
                0x7A58913C86EFD800,
                0x8AA2DA382108A000,
                0x9D18678E65D9F000,
                0xB2032814B33F3000,
    };
    #endif // (defined(TINYMIND_USE_EXP_9_55))
    #if (defined(TINYMIND_USE_EXP_10_54))
    const uint64_t ExpValuesTableQ10_54::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289CA3E227A9,
                0x2E04EFCD3A46,
                0x34258CDB9B2B,
                0x3B1705AE16E2,
                0x42F5296B29DC,
                0x4BDF7B20B38D,
                0x55F9AFFA3794,
                0x616C3E452E5E,
                0x6E64FF80354D,
                0x7D17E7FE3351,
                0x8DBFD6FCF384,
                0xA09F8270A5D0,
                0xB6028234AE20,
                0xCE3E7ECFE9E2,
                0xE9B4888910BA,
                0x108D29C294BB3,
                0x12C155B8213CF,
                0x1540A009ABB2E,
                0x181509354F0D2,
                0x1B49E6A61C3AA,
                0x1EEC1018E4FF6,
                0x230A130C512AA,
                0x27B46D0A43205,
                0x2CFDCDB3FF08F,
                0x32FB61999D615,
                0x39C527088A8B6,
                0x41764E24BE804,
                0x4A2DA5CD91B60,
                0x540E170253D09,
                0x5F3F30B4DB144,
                0x6BEDC63A115FD,
                0x7A4CA2D3143DB,
                0x8A95551DFC0E6,
                0x9D09159D1CCEA,
                0xB1F1CBF011039,
                0xC9A336D4CF732,
                0xE47C3B925AE0E,
                0x102E8620C7602C,
                0x125618372A584F,
                0x14C71B2477AB20,
                0x178B56362CEF38,
                0x1AADDE095DAD4B,
                0x1E3B40EBEFCD7E,
                0x2241B9269327D0,
                0x26D165F8DF2C14,
                0x2BFC8C2BD31D1E,
                0x31D7DF3D590416,
                0x387AD449DB0444,
                0x40000000000000,
                0x48858116DBD734,
                0x522D78F0FA0618,
                0x5D1E944F6FBDA8,
                0x6984A638781A70,
                0x7791577E038F00,
                0x877CEDA33EE7C0,
                0x99872C3DB15940,
                0xADF85458A2BB48,
                0xC52245D9AC3B40,
                0xDF61C76D87D780,
                0xFD1FFA1E8757C8,
                0x11ED3FE64FC5410,
                0x14504D148049FE0,
                0x1704B6905BACBF0,
                0x1A15519B83CC1B0,
                0x1D8E64B8D4DDAE0,
                0x217DD8D6D111900,
                0x25F37105E8FD020,
                0x2B010999C440360,
                0x30BADFB263C1760,
                0x3737E24BA174BA0,
                0x3E920E17B7D1FA0,
                0x46E6D594B5A1100,
                0x505796FDBEC4180,
                0x5B0A21F07C5A480,
                0x67294EDE04452C0,
                0x74E5AAA5C5B58C0,
                0x84763909CB5ED80,
                0x9619510727C2A00,
                0xAA1596851337380,
                0xC0BB1542C537D00,
                0xDA64817139D2C00,
                0xF778A2FCF5FC400,
                0x1186BF136D679D00,
                0x13DC2654CB1CC800,
                0x168118ADE1DEAA00,
                0x19802D6F26E04600,
                0x1CE564EAEDF51C00,
                0x20BE5886B5709800,
                0x251A7132E0671E00,
                0x2A0B252306E30C00,
                0x2FA43DBE0FA49E00,
                0x35FC26DE31203A00,
                0x3D2C489E4377EC00,
                0x45516D1C10845000,
                0x4E8C33C732ECF800,
                0x5901940A599F9800,
    };
    #endif // (defined(TINYMIND_USE_EXP_10_54))
    #if (defined(TINYMIND_USE_EXP_11_53))
    const uint64_t ExpValuesTableQ11_53::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144E51F113D4,
                0x170277E69D23,
                0x1A12C66DCD95,
                0x1D8B82D70B71,
                0x217A94B594EE,
                0x25EFBD9059C6,
                0x2AFCD7FD1BCA,
                0x30B61F22972F,
                0x37327FC01AA6,
                0x3E8BF3FF19A8,
                0x46DFEB7E79C2,
                0x504FC13852E8,
                0x5B01411A5710,
                0x671F3F67F4F1,
                0x74DA4444885D,
                0x84694E14A5D9,
                0x960AADC109E7,
                0xAA05004D5D97,
                0xC0A849AA7869,
                0xDA4F3530E1D5,
                0xF76080C727FB,
                0x1185098628955,
                0x13DA368521902,
                0x167EE6D9FF847,
                0x197DB0CCCEB0A,
                0x1CE293844545B,
                0x20BB27125F402,
                0x2516D2E6C8DB0,
                0x2A070B8129E84,
                0x2F9F985A6D8A2,
                0x35F6E31D08AFE,
                0x3D2651698A1ED,
                0x454AAA8EFE073,
                0x4E848ACE8E675,
                0x58F8E5F80881C,
                0x64D19B6A67B99,
                0x723E1DC92D707,
                0x817431063B016,
                0x92B0C1B952C27,
                0xA638D923BD590,
                0xBC5AB1B16779C,
                0xD56EF04AED6A5,
                0xF1DA075F7E6BF,
                0x1120DC934993E8,
                0x1368B2FC6F960A,
                0x15FE4615E98E8F,
                0x18EBEF9EAC820B,
                0x1C3D6A24ED8222,
                0x20000000000000,
                0x2442C08B6DEB9A,
                0x2916BC787D030C,
                0x2E8F4A27B7DED4,
                0x34C2531C3C0D38,
                0x3BC8ABBF01C780,
                0x43BE76D19F73E0,
                0x4CC3961ED8ACA0,
                0x56FC2A2C515DA4,
                0x629122ECD61DA0,
                0x6FB0E3B6C3EBC0,
                0x7E8FFD0F43ABE4,
                0x8F69FF327E2A08,
                0xA28268A4024FF0,
                0xB825B482DD65F8,
                0xD0AA8CDC1E60D8,
                0xEC7325C6A6ED70,
                0x10BEEC6B6888C80,
                0x12F9B882F47E810,
                0x158084CCE2201B0,
                0x185D6FD931E0BB0,
                0x1B9BF125D0BA5D0,
                0x1F49070BDBE8FD0,
                0x23736ACA5AD0880,
                0x282BCB7EDF620C0,
                0x2D8510F83E2D240,
                0x3394A76F0222960,
                0x3A72D552E2DAC60,
                0x423B1C84E5AF6C0,
                0x4B0CA88393E1500,
                0x550ACB42899B9C0,
                0x605D8AA1629BE80,
                0x6D3240B89CE9600,
                0x7BBC517E7AFE200,
                0x8C35F89B6B3CE80,
                0x9EE132A658E6400,
                0xB408C56F0EF5500,
                0xCC016B793702300,
                0xE72B27576FA8E00,
                0x105F2C435AB84C00,
                0x128D389970338F00,
                0x1505929183718600,
                0x17D21EDF07D24F00,
                0x1AFE136F18901D00,
                0x1E96244F21BBF600,
                0x22A8B68E08422800,
                0x274619E399767C00,
                0x2C80CA052CCFCC00,
    };
    #endif // (defined(TINYMIND_USE_EXP_11_53))
    #if (defined(TINYMIND_USE_EXP_12_52))
    const uint64_t ExpValuesTableQ12_52::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA2728F889EA,
                0xB813BF34E91,
                0xD096336E6CA,
                0xEC5C16B85B8,
                0x10BD4A5ACA77,
                0x12F7DEC82CE3,
                0x157E6BFE8DE5,
                0x185B0F914B97,
                0x1B993FE00D53,
                0x1F45F9FF8CD4,
                0x236FF5BF3CE1,
                0x2827E09C2974,
                0x2D80A08D2B88,
                0x338F9FB3FA78,
                0x3A6D2222442E,
                0x4234A70A52EC,
                0x4B0556E084F3,
                0x55028026AECB,
                0x605424D53C34,
                0x6D279A9870EA,
                0x7BB0406393FD,
                0x8C284C3144AA,
                0x9ED1B4290C81,
                0xB3F736CFFC23,
                0xCBED86667585,
                0xE7149C222A2D,
                0x105D93892FA01,
                0x128B6973646D8,
                0x150385C094F42,
                0x17CFCC2D36C51,
                0x1AFB718E8457F,
                0x1E9328B4C50F6,
                0x22A555477F039,
                0x274245674733A,
                0x2C7C72FC0440E,
                0x3268CDB533DCC,
                0x391F0EE496B83,
                0x40BA18831D80B,
                0x495860DCA9613,
                0x531C6C91DEAC8,
                0x5E2D58D8B3BCE,
                0x6AB7782576B52,
                0x78ED03AFBF35F,
                0x8906E49A4C9F4,
                0x9B4597E37CB05,
                0xAFF230AF4C747,
                0xC75F7CF564105,
                0xE1EB51276C111,
                0x10000000000000,
                0x12216045B6F5CD,
                0x148B5E3C3E8186,
                0x1747A513DBEF6A,
                0x1A61298E1E069C,
                0x1DE455DF80E3C0,
                0x21DF3B68CFB9F0,
                0x2661CB0F6C5650,
                0x2B7E151628AED2,
                0x314891766B0ED0,
                0x37D871DB61F5E0,
                0x3F47FE87A1D5F2,
                0x47B4FF993F1504,
                0x514134520127F8,
                0x5C12DA416EB2FC,
                0x6855466E0F306C,
                0x763992E35376B8,
                0x85F7635B444640,
                0x97CDC417A3F408,
                0xAC0426671100D8,
                0xC2EB7EC98F05D8,
                0xDCDF892E85D2E8,
                0xFA48385EDF47E8,
                0x11B9B5652D68440,
                0x1415E5BF6FB1060,
                0x16C2887C1F16920,
                0x19CA53B781114B0,
                0x1D396AA9716D630,
                0x211D8E4272D7B60,
                0x25865441C9F0A80,
                0x2A8565A144CDCE0,
                0x302EC550B14DF40,
                0x3699205C4E74B00,
                0x3DDE28BF3D7F100,
                0x461AFC4DB59E740,
                0x4F7099532C73200,
                0x5A0462B7877AA80,
                0x6600B5BC9B81180,
                0x739593ABB7D4700,
                0x82F9621AD5C2600,
                0x9469C4CB819C780,
                0xA82C948C1B8C300,
                0xBE90F6F83E92780,
                0xD7F09B78C480E80,
                0xF4B122790DDFB00,
                0x11545B4704211400,
                0x13A30CF1CCBB3E00,
                0x164065029667E600,
    };
    #endif // (defined(TINYMIND_USE_EXP_12_52))
    #if (defined(TINYMIND_USE_EXP_13_51))
    const uint64_t ExpValuesTableQ13_51::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x513947C44F5,
                0x5C09DF9A748,
                0x684B19B7365,
                0x762E0B5C2DC,
                0x85EA52D653B,
                0x97BEF641671,
                0xABF35FF46F2,
                0xC2D87C8A5CB,
                0xDCC9FF006A9,
                0xFA2FCFFC66A,
                0x11B7FADF9E70,
                0x1413F04E14BA,
                0x16C0504695C4,
                0x19C7CFD9FD3C,
                0x1D3691112217,
                0x211A53852976,
                0x2582AB704279,
                0x2A8140135765,
                0x302A126A9E1A,
                0x3693CD4C3875,
                0x3DD82031C9FE,
                0x46142618A255,
                0x4F68DA148640,
                0x59FB9B67FE11,
                0x65F6C3333AC2,
                0x738A4E111516,
                0x82EC9C497D00,
                0x945B4B9B236C,
                0xA81C2E04A7A1,
                0xBE7E6169B628,
                0xD7DB8C7422BF,
                0xF49945A6287B,
                0x1152AAA3BF81C,
                0x13A122B3A399D,
                0x163E397E02207,
                0x193466DA99EE6,
                0x1C8F87724B5C1,
                0x205D0C418EC05,
                0x24AC306E54B09,
                0x298E3648EF564,
                0x2F16AC6C59DE7,
                0x355BBC12BB5A9,
                0x3C7681D7DF9AF,
                0x4483724D264FA,
                0x4DA2CBF1BE582,
                0x57F91857A63A3,
                0x63AFBE7AB2082,
                0x70F5A893B6088,
                0x8000000000000,
                0x910B022DB7AE6,
                0xA45AF1E1F40C3,
                0xBA3D289EDF7B5,
                0xD3094C70F034E,
                0xEF22AEFC071E0,
                0x10EF9DB467DCF8,
                0x1330E587B62B28,
                0x15BF0A8B145769,
                0x18A448BB358768,
                0x1BEC38EDB0FAF0,
                0x1FA3FF43D0EAF9,
                0x23DA7FCC9F8A82,
                0x28A09A290093FC,
                0x2E096D20B7597E,
                0x342AA337079836,
                0x3B1CC971A9BB5C,
                0x42FBB1ADA22320,
                0x4BE6E20BD1FA04,
                0x5602133388806C,
                0x6175BF64C782EC,
                0x6E6FC49742E974,
                0x7D241C2F6FA3F4,
                0x8DCDAB296B4220,
                0xA0AF2DFB7D8830,
                0xB61443E0F8B490,
                0xCE529DBC088A58,
                0xE9CB554B8B6B18,
                0x108EC721396BDB0,
                0x12C32A20E4F8540,
                0x1542B2D0A266E70,
                0x181762A858A6FA0,
                0x1B4C902E273A580,
                0x1EEF145F9EBF880,
                0x230D7E26DACF3A0,
                0x27B84CA99639900,
                0x2D02315BC3BD540,
                0x33005ADE4DC08C0,
                0x39CAC9D5DBEA380,
                0x417CB10D6AE1300,
                0x4A34E265C0CE3C0,
                0x54164A460DC6180,
                0x5F487B7C1F493C0,
                0x6BF84DBC6240740,
                0x7A58913C86EFD80,
                0x8AA2DA382108A00,
                0x9D18678E65D9F00,
                0xB2032814B33F300,
    };
    #endif // (defined(TINYMIND_USE_EXP_13_51))
    #if (defined(TINYMIND_USE_EXP_14_50))
    const uint64_t ExpValuesTableQ14_50::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289CA3E227A,
                0x2E04EFCD3A4,
                0x34258CDB9B2,
                0x3B1705AE16E,
                0x42F5296B29D,
                0x4BDF7B20B38,
                0x55F9AFFA379,
                0x616C3E452E5,
                0x6E64FF80354,
                0x7D17E7FE335,
                0x8DBFD6FCF38,
                0xA09F8270A5D,
                0xB6028234AE2,
                0xCE3E7ECFE9E,
                0xE9B4888910B,
                0x108D29C294BB,
                0x12C155B8213C,
                0x1540A009ABB2,
                0x181509354F0D,
                0x1B49E6A61C3A,
                0x1EEC1018E4FF,
                0x230A130C512A,
                0x27B46D0A4320,
                0x2CFDCDB3FF08,
                0x32FB61999D61,
                0x39C527088A8B,
                0x41764E24BE80,
                0x4A2DA5CD91B6,
                0x540E170253D0,
                0x5F3F30B4DB14,
                0x6BEDC63A115F,
                0x7A4CA2D3143D,
                0x8A95551DFC0E,
                0x9D09159D1CCE,
                0xB1F1CBF01103,
                0xC9A336D4CF73,
                0xE47C3B925AE0,
                0x102E8620C7602,
                0x125618372A584,
                0x14C71B2477AB2,
                0x178B56362CEF3,
                0x1AADDE095DAD4,
                0x1E3B40EBEFCD7,
                0x2241B9269327D,
                0x26D165F8DF2C1,
                0x2BFC8C2BD31D1,
                0x31D7DF3D59041,
                0x387AD449DB044,
                0x4000000000000,
                0x48858116DBD73,
                0x522D78F0FA061,
                0x5D1E944F6FBDA,
                0x6984A638781A7,
                0x7791577E038F0,
                0x877CEDA33EE7C,
                0x99872C3DB1594,
                0xADF85458A2BB4,
                0xC52245D9AC3B4,
                0xDF61C76D87D78,
                0xFD1FFA1E8757C,
                0x11ED3FE64FC541,
                0x14504D148049FE,
                0x1704B6905BACBF,
                0x1A15519B83CC1B,
                0x1D8E64B8D4DDAE,
                0x217DD8D6D11190,
                0x25F37105E8FD02,
                0x2B010999C44036,
                0x30BADFB263C176,
                0x3737E24BA174BA,
                0x3E920E17B7D1FA,
                0x46E6D594B5A110,
                0x505796FDBEC418,
                0x5B0A21F07C5A48,
                0x67294EDE04452C,
                0x74E5AAA5C5B58C,
                0x84763909CB5ED8,
                0x9619510727C2A0,
                0xAA159685133738,
                0xC0BB1542C537D0,
                0xDA64817139D2C0,
                0xF778A2FCF5FC40,
                0x1186BF136D679D0,
                0x13DC2654CB1CC80,
                0x168118ADE1DEAA0,
                0x19802D6F26E0460,
                0x1CE564EAEDF51C0,
                0x20BE5886B570980,
                0x251A7132E0671E0,
                0x2A0B252306E30C0,
                0x2FA43DBE0FA49E0,
                0x35FC26DE31203A0,
                0x3D2C489E4377EC0,
                0x45516D1C1084500,
                0x4E8C33C732ECF80,
                0x5901940A599F980,
    };
    #endif // (defined(TINYMIND_USE_EXP_14_50))
    #if (defined(TINYMIND_USE_EXP_15_49))
    const uint64_t ExpValuesTableQ15_49::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144E51F113D,
                0x170277E69D2,
                0x1A12C66DCD9,
                0x1D8B82D70B7,
                0x217A94B594E,
                0x25EFBD9059C,
                0x2AFCD7FD1BC,
                0x30B61F22972,
                0x37327FC01AA,
                0x3E8BF3FF19A,
                0x46DFEB7E79C,
                0x504FC13852E,
                0x5B01411A571,
                0x671F3F67F4F,
                0x74DA4444885,
                0x84694E14A5D,
                0x960AADC109E,
                0xAA05004D5D9,
                0xC0A849AA786,
                0xDA4F3530E1D,
                0xF76080C727F,
                0x118509862895,
                0x13DA36852190,
                0x167EE6D9FF84,
                0x197DB0CCCEB0,
                0x1CE293844545,
                0x20BB27125F40,
                0x2516D2E6C8DB,
                0x2A070B8129E8,
                0x2F9F985A6D8A,
                0x35F6E31D08AF,
                0x3D2651698A1E,
                0x454AAA8EFE07,
                0x4E848ACE8E67,
                0x58F8E5F80881,
                0x64D19B6A67B9,
                0x723E1DC92D70,
                0x817431063B01,
                0x92B0C1B952C2,
                0xA638D923BD59,
                0xBC5AB1B16779,
                0xD56EF04AED6A,
                0xF1DA075F7E6B,
                0x1120DC934993E,
                0x1368B2FC6F960,
                0x15FE4615E98E8,
                0x18EBEF9EAC820,
                0x1C3D6A24ED822,
                0x2000000000000,
                0x2442C08B6DEB9,
                0x2916BC787D030,
                0x2E8F4A27B7DED,
                0x34C2531C3C0D3,
                0x3BC8ABBF01C78,
                0x43BE76D19F73E,
                0x4CC3961ED8ACA,
                0x56FC2A2C515DA,
                0x629122ECD61DA,
                0x6FB0E3B6C3EBC,
                0x7E8FFD0F43ABE,
                0x8F69FF327E2A0,
                0xA28268A4024FF,
                0xB825B482DD65F,
                0xD0AA8CDC1E60D,
                0xEC7325C6A6ED7,
                0x10BEEC6B6888C8,
                0x12F9B882F47E81,
                0x158084CCE2201B,
                0x185D6FD931E0BB,
                0x1B9BF125D0BA5D,
                0x1F49070BDBE8FD,
                0x23736ACA5AD088,
                0x282BCB7EDF620C,
                0x2D8510F83E2D24,
                0x3394A76F022296,
                0x3A72D552E2DAC6,
                0x423B1C84E5AF6C,
                0x4B0CA88393E150,
                0x550ACB42899B9C,
                0x605D8AA1629BE8,
                0x6D3240B89CE960,
                0x7BBC517E7AFE20,
                0x8C35F89B6B3CE8,
                0x9EE132A658E640,
                0xB408C56F0EF550,
                0xCC016B79370230,
                0xE72B27576FA8E0,
                0x105F2C435AB84C0,
                0x128D389970338F0,
                0x150592918371860,
                0x17D21EDF07D24F0,
                0x1AFE136F18901D0,
                0x1E96244F21BBF60,
                0x22A8B68E0842280,
                0x274619E399767C0,
                0x2C80CA052CCFCC0,
    };
    #endif // (defined(TINYMIND_USE_EXP_15_49))
    #if (defined(TINYMIND_USE_EXP_16_48))
    const uint64_t ExpValuesTableQ16_48::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA2728F889E,
                0xB813BF34E9,
                0xD096336E6C,
                0xEC5C16B85B,
                0x10BD4A5ACA7,
                0x12F7DEC82CE,
                0x157E6BFE8DE,
                0x185B0F914B9,
                0x1B993FE00D5,
                0x1F45F9FF8CD,
                0x236FF5BF3CE,
                0x2827E09C297,
                0x2D80A08D2B8,
                0x338F9FB3FA7,
                0x3A6D2222442,
                0x4234A70A52E,
                0x4B0556E084F,
                0x55028026AEC,
                0x605424D53C3,
                0x6D279A9870E,
                0x7BB0406393F,
                0x8C284C3144A,
                0x9ED1B4290C8,
                0xB3F736CFFC2,
                0xCBED8666758,
                0xE7149C222A2,
                0x105D93892FA0,
                0x128B6973646D,
                0x150385C094F4,
                0x17CFCC2D36C5,
                0x1AFB718E8457,
                0x1E9328B4C50F,
                0x22A555477F03,
                0x274245674733,
                0x2C7C72FC0440,
                0x3268CDB533DC,
                0x391F0EE496B8,
                0x40BA18831D80,
                0x495860DCA961,
                0x531C6C91DEAC,
                0x5E2D58D8B3BC,
                0x6AB7782576B5,
                0x78ED03AFBF35,
                0x8906E49A4C9F,
                0x9B4597E37CB0,
                0xAFF230AF4C74,
                0xC75F7CF56410,
                0xE1EB51276C11,
                0x1000000000000,
                0x12216045B6F5C,
                0x148B5E3C3E818,
                0x1747A513DBEF6,
                0x1A61298E1E069,
                0x1DE455DF80E3C,
                0x21DF3B68CFB9F,
                0x2661CB0F6C565,
                0x2B7E151628AED,
                0x314891766B0ED,
                0x37D871DB61F5E,
                0x3F47FE87A1D5F,
                0x47B4FF993F150,
                0x514134520127F,
                0x5C12DA416EB2F,
                0x6855466E0F306,
                0x763992E35376B,
                0x85F7635B44464,
                0x97CDC417A3F40,
                0xAC0426671100D,
                0xC2EB7EC98F05D,
                0xDCDF892E85D2E,
                0xFA48385EDF47E,
                0x11B9B5652D6844,
                0x1415E5BF6FB106,
                0x16C2887C1F1692,
                0x19CA53B781114B,
                0x1D396AA9716D63,
                0x211D8E4272D7B6,
                0x25865441C9F0A8,
                0x2A8565A144CDCE,
                0x302EC550B14DF4,
                0x3699205C4E74B0,
                0x3DDE28BF3D7F10,
                0x461AFC4DB59E74,
                0x4F7099532C7320,
                0x5A0462B7877AA8,
                0x6600B5BC9B8118,
                0x739593ABB7D470,
                0x82F9621AD5C260,
                0x9469C4CB819C78,
                0xA82C948C1B8C30,
                0xBE90F6F83E9278,
                0xD7F09B78C480E8,
                0xF4B122790DDFB0,
                0x11545B470421140,
                0x13A30CF1CCBB3E0,
                0x164065029667E60,
    };
    #endif // (defined(TINYMIND_USE_EXP_16_48))
    #if (defined(TINYMIND_USE_EXP_17_47))
    const uint64_t ExpValuesTableQ17_47::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x513947C44F,
                0x5C09DF9A74,
                0x684B19B736,
                0x762E0B5C2D,
                0x85EA52D653,
                0x97BEF64167,
                0xABF35FF46F,
                0xC2D87C8A5C,
                0xDCC9FF006A,
                0xFA2FCFFC66,
                0x11B7FADF9E7,
                0x1413F04E14B,
                0x16C0504695C,
                0x19C7CFD9FD3,
                0x1D369111221,
                0x211A5385297,
                0x2582AB70427,
                0x2A814013576,
                0x302A126A9E1,
                0x3693CD4C387,
                0x3DD82031C9F,
                0x46142618A25,
                0x4F68DA14864,
                0x59FB9B67FE1,
                0x65F6C3333AC,
                0x738A4E11151,
                0x82EC9C497D0,
                0x945B4B9B236,
                0xA81C2E04A7A,
                0xBE7E6169B62,
                0xD7DB8C7422B,
                0xF49945A6287,
                0x1152AAA3BF81,
                0x13A122B3A399,
                0x163E397E0220,
                0x193466DA99EE,
                0x1C8F87724B5C,
                0x205D0C418EC0,
                0x24AC306E54B0,
                0x298E3648EF56,
                0x2F16AC6C59DE,
                0x355BBC12BB5A,
                0x3C7681D7DF9A,
                0x4483724D264F,
                0x4DA2CBF1BE58,
                0x57F91857A63A,
                0x63AFBE7AB208,
                0x70F5A893B608,
                0x800000000000,
                0x910B022DB7AE,
                0xA45AF1E1F40C,
                0xBA3D289EDF7B,
                0xD3094C70F034,
                0xEF22AEFC071E,
                0x10EF9DB467DCF,
                0x1330E587B62B2,
                0x15BF0A8B14576,
                0x18A448BB35876,
                0x1BEC38EDB0FAF,
                0x1FA3FF43D0EAF,
                0x23DA7FCC9F8A8,
                0x28A09A290093F,
                0x2E096D20B7597,
                0x342AA33707983,
                0x3B1CC971A9BB5,
                0x42FBB1ADA2232,
                0x4BE6E20BD1FA0,
                0x5602133388806,
                0x6175BF64C782E,
                0x6E6FC49742E97,
                0x7D241C2F6FA3F,
                0x8DCDAB296B422,
                0xA0AF2DFB7D883,
                0xB61443E0F8B49,
                0xCE529DBC088A5,
                0xE9CB554B8B6B1,
                0x108EC721396BDB,
                0x12C32A20E4F854,
                0x1542B2D0A266E7,
                0x181762A858A6FA,
                0x1B4C902E273A58,
                0x1EEF145F9EBF88,
                0x230D7E26DACF3A,
                0x27B84CA9963990,
                0x2D02315BC3BD54,
                0x33005ADE4DC08C,
                0x39CAC9D5DBEA38,
                0x417CB10D6AE130,
                0x4A34E265C0CE3C,
                0x54164A460DC618,
                0x5F487B7C1F493C,
                0x6BF84DBC624074,
                0x7A58913C86EFD8,
                0x8AA2DA382108A0,
                0x9D18678E65D9F0,
                0xB2032814B33F30,
    };
    #endif // (defined(TINYMIND_USE_EXP_17_47))
    #if (defined(TINYMIND_USE_EXP_18_46))
    const uint64_t ExpValuesTableQ18_46::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289CA3E227,
                0x2E04EFCD3A,
                0x34258CDB9B,
                0x3B1705AE16,
                0x42F5296B29,
                0x4BDF7B20B3,
                0x55F9AFFA37,
                0x616C3E452E,
                0x6E64FF8035,
                0x7D17E7FE33,
                0x8DBFD6FCF3,
                0xA09F8270A5,
                0xB6028234AE,
                0xCE3E7ECFE9,
                0xE9B4888910,
                0x108D29C294B,
                0x12C155B8213,
                0x1540A009ABB,
                0x181509354F0,
                0x1B49E6A61C3,
                0x1EEC1018E4F,
                0x230A130C512,
                0x27B46D0A432,
                0x2CFDCDB3FF0,
                0x32FB61999D6,
                0x39C527088A8,
                0x41764E24BE8,
                0x4A2DA5CD91B,
                0x540E170253D,
                0x5F3F30B4DB1,
                0x6BEDC63A115,
                0x7A4CA2D3143,
                0x8A95551DFC0,
                0x9D09159D1CC,
                0xB1F1CBF0110,
                0xC9A336D4CF7,
                0xE47C3B925AE,
                0x102E8620C760,
                0x125618372A58,
                0x14C71B2477AB,
                0x178B56362CEF,
                0x1AADDE095DAD,
                0x1E3B40EBEFCD,
                0x2241B9269327,
                0x26D165F8DF2C,
                0x2BFC8C2BD31D,
                0x31D7DF3D5904,
                0x387AD449DB04,
                0x400000000000,
                0x48858116DBD7,
                0x522D78F0FA06,
                0x5D1E944F6FBD,
                0x6984A638781A,
                0x7791577E038F,
                0x877CEDA33EE7,
                0x99872C3DB159,
                0xADF85458A2BB,
                0xC52245D9AC3B,
                0xDF61C76D87D7,
                0xFD1FFA1E8757,
                0x11ED3FE64FC54,
                0x14504D148049F,
                0x1704B6905BACB,
                0x1A15519B83CC1,
                0x1D8E64B8D4DDA,
                0x217DD8D6D1119,
                0x25F37105E8FD0,
                0x2B010999C4403,
                0x30BADFB263C17,
                0x3737E24BA174B,
                0x3E920E17B7D1F,
                0x46E6D594B5A11,
                0x505796FDBEC41,
                0x5B0A21F07C5A4,
                0x67294EDE04452,
                0x74E5AAA5C5B58,
                0x84763909CB5ED,
                0x9619510727C2A,
                0xAA15968513373,
                0xC0BB1542C537D,
                0xDA64817139D2C,
                0xF778A2FCF5FC4,
                0x1186BF136D679D,
                0x13DC2654CB1CC8,
                0x168118ADE1DEAA,
                0x19802D6F26E046,
                0x1CE564EAEDF51C,
                0x20BE5886B57098,
                0x251A7132E0671E,
                0x2A0B252306E30C,
                0x2FA43DBE0FA49E,
                0x35FC26DE31203A,
                0x3D2C489E4377EC,
                0x45516D1C108450,
                0x4E8C33C732ECF8,
                0x5901940A599F98,
    };
    #endif // (defined(TINYMIND_USE_EXP_18_46))
    #if (defined(TINYMIND_USE_EXP_19_45))
    const uint64_t ExpValuesTableQ19_45::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144E51F113,
                0x170277E69D,
                0x1A12C66DCD,
                0x1D8B82D70B,
                0x217A94B594,
                0x25EFBD9059,
                0x2AFCD7FD1B,
                0x30B61F2297,
                0x37327FC01A,
                0x3E8BF3FF19,
                0x46DFEB7E79,
                0x504FC13852,
                0x5B01411A57,
                0x671F3F67F4,
                0x74DA444488,
                0x84694E14A5,
                0x960AADC109,
                0xAA05004D5D,
                0xC0A849AA78,
                0xDA4F3530E1,
                0xF76080C727,
                0x11850986289,
                0x13DA3685219,
                0x167EE6D9FF8,
                0x197DB0CCCEB,
                0x1CE29384454,
                0x20BB27125F4,
                0x2516D2E6C8D,
                0x2A070B8129E,
                0x2F9F985A6D8,
                0x35F6E31D08A,
                0x3D2651698A1,
                0x454AAA8EFE0,
                0x4E848ACE8E6,
                0x58F8E5F8088,
                0x64D19B6A67B,
                0x723E1DC92D7,
                0x817431063B0,
                0x92B0C1B952C,
                0xA638D923BD5,
                0xBC5AB1B1677,
                0xD56EF04AED6,
                0xF1DA075F7E6,
                0x1120DC934993,
                0x1368B2FC6F96,
                0x15FE4615E98E,
                0x18EBEF9EAC82,
                0x1C3D6A24ED82,
                0x200000000000,
                0x2442C08B6DEB,
                0x2916BC787D03,
                0x2E8F4A27B7DE,
                0x34C2531C3C0D,
                0x3BC8ABBF01C7,
                0x43BE76D19F73,
                0x4CC3961ED8AC,
                0x56FC2A2C515D,
                0x629122ECD61D,
                0x6FB0E3B6C3EB,
                0x7E8FFD0F43AB,
                0x8F69FF327E2A,
                0xA28268A4024F,
                0xB825B482DD65,
                0xD0AA8CDC1E60,
                0xEC7325C6A6ED,
                0x10BEEC6B6888C,
                0x12F9B882F47E8,
                0x158084CCE2201,
                0x185D6FD931E0B,
                0x1B9BF125D0BA5,
                0x1F49070BDBE8F,
                0x23736ACA5AD08,
                0x282BCB7EDF620,
                0x2D8510F83E2D2,
                0x3394A76F02229,
                0x3A72D552E2DAC,
                0x423B1C84E5AF6,
                0x4B0CA88393E15,
                0x550ACB42899B9,
                0x605D8AA1629BE,
                0x6D3240B89CE96,
                0x7BBC517E7AFE2,
                0x8C35F89B6B3CE,
                0x9EE132A658E64,
                0xB408C56F0EF55,
                0xCC016B7937023,
                0xE72B27576FA8E,
                0x105F2C435AB84C,
                0x128D389970338F,
                0x15059291837186,
                0x17D21EDF07D24F,
                0x1AFE136F18901D,
                0x1E96244F21BBF6,
                0x22A8B68E084228,
                0x274619E399767C,
                0x2C80CA052CCFCC,
    };
    #endif // (defined(TINYMIND_USE_EXP_19_45))
    #if (defined(TINYMIND_USE_EXP_20_44))
    const uint64_t ExpValuesTableQ20_44::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA2728F889,
                0xB813BF34E,
                0xD096336E6,
                0xEC5C16B85,
                0x10BD4A5ACA,
                0x12F7DEC82C,
                0x157E6BFE8D,
                0x185B0F914B,
                0x1B993FE00D,
                0x1F45F9FF8C,
                0x236FF5BF3C,
                0x2827E09C29,
                0x2D80A08D2B,
                0x338F9FB3FA,
                0x3A6D222244,
                0x4234A70A52,
                0x4B0556E084,
                0x55028026AE,
                0x605424D53C,
                0x6D279A9870,
                0x7BB0406393,
                0x8C284C3144,
                0x9ED1B4290C,
                0xB3F736CFFC,
                0xCBED866675,
                0xE7149C222A,
                0x105D93892FA,
                0x128B6973646,
                0x150385C094F,
                0x17CFCC2D36C,
                0x1AFB718E845,
                0x1E9328B4C50,
                0x22A555477F0,
                0x27424567473,
                0x2C7C72FC044,
                0x3268CDB533D,
                0x391F0EE496B,
                0x40BA18831D8,
                0x495860DCA96,
                0x531C6C91DEA,
                0x5E2D58D8B3B,
                0x6AB7782576B,
                0x78ED03AFBF3,
                0x8906E49A4C9,
                0x9B4597E37CB,
                0xAFF230AF4C7,
                0xC75F7CF5641,
                0xE1EB51276C1,
                0x100000000000,
                0x12216045B6F5,
                0x148B5E3C3E81,
                0x1747A513DBEF,
                0x1A61298E1E06,
                0x1DE455DF80E3,
                0x21DF3B68CFB9,
                0x2661CB0F6C56,
                0x2B7E151628AE,
                0x314891766B0E,
                0x37D871DB61F5,
                0x3F47FE87A1D5,
                0x47B4FF993F15,
                0x514134520127,
                0x5C12DA416EB2,
                0x6855466E0F30,
                0x763992E35376,
                0x85F7635B4446,
                0x97CDC417A3F4,
                0xAC0426671100,
                0xC2EB7EC98F05,
                0xDCDF892E85D2,
                0xFA48385EDF47,
                0x11B9B5652D684,
                0x1415E5BF6FB10,
                0x16C2887C1F169,
                0x19CA53B781114,
                0x1D396AA9716D6,
                0x211D8E4272D7B,
                0x25865441C9F0A,
                0x2A8565A144CDC,
                0x302EC550B14DF,
                0x3699205C4E74B,
                0x3DDE28BF3D7F1,
                0x461AFC4DB59E7,
                0x4F7099532C732,
                0x5A0462B7877AA,
                0x6600B5BC9B811,
                0x739593ABB7D47,
                0x82F9621AD5C26,
                0x9469C4CB819C7,
                0xA82C948C1B8C3,
                0xBE90F6F83E927,
                0xD7F09B78C480E,
                0xF4B122790DDFB,
                0x11545B47042114,
                0x13A30CF1CCBB3E,
                0x164065029667E6,
    };
    #endif // (defined(TINYMIND_USE_EXP_20_44))
    #if (defined(TINYMIND_USE_EXP_21_43))
    const uint64_t ExpValuesTableQ21_43::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x513947C44,
                0x5C09DF9A7,
                0x684B19B73,
                0x762E0B5C2,
                0x85EA52D65,
                0x97BEF6416,
                0xABF35FF46,
                0xC2D87C8A5,
                0xDCC9FF006,
                0xFA2FCFFC6,
                0x11B7FADF9E,
                0x1413F04E14,
                0x16C0504695,
                0x19C7CFD9FD,
                0x1D36911122,
                0x211A538529,
                0x2582AB7042,
                0x2A81401357,
                0x302A126A9E,
                0x3693CD4C38,
                0x3DD82031C9,
                0x46142618A2,
                0x4F68DA1486,
                0x59FB9B67FE,
                0x65F6C3333A,
                0x738A4E1115,
                0x82EC9C497D,
                0x945B4B9B23,
                0xA81C2E04A7,
                0xBE7E6169B6,
                0xD7DB8C7422,
                0xF49945A628,
                0x1152AAA3BF8,
                0x13A122B3A39,
                0x163E397E022,
                0x193466DA99E,
                0x1C8F87724B5,
                0x205D0C418EC,
                0x24AC306E54B,
                0x298E3648EF5,
                0x2F16AC6C59D,
                0x355BBC12BB5,
                0x3C7681D7DF9,
                0x4483724D264,
                0x4DA2CBF1BE5,
                0x57F91857A63,
                0x63AFBE7AB20,
                0x70F5A893B60,
                0x80000000000,
                0x910B022DB7A,
                0xA45AF1E1F40,
                0xBA3D289EDF7,
                0xD3094C70F03,
                0xEF22AEFC071,
                0x10EF9DB467DC,
                0x1330E587B62B,
                0x15BF0A8B1457,
                0x18A448BB3587,
                0x1BEC38EDB0FA,
                0x1FA3FF43D0EA,
                0x23DA7FCC9F8A,
                0x28A09A290093,
                0x2E096D20B759,
                0x342AA3370798,
                0x3B1CC971A9BB,
                0x42FBB1ADA223,
                0x4BE6E20BD1FA,
                0x560213338880,
                0x6175BF64C782,
                0x6E6FC49742E9,
                0x7D241C2F6FA3,
                0x8DCDAB296B42,
                0xA0AF2DFB7D88,
                0xB61443E0F8B4,
                0xCE529DBC088A,
                0xE9CB554B8B6B,
                0x108EC721396BD,
                0x12C32A20E4F85,
                0x1542B2D0A266E,
                0x181762A858A6F,
                0x1B4C902E273A5,
                0x1EEF145F9EBF8,
                0x230D7E26DACF3,
                0x27B84CA996399,
                0x2D02315BC3BD5,
                0x33005ADE4DC08,
                0x39CAC9D5DBEA3,
                0x417CB10D6AE13,
                0x4A34E265C0CE3,
                0x54164A460DC61,
                0x5F487B7C1F493,
                0x6BF84DBC62407,
                0x7A58913C86EFD,
                0x8AA2DA382108A,
                0x9D18678E65D9F,
                0xB2032814B33F3,
    };
    #endif // (defined(TINYMIND_USE_EXP_21_43))
    #if (defined(TINYMIND_USE_EXP_22_42))
    const uint64_t ExpValuesTableQ22_42::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289CA3E22,
                0x2E04EFCD3,
                0x34258CDB9,
                0x3B1705AE1,
                0x42F5296B2,
                0x4BDF7B20B,
                0x55F9AFFA3,
                0x616C3E452,
                0x6E64FF803,
                0x7D17E7FE3,
                0x8DBFD6FCF,
                0xA09F8270A,
                0xB6028234A,
                0xCE3E7ECFE,
                0xE9B488891,
                0x108D29C294,
                0x12C155B821,
                0x1540A009AB,
                0x181509354F,
                0x1B49E6A61C,
                0x1EEC1018E4,
                0x230A130C51,
                0x27B46D0A43,
                0x2CFDCDB3FF,
                0x32FB61999D,
                0x39C527088A,
                0x41764E24BE,
                0x4A2DA5CD91,
                0x540E170253,
                0x5F3F30B4DB,
                0x6BEDC63A11,
                0x7A4CA2D314,
                0x8A95551DFC,
                0x9D09159D1C,
                0xB1F1CBF011,
                0xC9A336D4CF,
                0xE47C3B925A,
                0x102E8620C76,
                0x125618372A5,
                0x14C71B2477A,
                0x178B56362CE,
                0x1AADDE095DA,
                0x1E3B40EBEFC,
                0x2241B926932,
                0x26D165F8DF2,
                0x2BFC8C2BD31,
                0x31D7DF3D590,
                0x387AD449DB0,
                0x40000000000,
                0x48858116DBD,
                0x522D78F0FA0,
                0x5D1E944F6FB,
                0x6984A638781,
                0x7791577E038,
                0x877CEDA33EE,
                0x99872C3DB15,
                0xADF85458A2B,
                0xC52245D9AC3,
                0xDF61C76D87D,
                0xFD1FFA1E875,
                0x11ED3FE64FC5,
                0x14504D148049,
                0x1704B6905BAC,
                0x1A15519B83CC,
                0x1D8E64B8D4DD,
                0x217DD8D6D111,
                0x25F37105E8FD,
                0x2B010999C440,
                0x30BADFB263C1,
                0x3737E24BA174,
                0x3E920E17B7D1,
                0x46E6D594B5A1,
                0x505796FDBEC4,
                0x5B0A21F07C5A,
                0x67294EDE0445,
                0x74E5AAA5C5B5,
                0x84763909CB5E,
                0x9619510727C2,
                0xAA1596851337,
                0xC0BB1542C537,
                0xDA64817139D2,
                0xF778A2FCF5FC,
                0x1186BF136D679,
                0x13DC2654CB1CC,
                0x168118ADE1DEA,
                0x19802D6F26E04,
                0x1CE564EAEDF51,
                0x20BE5886B5709,
                0x251A7132E0671,
                0x2A0B252306E30,
                0x2FA43DBE0FA49,
                0x35FC26DE31203,
                0x3D2C489E4377E,
                0x45516D1C10845,
                0x4E8C33C732ECF,
                0x5901940A599F9,
    };
    #endif // (defined(TINYMIND_USE_EXP_22_42))
    #if (defined(TINYMIND_USE_EXP_23_41))
    const uint64_t ExpValuesTableQ23_41::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144E51F11,
                0x170277E69,
                0x1A12C66DC,
                0x1D8B82D70,
                0x217A94B59,
                0x25EFBD905,
                0x2AFCD7FD1,
                0x30B61F229,
                0x37327FC01,
                0x3E8BF3FF1,
                0x46DFEB7E7,
                0x504FC1385,
                0x5B01411A5,
                0x671F3F67F,
                0x74DA44448,
                0x84694E14A,
                0x960AADC10,
                0xAA05004D5,
                0xC0A849AA7,
                0xDA4F3530E,
                0xF76080C72,
                0x1185098628,
                0x13DA368521,
                0x167EE6D9FF,
                0x197DB0CCCE,
                0x1CE2938445,
                0x20BB27125F,
                0x2516D2E6C8,
                0x2A070B8129,
                0x2F9F985A6D,
                0x35F6E31D08,
                0x3D2651698A,
                0x454AAA8EFE,
                0x4E848ACE8E,
                0x58F8E5F808,
                0x64D19B6A67,
                0x723E1DC92D,
                0x817431063B,
                0x92B0C1B952,
                0xA638D923BD,
                0xBC5AB1B167,
                0xD56EF04AED,
                0xF1DA075F7E,
                0x1120DC93499,
                0x1368B2FC6F9,
                0x15FE4615E98,
                0x18EBEF9EAC8,
                0x1C3D6A24ED8,
                0x20000000000,
                0x2442C08B6DE,
                0x2916BC787D0,
                0x2E8F4A27B7D,
                0x34C2531C3C0,
                0x3BC8ABBF01C,
                0x43BE76D19F7,
                0x4CC3961ED8A,
                0x56FC2A2C515,
                0x629122ECD61,
                0x6FB0E3B6C3E,
                0x7E8FFD0F43A,
                0x8F69FF327E2,
                0xA28268A4024,
                0xB825B482DD6,
                0xD0AA8CDC1E6,
                0xEC7325C6A6E,
                0x10BEEC6B6888,
                0x12F9B882F47E,
                0x158084CCE220,
                0x185D6FD931E0,
                0x1B9BF125D0BA,
                0x1F49070BDBE8,
                0x23736ACA5AD0,
                0x282BCB7EDF62,
                0x2D8510F83E2D,
                0x3394A76F0222,
                0x3A72D552E2DA,
                0x423B1C84E5AF,
                0x4B0CA88393E1,
                0x550ACB42899B,
                0x605D8AA1629B,
                0x6D3240B89CE9,
                0x7BBC517E7AFE,
                0x8C35F89B6B3C,
                0x9EE132A658E6,
                0xB408C56F0EF5,
                0xCC016B793702,
                0xE72B27576FA8,
                0x105F2C435AB84,
                0x128D389970338,
                0x1505929183718,
                0x17D21EDF07D24,
                0x1AFE136F18901,
                0x1E96244F21BBF,
                0x22A8B68E08422,
                0x274619E399767,
                0x2C80CA052CCFC,
    };
    #endif // (defined(TINYMIND_USE_EXP_23_41))
    #if (defined(TINYMIND_USE_EXP_24_40))
    const uint64_t ExpValuesTableQ24_40::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA2728F88,
                0xB813BF34,
                0xD096336E,
                0xEC5C16B8,
                0x10BD4A5AC,
                0x12F7DEC82,
                0x157E6BFE8,
                0x185B0F914,
                0x1B993FE00,
                0x1F45F9FF8,
                0x236FF5BF3,
                0x2827E09C2,
                0x2D80A08D2,
                0x338F9FB3F,
                0x3A6D22224,
                0x4234A70A5,
                0x4B0556E08,
                0x55028026A,
                0x605424D53,
                0x6D279A987,
                0x7BB040639,
                0x8C284C314,
                0x9ED1B4290,
                0xB3F736CFF,
                0xCBED86667,
                0xE7149C222,
                0x105D93892F,
                0x128B697364,
                0x150385C094,
                0x17CFCC2D36,
                0x1AFB718E84,
                0x1E9328B4C5,
                0x22A555477F,
                0x2742456747,
                0x2C7C72FC04,
                0x3268CDB533,
                0x391F0EE496,
                0x40BA18831D,
                0x495860DCA9,
                0x531C6C91DE,
                0x5E2D58D8B3,
                0x6AB7782576,
                0x78ED03AFBF,
                0x8906E49A4C,
                0x9B4597E37C,
                0xAFF230AF4C,
                0xC75F7CF564,
                0xE1EB51276C,
                0x10000000000,
                0x12216045B6F,
                0x148B5E3C3E8,
                0x1747A513DBE,
                0x1A61298E1E0,
                0x1DE455DF80E,
                0x21DF3B68CFB,
                0x2661CB0F6C5,
                0x2B7E151628A,
                0x314891766B0,
                0x37D871DB61F,
                0x3F47FE87A1D,
                0x47B4FF993F1,
                0x51413452012,
                0x5C12DA416EB,
                0x6855466E0F3,
                0x763992E3537,
                0x85F7635B444,
                0x97CDC417A3F,
                0xAC042667110,
                0xC2EB7EC98F0,
                0xDCDF892E85D,
                0xFA48385EDF4,
                0x11B9B5652D68,
                0x1415E5BF6FB1,
                0x16C2887C1F16,
                0x19CA53B78111,
                0x1D396AA9716D,
                0x211D8E4272D7,
                0x25865441C9F0,
                0x2A8565A144CD,
                0x302EC550B14D,
                0x3699205C4E74,
                0x3DDE28BF3D7F,
                0x461AFC4DB59E,
                0x4F7099532C73,
                0x5A0462B7877A,
                0x6600B5BC9B81,
                0x739593ABB7D4,
                0x82F9621AD5C2,
                0x9469C4CB819C,
                0xA82C948C1B8C,
                0xBE90F6F83E92,
                0xD7F09B78C480,
                0xF4B122790DDF,
                0x11545B4704211,
                0x13A30CF1CCBB3,
                0x164065029667E,
    };
    #endif // (defined(TINYMIND_USE_EXP_24_40))
    #if (defined(TINYMIND_USE_EXP_25_39))
    const uint64_t ExpValuesTableQ25_39::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x513947C4,
                0x5C09DF9A,
                0x684B19B7,
                0x762E0B5C,
                0x85EA52D6,
                0x97BEF641,
                0xABF35FF4,
                0xC2D87C8A,
                0xDCC9FF00,
                0xFA2FCFFC,
                0x11B7FADF9,
                0x1413F04E1,
                0x16C050469,
                0x19C7CFD9F,
                0x1D3691112,
                0x211A53852,
                0x2582AB704,
                0x2A8140135,
                0x302A126A9,
                0x3693CD4C3,
                0x3DD82031C,
                0x46142618A,
                0x4F68DA148,
                0x59FB9B67F,
                0x65F6C3333,
                0x738A4E111,
                0x82EC9C497,
                0x945B4B9B2,
                0xA81C2E04A,
                0xBE7E6169B,
                0xD7DB8C742,
                0xF49945A62,
                0x1152AAA3BF,
                0x13A122B3A3,
                0x163E397E02,
                0x193466DA99,
                0x1C8F87724B,
                0x205D0C418E,
                0x24AC306E54,
                0x298E3648EF,
                0x2F16AC6C59,
                0x355BBC12BB,
                0x3C7681D7DF,
                0x4483724D26,
                0x4DA2CBF1BE,
                0x57F91857A6,
                0x63AFBE7AB2,
                0x70F5A893B6,
                0x8000000000,
                0x910B022DB7,
                0xA45AF1E1F4,
                0xBA3D289EDF,
                0xD3094C70F0,
                0xEF22AEFC07,
                0x10EF9DB467D,
                0x1330E587B62,
                0x15BF0A8B145,
                0x18A448BB358,
                0x1BEC38EDB0F,
                0x1FA3FF43D0E,
                0x23DA7FCC9F8,
                0x28A09A29009,
                0x2E096D20B75,
                0x342AA337079,
                0x3B1CC971A9B,
                0x42FBB1ADA22,
                0x4BE6E20BD1F,
                0x56021333888,
                0x6175BF64C78,
                0x6E6FC49742E,
                0x7D241C2F6FA,
                0x8DCDAB296B4,
                0xA0AF2DFB7D8,
                0xB61443E0F8B,
                0xCE529DBC088,
                0xE9CB554B8B6,
                0x108EC721396B,
                0x12C32A20E4F8,
                0x1542B2D0A266,
                0x181762A858A6,
                0x1B4C902E273A,
                0x1EEF145F9EBF,
                0x230D7E26DACF,
                0x27B84CA99639,
                0x2D02315BC3BD,
                0x33005ADE4DC0,
                0x39CAC9D5DBEA,
                0x417CB10D6AE1,
                0x4A34E265C0CE,
                0x54164A460DC6,
                0x5F487B7C1F49,
                0x6BF84DBC6240,
                0x7A58913C86EF,
                0x8AA2DA382108,
                0x9D18678E65D9,
                0xB2032814B33F,
    };
    #endif // (defined(TINYMIND_USE_EXP_25_39))
    #if (defined(TINYMIND_USE_EXP_26_38))
    const uint64_t ExpValuesTableQ26_38::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289CA3E2,
                0x2E04EFCD,
                0x34258CDB,
                0x3B1705AE,
                0x42F5296B,
                0x4BDF7B20,
                0x55F9AFFA,
                0x616C3E45,
                0x6E64FF80,
                0x7D17E7FE,
                0x8DBFD6FC,
                0xA09F8270,
                0xB6028234,
                0xCE3E7ECF,
                0xE9B48889,
                0x108D29C29,
                0x12C155B82,
                0x1540A009A,
                0x181509354,
                0x1B49E6A61,
                0x1EEC1018E,
                0x230A130C5,
                0x27B46D0A4,
                0x2CFDCDB3F,
                0x32FB61999,
                0x39C527088,
                0x41764E24B,
                0x4A2DA5CD9,
                0x540E17025,
                0x5F3F30B4D,
                0x6BEDC63A1,
                0x7A4CA2D31,
                0x8A95551DF,
                0x9D09159D1,
                0xB1F1CBF01,
                0xC9A336D4C,
                0xE47C3B925,
                0x102E8620C7,
                0x125618372A,
                0x14C71B2477,
                0x178B56362C,
                0x1AADDE095D,
                0x1E3B40EBEF,
                0x2241B92693,
                0x26D165F8DF,
                0x2BFC8C2BD3,
                0x31D7DF3D59,
                0x387AD449DB,
                0x4000000000,
                0x48858116DB,
                0x522D78F0FA,
                0x5D1E944F6F,
                0x6984A63878,
                0x7791577E03,
                0x877CEDA33E,
                0x99872C3DB1,
                0xADF85458A2,
                0xC52245D9AC,
                0xDF61C76D87,
                0xFD1FFA1E87,
                0x11ED3FE64FC,
                0x14504D14804,
                0x1704B6905BA,
                0x1A15519B83C,
                0x1D8E64B8D4D,
                0x217DD8D6D11,
                0x25F37105E8F,
                0x2B010999C44,
                0x30BADFB263C,
                0x3737E24BA17,
                0x3E920E17B7D,
                0x46E6D594B5A,
                0x505796FDBEC,
                0x5B0A21F07C5,
                0x67294EDE044,
                0x74E5AAA5C5B,
                0x84763909CB5,
                0x9619510727C,
                0xAA159685133,
                0xC0BB1542C53,
                0xDA64817139D,
                0xF778A2FCF5F,
                0x1186BF136D67,
                0x13DC2654CB1C,
                0x168118ADE1DE,
                0x19802D6F26E0,
                0x1CE564EAEDF5,
                0x20BE5886B570,
                0x251A7132E067,
                0x2A0B252306E3,
                0x2FA43DBE0FA4,
                0x35FC26DE3120,
                0x3D2C489E4377,
                0x45516D1C1084,
                0x4E8C33C732EC,
                0x5901940A599F,
    };
    #endif // (defined(TINYMIND_USE_EXP_26_38))
    #if (defined(TINYMIND_USE_EXP_27_37))
    const uint64_t ExpValuesTableQ27_37::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144E51F1,
                0x170277E6,
                0x1A12C66D,
                0x1D8B82D7,
                0x217A94B5,
                0x25EFBD90,
                0x2AFCD7FD,
                0x30B61F22,
                0x37327FC0,
                0x3E8BF3FF,
                0x46DFEB7E,
                0x504FC138,
                0x5B01411A,
                0x671F3F67,
                0x74DA4444,
                0x84694E14,
                0x960AADC1,
                0xAA05004D,
                0xC0A849AA,
                0xDA4F3530,
                0xF76080C7,
                0x118509862,
                0x13DA36852,
                0x167EE6D9F,
                0x197DB0CCC,
                0x1CE293844,
                0x20BB27125,
                0x2516D2E6C,
                0x2A070B812,
                0x2F9F985A6,
                0x35F6E31D0,
                0x3D2651698,
                0x454AAA8EF,
                0x4E848ACE8,
                0x58F8E5F80,
                0x64D19B6A6,
                0x723E1DC92,
                0x817431063,
                0x92B0C1B95,
                0xA638D923B,
                0xBC5AB1B16,
                0xD56EF04AE,
                0xF1DA075F7,
                0x1120DC9349,
                0x1368B2FC6F,
                0x15FE4615E9,
                0x18EBEF9EAC,
                0x1C3D6A24ED,
                0x2000000000,
                0x2442C08B6D,
                0x2916BC787D,
                0x2E8F4A27B7,
                0x34C2531C3C,
                0x3BC8ABBF01,
                0x43BE76D19F,
                0x4CC3961ED8,
                0x56FC2A2C51,
                0x629122ECD6,
                0x6FB0E3B6C3,
                0x7E8FFD0F43,
                0x8F69FF327E,
                0xA28268A402,
                0xB825B482DD,
                0xD0AA8CDC1E,
                0xEC7325C6A6,
                0x10BEEC6B688,
                0x12F9B882F47,
                0x158084CCE22,
                0x185D6FD931E,
                0x1B9BF125D0B,
                0x1F49070BDBE,
                0x23736ACA5AD,
                0x282BCB7EDF6,
                0x2D8510F83E2,
                0x3394A76F022,
                0x3A72D552E2D,
                0x423B1C84E5A,
                0x4B0CA88393E,
                0x550ACB42899,
                0x605D8AA1629,
                0x6D3240B89CE,
                0x7BBC517E7AF,
                0x8C35F89B6B3,
                0x9EE132A658E,
                0xB408C56F0EF,
                0xCC016B79370,
                0xE72B27576FA,
                0x105F2C435AB8,
                0x128D38997033,
                0x150592918371,
                0x17D21EDF07D2,
                0x1AFE136F1890,
                0x1E96244F21BB,
                0x22A8B68E0842,
                0x274619E39976,
                0x2C80CA052CCF,
    };
    #endif // (defined(TINYMIND_USE_EXP_27_37))
    #if (defined(TINYMIND_USE_EXP_28_36))
    const uint64_t ExpValuesTableQ28_36::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA2728F8,
                0xB813BF3,
                0xD096336,
                0xEC5C16B,
                0x10BD4A5A,
                0x12F7DEC8,
                0x157E6BFE,
                0x185B0F91,
                0x1B993FE0,
                0x1F45F9FF,
                0x236FF5BF,
                0x2827E09C,
                0x2D80A08D,
                0x338F9FB3,
                0x3A6D2222,
                0x4234A70A,
                0x4B0556E0,
                0x55028026,
                0x605424D5,
                0x6D279A98,
                0x7BB04063,
                0x8C284C31,
                0x9ED1B429,
                0xB3F736CF,
                0xCBED8666,
                0xE7149C22,
                0x105D93892,
                0x128B69736,
                0x150385C09,
                0x17CFCC2D3,
                0x1AFB718E8,
                0x1E9328B4C,
                0x22A555477,
                0x274245674,
                0x2C7C72FC0,
                0x3268CDB53,
                0x391F0EE49,
                0x40BA18831,
                0x495860DCA,
                0x531C6C91D,
                0x5E2D58D8B,
                0x6AB778257,
                0x78ED03AFB,
                0x8906E49A4,
                0x9B4597E37,
                0xAFF230AF4,
                0xC75F7CF56,
                0xE1EB51276,
                0x1000000000,
                0x12216045B6,
                0x148B5E3C3E,
                0x1747A513DB,
                0x1A61298E1E,
                0x1DE455DF80,
                0x21DF3B68CF,
                0x2661CB0F6C,
                0x2B7E151628,
                0x314891766B,
                0x37D871DB61,
                0x3F47FE87A1,
                0x47B4FF993F,
                0x5141345201,
                0x5C12DA416E,
                0x6855466E0F,
                0x763992E353,
                0x85F7635B44,
                0x97CDC417A3,
                0xAC04266711,
                0xC2EB7EC98F,
                0xDCDF892E85,
                0xFA48385EDF,
                0x11B9B5652D6,
                0x1415E5BF6FB,
                0x16C2887C1F1,
                0x19CA53B7811,
                0x1D396AA9716,
                0x211D8E4272D,
                0x25865441C9F,
                0x2A8565A144C,
                0x302EC550B14,
                0x3699205C4E7,
                0x3DDE28BF3D7,
                0x461AFC4DB59,
                0x4F7099532C7,
                0x5A0462B7877,
                0x6600B5BC9B8,
                0x739593ABB7D,
                0x82F9621AD5C,
                0x9469C4CB819,
                0xA82C948C1B8,
                0xBE90F6F83E9,
                0xD7F09B78C48,
                0xF4B122790DD,
                0x11545B470421,
                0x13A30CF1CCBB,
                0x164065029667,
    };
    #endif // (defined(TINYMIND_USE_EXP_28_36))
    #if (defined(TINYMIND_USE_EXP_29_35))
    const uint64_t ExpValuesTableQ29_35::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x513947C,
                0x5C09DF9,
                0x684B19B,
                0x762E0B5,
                0x85EA52D,
                0x97BEF64,
                0xABF35FF,
                0xC2D87C8,
                0xDCC9FF0,
                0xFA2FCFF,
                0x11B7FADF,
                0x1413F04E,
                0x16C05046,
                0x19C7CFD9,
                0x1D369111,
                0x211A5385,
                0x2582AB70,
                0x2A814013,
                0x302A126A,
                0x3693CD4C,
                0x3DD82031,
                0x46142618,
                0x4F68DA14,
                0x59FB9B67,
                0x65F6C333,
                0x738A4E11,
                0x82EC9C49,
                0x945B4B9B,
                0xA81C2E04,
                0xBE7E6169,
                0xD7DB8C74,
                0xF49945A6,
                0x1152AAA3B,
                0x13A122B3A,
                0x163E397E0,
                0x193466DA9,
                0x1C8F87724,
                0x205D0C418,
                0x24AC306E5,
                0x298E3648E,
                0x2F16AC6C5,
                0x355BBC12B,
                0x3C7681D7D,
                0x4483724D2,
                0x4DA2CBF1B,
                0x57F91857A,
                0x63AFBE7AB,
                0x70F5A893B,
                0x800000000,
                0x910B022DB,
                0xA45AF1E1F,
                0xBA3D289ED,
                0xD3094C70F,
                0xEF22AEFC0,
                0x10EF9DB467,
                0x1330E587B6,
                0x15BF0A8B14,
                0x18A448BB35,
                0x1BEC38EDB0,
                0x1FA3FF43D0,
                0x23DA7FCC9F,
                0x28A09A2900,
                0x2E096D20B7,
                0x342AA33707,
                0x3B1CC971A9,
                0x42FBB1ADA2,
                0x4BE6E20BD1,
                0x5602133388,
                0x6175BF64C7,
                0x6E6FC49742,
                0x7D241C2F6F,
                0x8DCDAB296B,
                0xA0AF2DFB7D,
                0xB61443E0F8,
                0xCE529DBC08,
                0xE9CB554B8B,
                0x108EC721396,
                0x12C32A20E4F,
                0x1542B2D0A26,
                0x181762A858A,
                0x1B4C902E273,
                0x1EEF145F9EB,
                0x230D7E26DAC,
                0x27B84CA9963,
                0x2D02315BC3B,
                0x33005ADE4DC,
                0x39CAC9D5DBE,
                0x417CB10D6AE,
                0x4A34E265C0C,
                0x54164A460DC,
                0x5F487B7C1F4,
                0x6BF84DBC624,
                0x7A58913C86E,
                0x8AA2DA38210,
                0x9D18678E65D,
                0xB2032814B33,
    };
    #endif // (defined(TINYMIND_USE_EXP_29_35))
    #if (defined(TINYMIND_USE_EXP_30_34))
    const uint64_t ExpValuesTableQ30_34::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289CA3E,
                0x2E04EFC,
                0x34258CD,
                0x3B1705A,
                0x42F5296,
                0x4BDF7B2,
                0x55F9AFF,
                0x616C3E4,
                0x6E64FF8,
                0x7D17E7F,
                0x8DBFD6F,
                0xA09F827,
                0xB602823,
                0xCE3E7EC,
                0xE9B4888,
                0x108D29C2,
                0x12C155B8,
                0x1540A009,
                0x18150935,
                0x1B49E6A6,
                0x1EEC1018,
                0x230A130C,
                0x27B46D0A,
                0x2CFDCDB3,
                0x32FB6199,
                0x39C52708,
                0x41764E24,
                0x4A2DA5CD,
                0x540E1702,
                0x5F3F30B4,
                0x6BEDC63A,
                0x7A4CA2D3,
                0x8A95551D,
                0x9D09159D,
                0xB1F1CBF0,
                0xC9A336D4,
                0xE47C3B92,
                0x102E8620C,
                0x125618372,
                0x14C71B247,
                0x178B56362,
                0x1AADDE095,
                0x1E3B40EBE,
                0x2241B9269,
                0x26D165F8D,
                0x2BFC8C2BD,
                0x31D7DF3D5,
                0x387AD449D,
                0x400000000,
                0x48858116D,
                0x522D78F0F,
                0x5D1E944F6,
                0x6984A6387,
                0x7791577E0,
                0x877CEDA33,
                0x99872C3DB,
                0xADF85458A,
                0xC52245D9A,
                0xDF61C76D8,
                0xFD1FFA1E8,
                0x11ED3FE64F,
                0x14504D1480,
                0x1704B6905B,
                0x1A15519B83,
                0x1D8E64B8D4,
                0x217DD8D6D1,
                0x25F37105E8,
                0x2B010999C4,
                0x30BADFB263,
                0x3737E24BA1,
                0x3E920E17B7,
                0x46E6D594B5,
                0x505796FDBE,
                0x5B0A21F07C,
                0x67294EDE04,
                0x74E5AAA5C5,
                0x84763909CB,
                0x9619510727,
                0xAA15968513,
                0xC0BB1542C5,
                0xDA64817139,
                0xF778A2FCF5,
                0x1186BF136D6,
                0x13DC2654CB1,
                0x168118ADE1D,
                0x19802D6F26E,
                0x1CE564EAEDF,
                0x20BE5886B57,
                0x251A7132E06,
                0x2A0B252306E,
                0x2FA43DBE0FA,
                0x35FC26DE312,
                0x3D2C489E437,
                0x45516D1C108,
                0x4E8C33C732E,
                0x5901940A599,
    };
    #endif // (defined(TINYMIND_USE_EXP_30_34))
    #if (defined(TINYMIND_USE_EXP_31_33))
    const uint64_t ExpValuesTableQ31_33::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144E51F,
                0x170277E,
                0x1A12C66,
                0x1D8B82D,
                0x217A94B,
                0x25EFBD9,
                0x2AFCD7F,
                0x30B61F2,
                0x37327FC,
                0x3E8BF3F,
                0x46DFEB7,
                0x504FC13,
                0x5B01411,
                0x671F3F6,
                0x74DA444,
                0x84694E1,
                0x960AADC,
                0xAA05004,
                0xC0A849A,
                0xDA4F353,
                0xF76080C,
                0x11850986,
                0x13DA3685,
                0x167EE6D9,
                0x197DB0CC,
                0x1CE29384,
                0x20BB2712,
                0x2516D2E6,
                0x2A070B81,
                0x2F9F985A,
                0x35F6E31D,
                0x3D265169,
                0x454AAA8E,
                0x4E848ACE,
                0x58F8E5F8,
                0x64D19B6A,
                0x723E1DC9,
                0x81743106,
                0x92B0C1B9,
                0xA638D923,
                0xBC5AB1B1,
                0xD56EF04A,
                0xF1DA075F,
                0x1120DC934,
                0x1368B2FC6,
                0x15FE4615E,
                0x18EBEF9EA,
                0x1C3D6A24E,
                0x200000000,
                0x2442C08B6,
                0x2916BC787,
                0x2E8F4A27B,
                0x34C2531C3,
                0x3BC8ABBF0,
                0x43BE76D19,
                0x4CC3961ED,
                0x56FC2A2C5,
                0x629122ECD,
                0x6FB0E3B6C,
                0x7E8FFD0F4,
                0x8F69FF327,
                0xA28268A40,
                0xB825B482D,
                0xD0AA8CDC1,
                0xEC7325C6A,
                0x10BEEC6B68,
                0x12F9B882F4,
                0x158084CCE2,
                0x185D6FD931,
                0x1B9BF125D0,
                0x1F49070BDB,
                0x23736ACA5A,
                0x282BCB7EDF,
                0x2D8510F83E,
                0x3394A76F02,
                0x3A72D552E2,
                0x423B1C84E5,
                0x4B0CA88393,
                0x550ACB4289,
                0x605D8AA162,
                0x6D3240B89C,
                0x7BBC517E7A,
                0x8C35F89B6B,
                0x9EE132A658,
                0xB408C56F0E,
                0xCC016B7937,
                0xE72B27576F,
                0x105F2C435AB,
                0x128D3899703,
                0x15059291837,
                0x17D21EDF07D,
                0x1AFE136F189,
                0x1E96244F21B,
                0x22A8B68E084,
                0x274619E3997,
                0x2C80CA052CC,
    };
    #endif // (defined(TINYMIND_USE_EXP_31_33))
    #if (defined(TINYMIND_USE_EXP_32_32))
    const uint64_t ExpValuesTableQ32_32::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA2728F,
                0xB813BF,
                0xD09633,
                0xEC5C16,
                0x10BD4A5,
                0x12F7DEC,
                0x157E6BF,
                0x185B0F9,
                0x1B993FE,
                0x1F45F9F,
                0x236FF5B,
                0x2827E09,
                0x2D80A08,
                0x338F9FB,
                0x3A6D222,
                0x4234A70,
                0x4B0556E,
                0x5502802,
                0x605424D,
                0x6D279A9,
                0x7BB0406,
                0x8C284C3,
                0x9ED1B42,
                0xB3F736C,
                0xCBED866,
                0xE7149C2,
                0x105D9389,
                0x128B6973,
                0x150385C0,
                0x17CFCC2D,
                0x1AFB718E,
                0x1E9328B4,
                0x22A55547,
                0x27424567,
                0x2C7C72FC,
                0x3268CDB5,
                0x391F0EE4,
                0x40BA1883,
                0x495860DC,
                0x531C6C91,
                0x5E2D58D8,
                0x6AB77825,
                0x78ED03AF,
                0x8906E49A,
                0x9B4597E3,
                0xAFF230AF,
                0xC75F7CF5,
                0xE1EB5127,
                0x100000000,
                0x12216045B,
                0x148B5E3C3,
                0x1747A513D,
                0x1A61298E1,
                0x1DE455DF8,
                0x21DF3B68C,
                0x2661CB0F6,
                0x2B7E15162,
                0x314891766,
                0x37D871DB6,
                0x3F47FE87A,
                0x47B4FF993,
                0x514134520,
                0x5C12DA416,
                0x6855466E0,
                0x763992E35,
                0x85F7635B4,
                0x97CDC417A,
                0xAC0426671,
                0xC2EB7EC98,
                0xDCDF892E8,
                0xFA48385ED,
                0x11B9B5652D,
                0x1415E5BF6F,
                0x16C2887C1F,
                0x19CA53B781,
                0x1D396AA971,
                0x211D8E4272,
                0x25865441C9,
                0x2A8565A144,
                0x302EC550B1,
                0x3699205C4E,
                0x3DDE28BF3D,
                0x461AFC4DB5,
                0x4F7099532C,
                0x5A0462B787,
                0x6600B5BC9B,
                0x739593ABB7,
                0x82F9621AD5,
                0x9469C4CB81,
                0xA82C948C1B,
                0xBE90F6F83E,
                0xD7F09B78C4,
                0xF4B122790D,
                0x11545B47042,
                0x13A30CF1CCB,
                0x16406502966,
    };
    #endif // (defined(TINYMIND_USE_EXP_32_32))
    #if (defined(TINYMIND_USE_EXP_33_31))
    const uint64_t ExpValuesTableQ33_31::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x513947,
                0x5C09DF,
                0x684B19,
                0x762E0B,
                0x85EA52,
                0x97BEF6,
                0xABF35F,
                0xC2D87C,
                0xDCC9FF,
                0xFA2FCF,
                0x11B7FAD,
                0x1413F04,
                0x16C0504,
                0x19C7CFD,
                0x1D36911,
                0x211A538,
                0x2582AB7,
                0x2A81401,
                0x302A126,
                0x3693CD4,
                0x3DD8203,
                0x4614261,
                0x4F68DA1,
                0x59FB9B6,
                0x65F6C33,
                0x738A4E1,
                0x82EC9C4,
                0x945B4B9,
                0xA81C2E0,
                0xBE7E616,
                0xD7DB8C7,
                0xF49945A,
                0x1152AAA3,
                0x13A122B3,
                0x163E397E,
                0x193466DA,
                0x1C8F8772,
                0x205D0C41,
                0x24AC306E,
                0x298E3648,
                0x2F16AC6C,
                0x355BBC12,
                0x3C7681D7,
                0x4483724D,
                0x4DA2CBF1,
                0x57F91857,
                0x63AFBE7A,
                0x70F5A893,
                0x80000000,
                0x910B022D,
                0xA45AF1E1,
                0xBA3D289E,
                0xD3094C70,
                0xEF22AEFC,
                0x10EF9DB46,
                0x1330E587B,
                0x15BF0A8B1,
                0x18A448BB3,
                0x1BEC38EDB,
                0x1FA3FF43D,
                0x23DA7FCC9,
                0x28A09A290,
                0x2E096D20B,
                0x342AA3370,
                0x3B1CC971A,
                0x42FBB1ADA,
                0x4BE6E20BD,
                0x560213338,
                0x6175BF64C,
                0x6E6FC4974,
                0x7D241C2F6,
                0x8DCDAB296,
                0xA0AF2DFB7,
                0xB61443E0F,
                0xCE529DBC0,
                0xE9CB554B8,
                0x108EC72139,
                0x12C32A20E4,
                0x1542B2D0A2,
                0x181762A858,
                0x1B4C902E27,
                0x1EEF145F9E,
                0x230D7E26DA,
                0x27B84CA996,
                0x2D02315BC3,
                0x33005ADE4D,
                0x39CAC9D5DB,
                0x417CB10D6A,
                0x4A34E265C0,
                0x54164A460D,
                0x5F487B7C1F,
                0x6BF84DBC62,
                0x7A58913C86,
                0x8AA2DA3821,
                0x9D18678E65,
                0xB2032814B3,
    };
    #endif // (defined(TINYMIND_USE_EXP_33_31))
    #if (defined(TINYMIND_USE_EXP_34_30))
    const uint64_t ExpValuesTableQ34_30::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289CA3,
                0x2E04EF,
                0x34258C,
                0x3B1705,
                0x42F529,
                0x4BDF7B,
                0x55F9AF,
                0x616C3E,
                0x6E64FF,
                0x7D17E7,
                0x8DBFD6,
                0xA09F82,
                0xB60282,
                0xCE3E7E,
                0xE9B488,
                0x108D29C,
                0x12C155B,
                0x1540A00,
                0x1815093,
                0x1B49E6A,
                0x1EEC101,
                0x230A130,
                0x27B46D0,
                0x2CFDCDB,
                0x32FB619,
                0x39C5270,
                0x41764E2,
                0x4A2DA5C,
                0x540E170,
                0x5F3F30B,
                0x6BEDC63,
                0x7A4CA2D,
                0x8A95551,
                0x9D09159,
                0xB1F1CBF,
                0xC9A336D,
                0xE47C3B9,
                0x102E8620,
                0x12561837,
                0x14C71B24,
                0x178B5636,
                0x1AADDE09,
                0x1E3B40EB,
                0x2241B926,
                0x26D165F8,
                0x2BFC8C2B,
                0x31D7DF3D,
                0x387AD449,
                0x40000000,
                0x48858116,
                0x522D78F0,
                0x5D1E944F,
                0x6984A638,
                0x7791577E,
                0x877CEDA3,
                0x99872C3D,
                0xADF85458,
                0xC52245D9,
                0xDF61C76D,
                0xFD1FFA1E,
                0x11ED3FE64,
                0x14504D148,
                0x1704B6905,
                0x1A15519B8,
                0x1D8E64B8D,
                0x217DD8D6D,
                0x25F37105E,
                0x2B010999C,
                0x30BADFB26,
                0x3737E24BA,
                0x3E920E17B,
                0x46E6D594B,
                0x505796FDB,
                0x5B0A21F07,
                0x67294EDE0,
                0x74E5AAA5C,
                0x84763909C,
                0x961951072,
                0xAA1596851,
                0xC0BB1542C,
                0xDA6481713,
                0xF778A2FCF,
                0x1186BF136D,
                0x13DC2654CB,
                0x168118ADE1,
                0x19802D6F26,
                0x1CE564EAED,
                0x20BE5886B5,
                0x251A7132E0,
                0x2A0B252306,
                0x2FA43DBE0F,
                0x35FC26DE31,
                0x3D2C489E43,
                0x45516D1C10,
                0x4E8C33C732,
                0x5901940A59,
    };
    #endif // (defined(TINYMIND_USE_EXP_34_30))
    #if (defined(TINYMIND_USE_EXP_35_29))
    const uint64_t ExpValuesTableQ35_29::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144E51,
                0x170277,
                0x1A12C6,
                0x1D8B82,
                0x217A94,
                0x25EFBD,
                0x2AFCD7,
                0x30B61F,
                0x37327F,
                0x3E8BF3,
                0x46DFEB,
                0x504FC1,
                0x5B0141,
                0x671F3F,
                0x74DA44,
                0x84694E,
                0x960AAD,
                0xAA0500,
                0xC0A849,
                0xDA4F35,
                0xF76080,
                0x1185098,
                0x13DA368,
                0x167EE6D,
                0x197DB0C,
                0x1CE2938,
                0x20BB271,
                0x2516D2E,
                0x2A070B8,
                0x2F9F985,
                0x35F6E31,
                0x3D26516,
                0x454AAA8,
                0x4E848AC,
                0x58F8E5F,
                0x64D19B6,
                0x723E1DC,
                0x8174310,
                0x92B0C1B,
                0xA638D92,
                0xBC5AB1B,
                0xD56EF04,
                0xF1DA075,
                0x1120DC93,
                0x1368B2FC,
                0x15FE4615,
                0x18EBEF9E,
                0x1C3D6A24,
                0x20000000,
                0x2442C08B,
                0x2916BC78,
                0x2E8F4A27,
                0x34C2531C,
                0x3BC8ABBF,
                0x43BE76D1,
                0x4CC3961E,
                0x56FC2A2C,
                0x629122EC,
                0x6FB0E3B6,
                0x7E8FFD0F,
                0x8F69FF32,
                0xA28268A4,
                0xB825B482,
                0xD0AA8CDC,
                0xEC7325C6,
                0x10BEEC6B6,
                0x12F9B882F,
                0x158084CCE,
                0x185D6FD93,
                0x1B9BF125D,
                0x1F49070BD,
                0x23736ACA5,
                0x282BCB7ED,
                0x2D8510F83,
                0x3394A76F0,
                0x3A72D552E,
                0x423B1C84E,
                0x4B0CA8839,
                0x550ACB428,
                0x605D8AA16,
                0x6D3240B89,
                0x7BBC517E7,
                0x8C35F89B6,
                0x9EE132A65,
                0xB408C56F0,
                0xCC016B793,
                0xE72B27576,
                0x105F2C435A,
                0x128D389970,
                0x1505929183,
                0x17D21EDF07,
                0x1AFE136F18,
                0x1E96244F21,
                0x22A8B68E08,
                0x274619E399,
                0x2C80CA052C,
    };
    #endif // (defined(TINYMIND_USE_EXP_35_29))
    #if (defined(TINYMIND_USE_EXP_36_28))
    const uint64_t ExpValuesTableQ36_28::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA2728,
                0xB813B,
                0xD0963,
                0xEC5C1,
                0x10BD4A,
                0x12F7DE,
                0x157E6B,
                0x185B0F,
                0x1B993F,
                0x1F45F9,
                0x236FF5,
                0x2827E0,
                0x2D80A0,
                0x338F9F,
                0x3A6D22,
                0x4234A7,
                0x4B0556,
                0x550280,
                0x605424,
                0x6D279A,
                0x7BB040,
                0x8C284C,
                0x9ED1B4,
                0xB3F736,
                0xCBED86,
                0xE7149C,
                0x105D938,
                0x128B697,
                0x150385C,
                0x17CFCC2,
                0x1AFB718,
                0x1E9328B,
                0x22A5554,
                0x2742456,
                0x2C7C72F,
                0x3268CDB,
                0x391F0EE,
                0x40BA188,
                0x495860D,
                0x531C6C9,
                0x5E2D58D,
                0x6AB7782,
                0x78ED03A,
                0x8906E49,
                0x9B4597E,
                0xAFF230A,
                0xC75F7CF,
                0xE1EB512,
                0x10000000,
                0x12216045,
                0x148B5E3C,
                0x1747A513,
                0x1A61298E,
                0x1DE455DF,
                0x21DF3B68,
                0x2661CB0F,
                0x2B7E1516,
                0x31489176,
                0x37D871DB,
                0x3F47FE87,
                0x47B4FF99,
                0x51413452,
                0x5C12DA41,
                0x6855466E,
                0x763992E3,
                0x85F7635B,
                0x97CDC417,
                0xAC042667,
                0xC2EB7EC9,
                0xDCDF892E,
                0xFA48385E,
                0x11B9B5652,
                0x1415E5BF6,
                0x16C2887C1,
                0x19CA53B78,
                0x1D396AA97,
                0x211D8E427,
                0x25865441C,
                0x2A8565A14,
                0x302EC550B,
                0x3699205C4,
                0x3DDE28BF3,
                0x461AFC4DB,
                0x4F7099532,
                0x5A0462B78,
                0x6600B5BC9,
                0x739593ABB,
                0x82F9621AD,
                0x9469C4CB8,
                0xA82C948C1,
                0xBE90F6F83,
                0xD7F09B78C,
                0xF4B122790,
                0x11545B4704,
                0x13A30CF1CC,
                0x1640650296,
    };
    #endif // (defined(TINYMIND_USE_EXP_36_28))
    #if (defined(TINYMIND_USE_EXP_37_27))
    const uint64_t ExpValuesTableQ37_27::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x51394,
                0x5C09D,
                0x684B1,
                0x762E0,
                0x85EA5,
                0x97BEF,
                0xABF35,
                0xC2D87,
                0xDCC9F,
                0xFA2FC,
                0x11B7FA,
                0x1413F0,
                0x16C050,
                0x19C7CF,
                0x1D3691,
                0x211A53,
                0x2582AB,
                0x2A8140,
                0x302A12,
                0x3693CD,
                0x3DD820,
                0x461426,
                0x4F68DA,
                0x59FB9B,
                0x65F6C3,
                0x738A4E,
                0x82EC9C,
                0x945B4B,
                0xA81C2E,
                0xBE7E61,
                0xD7DB8C,
                0xF49945,
                0x1152AAA,
                0x13A122B,
                0x163E397,
                0x193466D,
                0x1C8F877,
                0x205D0C4,
                0x24AC306,
                0x298E364,
                0x2F16AC6,
                0x355BBC1,
                0x3C7681D,
                0x4483724,
                0x4DA2CBF,
                0x57F9185,
                0x63AFBE7,
                0x70F5A89,
                0x8000000,
                0x910B022,
                0xA45AF1E,
                0xBA3D289,
                0xD3094C7,
                0xEF22AEF,
                0x10EF9DB4,
                0x1330E587,
                0x15BF0A8B,
                0x18A448BB,
                0x1BEC38ED,
                0x1FA3FF43,
                0x23DA7FCC,
                0x28A09A29,
                0x2E096D20,
                0x342AA337,
                0x3B1CC971,
                0x42FBB1AD,
                0x4BE6E20B,
                0x56021333,
                0x6175BF64,
                0x6E6FC497,
                0x7D241C2F,
                0x8DCDAB29,
                0xA0AF2DFB,
                0xB61443E0,
                0xCE529DBC,
                0xE9CB554B,
                0x108EC7213,
                0x12C32A20E,
                0x1542B2D0A,
                0x181762A85,
                0x1B4C902E2,
                0x1EEF145F9,
                0x230D7E26D,
                0x27B84CA99,
                0x2D02315BC,
                0x33005ADE4,
                0x39CAC9D5D,
                0x417CB10D6,
                0x4A34E265C,
                0x54164A460,
                0x5F487B7C1,
                0x6BF84DBC6,
                0x7A58913C8,
                0x8AA2DA382,
                0x9D18678E6,
                0xB2032814B,
    };
    #endif // (defined(TINYMIND_USE_EXP_37_27))
    #if (defined(TINYMIND_USE_EXP_38_26))
    const uint64_t ExpValuesTableQ38_26::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289CA,
                0x2E04E,
                0x34258,
                0x3B170,
                0x42F52,
                0x4BDF7,
                0x55F9A,
                0x616C3,
                0x6E64F,
                0x7D17E,
                0x8DBFD,
                0xA09F8,
                0xB6028,
                0xCE3E7,
                0xE9B48,
                0x108D29,
                0x12C155,
                0x1540A0,
                0x181509,
                0x1B49E6,
                0x1EEC10,
                0x230A13,
                0x27B46D,
                0x2CFDCD,
                0x32FB61,
                0x39C527,
                0x41764E,
                0x4A2DA5,
                0x540E17,
                0x5F3F30,
                0x6BEDC6,
                0x7A4CA2,
                0x8A9555,
                0x9D0915,
                0xB1F1CB,
                0xC9A336,
                0xE47C3B,
                0x102E862,
                0x1256183,
                0x14C71B2,
                0x178B563,
                0x1AADDE0,
                0x1E3B40E,
                0x2241B92,
                0x26D165F,
                0x2BFC8C2,
                0x31D7DF3,
                0x387AD44,
                0x4000000,
                0x4885811,
                0x522D78F,
                0x5D1E944,
                0x6984A63,
                0x7791577,
                0x877CEDA,
                0x99872C3,
                0xADF8545,
                0xC52245D,
                0xDF61C76,
                0xFD1FFA1,
                0x11ED3FE6,
                0x14504D14,
                0x1704B690,
                0x1A15519B,
                0x1D8E64B8,
                0x217DD8D6,
                0x25F37105,
                0x2B010999,
                0x30BADFB2,
                0x3737E24B,
                0x3E920E17,
                0x46E6D594,
                0x505796FD,
                0x5B0A21F0,
                0x67294EDE,
                0x74E5AAA5,
                0x84763909,
                0x96195107,
                0xAA159685,
                0xC0BB1542,
                0xDA648171,
                0xF778A2FC,
                0x1186BF136,
                0x13DC2654C,
                0x168118ADE,
                0x19802D6F2,
                0x1CE564EAE,
                0x20BE5886B,
                0x251A7132E,
                0x2A0B25230,
                0x2FA43DBE0,
                0x35FC26DE3,
                0x3D2C489E4,
                0x45516D1C1,
                0x4E8C33C73,
                0x5901940A5,
    };
    #endif // (defined(TINYMIND_USE_EXP_38_26))
    #if (defined(TINYMIND_USE_EXP_39_25))
    const uint64_t ExpValuesTableQ39_25::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144E5,
                0x17027,
                0x1A12C,
                0x1D8B8,
                0x217A9,
                0x25EFB,
                0x2AFCD,
                0x30B61,
                0x37327,
                0x3E8BF,
                0x46DFE,
                0x504FC,
                0x5B014,
                0x671F3,
                0x74DA4,
                0x84694,
                0x960AA,
                0xAA050,
                0xC0A84,
                0xDA4F3,
                0xF7608,
                0x118509,
                0x13DA36,
                0x167EE6,
                0x197DB0,
                0x1CE293,
                0x20BB27,
                0x2516D2,
                0x2A070B,
                0x2F9F98,
                0x35F6E3,
                0x3D2651,
                0x454AAA,
                0x4E848A,
                0x58F8E5,
                0x64D19B,
                0x723E1D,
                0x817431,
                0x92B0C1,
                0xA638D9,
                0xBC5AB1,
                0xD56EF0,
                0xF1DA07,
                0x1120DC9,
                0x1368B2F,
                0x15FE461,
                0x18EBEF9,
                0x1C3D6A2,
                0x2000000,
                0x2442C08,
                0x2916BC7,
                0x2E8F4A2,
                0x34C2531,
                0x3BC8ABB,
                0x43BE76D,
                0x4CC3961,
                0x56FC2A2,
                0x629122E,
                0x6FB0E3B,
                0x7E8FFD0,
                0x8F69FF3,
                0xA28268A,
                0xB825B48,
                0xD0AA8CD,
                0xEC7325C,
                0x10BEEC6B,
                0x12F9B882,
                0x158084CC,
                0x185D6FD9,
                0x1B9BF125,
                0x1F49070B,
                0x23736ACA,
                0x282BCB7E,
                0x2D8510F8,
                0x3394A76F,
                0x3A72D552,
                0x423B1C84,
                0x4B0CA883,
                0x550ACB42,
                0x605D8AA1,
                0x6D3240B8,
                0x7BBC517E,
                0x8C35F89B,
                0x9EE132A6,
                0xB408C56F,
                0xCC016B79,
                0xE72B2757,
                0x105F2C435,
                0x128D38997,
                0x150592918,
                0x17D21EDF0,
                0x1AFE136F1,
                0x1E96244F2,
                0x22A8B68E0,
                0x274619E39,
                0x2C80CA052,
    };
    #endif // (defined(TINYMIND_USE_EXP_39_25))
    #if (defined(TINYMIND_USE_EXP_40_24))
    const uint64_t ExpValuesTableQ40_24::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA272,
                0xB813,
                0xD096,
                0xEC5C,
                0x10BD4,
                0x12F7D,
                0x157E6,
                0x185B0,
                0x1B993,
                0x1F45F,
                0x236FF,
                0x2827E,
                0x2D80A,
                0x338F9,
                0x3A6D2,
                0x4234A,
                0x4B055,
                0x55028,
                0x60542,
                0x6D279,
                0x7BB04,
                0x8C284,
                0x9ED1B,
                0xB3F73,
                0xCBED8,
                0xE7149,
                0x105D93,
                0x128B69,
                0x150385,
                0x17CFCC,
                0x1AFB71,
                0x1E9328,
                0x22A555,
                0x274245,
                0x2C7C72,
                0x3268CD,
                0x391F0E,
                0x40BA18,
                0x495860,
                0x531C6C,
                0x5E2D58,
                0x6AB778,
                0x78ED03,
                0x8906E4,
                0x9B4597,
                0xAFF230,
                0xC75F7C,
                0xE1EB51,
                0x1000000,
                0x1221604,
                0x148B5E3,
                0x1747A51,
                0x1A61298,
                0x1DE455D,
                0x21DF3B6,
                0x2661CB0,
                0x2B7E151,
                0x3148917,
                0x37D871D,
                0x3F47FE8,
                0x47B4FF9,
                0x5141345,
                0x5C12DA4,
                0x6855466,
                0x763992E,
                0x85F7635,
                0x97CDC41,
                0xAC04266,
                0xC2EB7EC,
                0xDCDF892,
                0xFA48385,
                0x11B9B565,
                0x1415E5BF,
                0x16C2887C,
                0x19CA53B7,
                0x1D396AA9,
                0x211D8E42,
                0x25865441,
                0x2A8565A1,
                0x302EC550,
                0x3699205C,
                0x3DDE28BF,
                0x461AFC4D,
                0x4F709953,
                0x5A0462B7,
                0x6600B5BC,
                0x739593AB,
                0x82F9621A,
                0x9469C4CB,
                0xA82C948C,
                0xBE90F6F8,
                0xD7F09B78,
                0xF4B12279,
                0x11545B470,
                0x13A30CF1C,
                0x164065029,
    };
    #endif // (defined(TINYMIND_USE_EXP_40_24))
    #if (defined(TINYMIND_USE_EXP_41_23))
    const uint64_t ExpValuesTableQ41_23::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5139,
                0x5C09,
                0x684B,
                0x762E,
                0x85EA,
                0x97BE,
                0xABF3,
                0xC2D8,
                0xDCC9,
                0xFA2F,
                0x11B7F,
                0x1413F,
                0x16C05,
                0x19C7C,
                0x1D369,
                0x211A5,
                0x2582A,
                0x2A814,
                0x302A1,
                0x3693C,
                0x3DD82,
                0x46142,
                0x4F68D,
                0x59FB9,
                0x65F6C,
                0x738A4,
                0x82EC9,
                0x945B4,
                0xA81C2,
                0xBE7E6,
                0xD7DB8,
                0xF4994,
                0x1152AA,
                0x13A122,
                0x163E39,
                0x193466,
                0x1C8F87,
                0x205D0C,
                0x24AC30,
                0x298E36,
                0x2F16AC,
                0x355BBC,
                0x3C7681,
                0x448372,
                0x4DA2CB,
                0x57F918,
                0x63AFBE,
                0x70F5A8,
                0x800000,
                0x910B02,
                0xA45AF1,
                0xBA3D28,
                0xD3094C,
                0xEF22AE,
                0x10EF9DB,
                0x1330E58,
                0x15BF0A8,
                0x18A448B,
                0x1BEC38E,
                0x1FA3FF4,
                0x23DA7FC,
                0x28A09A2,
                0x2E096D2,
                0x342AA33,
                0x3B1CC97,
                0x42FBB1A,
                0x4BE6E20,
                0x5602133,
                0x6175BF6,
                0x6E6FC49,
                0x7D241C2,
                0x8DCDAB2,
                0xA0AF2DF,
                0xB61443E,
                0xCE529DB,
                0xE9CB554,
                0x108EC721,
                0x12C32A20,
                0x1542B2D0,
                0x181762A8,
                0x1B4C902E,
                0x1EEF145F,
                0x230D7E26,
                0x27B84CA9,
                0x2D02315B,
                0x33005ADE,
                0x39CAC9D5,
                0x417CB10D,
                0x4A34E265,
                0x54164A46,
                0x5F487B7C,
                0x6BF84DBC,
                0x7A58913C,
                0x8AA2DA38,
                0x9D18678E,
                0xB2032814,
    };
    #endif // (defined(TINYMIND_USE_EXP_41_23))
    #if (defined(TINYMIND_USE_EXP_42_22))
    const uint64_t ExpValuesTableQ42_22::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289C,
                0x2E04,
                0x3425,
                0x3B17,
                0x42F5,
                0x4BDF,
                0x55F9,
                0x616C,
                0x6E64,
                0x7D17,
                0x8DBF,
                0xA09F,
                0xB602,
                0xCE3E,
                0xE9B4,
                0x108D2,
                0x12C15,
                0x1540A,
                0x18150,
                0x1B49E,
                0x1EEC1,
                0x230A1,
                0x27B46,
                0x2CFDC,
                0x32FB6,
                0x39C52,
                0x41764,
                0x4A2DA,
                0x540E1,
                0x5F3F3,
                0x6BEDC,
                0x7A4CA,
                0x8A955,
                0x9D091,
                0xB1F1C,
                0xC9A33,
                0xE47C3,
                0x102E86,
                0x125618,
                0x14C71B,
                0x178B56,
                0x1AADDE,
                0x1E3B40,
                0x2241B9,
                0x26D165,
                0x2BFC8C,
                0x31D7DF,
                0x387AD4,
                0x400000,
                0x488581,
                0x522D78,
                0x5D1E94,
                0x6984A6,
                0x779157,
                0x877CED,
                0x99872C,
                0xADF854,
                0xC52245,
                0xDF61C7,
                0xFD1FFA,
                0x11ED3FE,
                0x14504D1,
                0x1704B69,
                0x1A15519,
                0x1D8E64B,
                0x217DD8D,
                0x25F3710,
                0x2B01099,
                0x30BADFB,
                0x3737E24,
                0x3E920E1,
                0x46E6D59,
                0x505796F,
                0x5B0A21F,
                0x67294ED,
                0x74E5AAA,
                0x8476390,
                0x9619510,
                0xAA15968,
                0xC0BB154,
                0xDA64817,
                0xF778A2F,
                0x1186BF13,
                0x13DC2654,
                0x168118AD,
                0x19802D6F,
                0x1CE564EA,
                0x20BE5886,
                0x251A7132,
                0x2A0B2523,
                0x2FA43DBE,
                0x35FC26DE,
                0x3D2C489E,
                0x45516D1C,
                0x4E8C33C7,
                0x5901940A,
    };
    #endif // (defined(TINYMIND_USE_EXP_42_22))
    #if (defined(TINYMIND_USE_EXP_43_21))
    const uint64_t ExpValuesTableQ43_21::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144E,
                0x1702,
                0x1A12,
                0x1D8B,
                0x217A,
                0x25EF,
                0x2AFC,
                0x30B6,
                0x3732,
                0x3E8B,
                0x46DF,
                0x504F,
                0x5B01,
                0x671F,
                0x74DA,
                0x8469,
                0x960A,
                0xAA05,
                0xC0A8,
                0xDA4F,
                0xF760,
                0x11850,
                0x13DA3,
                0x167EE,
                0x197DB,
                0x1CE29,
                0x20BB2,
                0x2516D,
                0x2A070,
                0x2F9F9,
                0x35F6E,
                0x3D265,
                0x454AA,
                0x4E848,
                0x58F8E,
                0x64D19,
                0x723E1,
                0x81743,
                0x92B0C,
                0xA638D,
                0xBC5AB,
                0xD56EF,
                0xF1DA0,
                0x1120DC,
                0x1368B2,
                0x15FE46,
                0x18EBEF,
                0x1C3D6A,
                0x200000,
                0x2442C0,
                0x2916BC,
                0x2E8F4A,
                0x34C253,
                0x3BC8AB,
                0x43BE76,
                0x4CC396,
                0x56FC2A,
                0x629122,
                0x6FB0E3,
                0x7E8FFD,
                0x8F69FF,
                0xA28268,
                0xB825B4,
                0xD0AA8C,
                0xEC7325,
                0x10BEEC6,
                0x12F9B88,
                0x158084C,
                0x185D6FD,
                0x1B9BF12,
                0x1F49070,
                0x23736AC,
                0x282BCB7,
                0x2D8510F,
                0x3394A76,
                0x3A72D55,
                0x423B1C8,
                0x4B0CA88,
                0x550ACB4,
                0x605D8AA,
                0x6D3240B,
                0x7BBC517,
                0x8C35F89,
                0x9EE132A,
                0xB408C56,
                0xCC016B7,
                0xE72B275,
                0x105F2C43,
                0x128D3899,
                0x15059291,
                0x17D21EDF,
                0x1AFE136F,
                0x1E96244F,
                0x22A8B68E,
                0x274619E3,
                0x2C80CA05,
    };
    #endif // (defined(TINYMIND_USE_EXP_43_21))
    #if (defined(TINYMIND_USE_EXP_44_20))
    const uint64_t ExpValuesTableQ44_20::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA27,
                0xB81,
                0xD09,
                0xEC5,
                0x10BD,
                0x12F7,
                0x157E,
                0x185B,
                0x1B99,
                0x1F45,
                0x236F,
                0x2827,
                0x2D80,
                0x338F,
                0x3A6D,
                0x4234,
                0x4B05,
                0x5502,
                0x6054,
                0x6D27,
                0x7BB0,
                0x8C28,
                0x9ED1,
                0xB3F7,
                0xCBED,
                0xE714,
                0x105D9,
                0x128B6,
                0x15038,
                0x17CFC,
                0x1AFB7,
                0x1E932,
                0x22A55,
                0x27424,
                0x2C7C7,
                0x3268C,
                0x391F0,
                0x40BA1,
                0x49586,
                0x531C6,
                0x5E2D5,
                0x6AB77,
                0x78ED0,
                0x8906E,
                0x9B459,
                0xAFF23,
                0xC75F7,
                0xE1EB5,
                0x100000,
                0x122160,
                0x148B5E,
                0x1747A5,
                0x1A6129,
                0x1DE455,
                0x21DF3B,
                0x2661CB,
                0x2B7E15,
                0x314891,
                0x37D871,
                0x3F47FE,
                0x47B4FF,
                0x514134,
                0x5C12DA,
                0x685546,
                0x763992,
                0x85F763,
                0x97CDC4,
                0xAC0426,
                0xC2EB7E,
                0xDCDF89,
                0xFA4838,
                0x11B9B56,
                0x1415E5B,
                0x16C2887,
                0x19CA53B,
                0x1D396AA,
                0x211D8E4,
                0x2586544,
                0x2A8565A,
                0x302EC55,
                0x3699205,
                0x3DDE28B,
                0x461AFC4,
                0x4F70995,
                0x5A0462B,
                0x6600B5B,
                0x739593A,
                0x82F9621,
                0x9469C4C,
                0xA82C948,
                0xBE90F6F,
                0xD7F09B7,
                0xF4B1227,
                0x11545B47,
                0x13A30CF1,
                0x16406502,
    };
    #endif // (defined(TINYMIND_USE_EXP_44_20))
    #if (defined(TINYMIND_USE_EXP_45_19))
    const uint64_t ExpValuesTableQ45_19::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x513,
                0x5C0,
                0x684,
                0x762,
                0x85E,
                0x97B,
                0xABF,
                0xC2D,
                0xDCC,
                0xFA2,
                0x11B7,
                0x1413,
                0x16C0,
                0x19C7,
                0x1D36,
                0x211A,
                0x2582,
                0x2A81,
                0x302A,
                0x3693,
                0x3DD8,
                0x4614,
                0x4F68,
                0x59FB,
                0x65F6,
                0x738A,
                0x82EC,
                0x945B,
                0xA81C,
                0xBE7E,
                0xD7DB,
                0xF499,
                0x1152A,
                0x13A12,
                0x163E3,
                0x19346,
                0x1C8F8,
                0x205D0,
                0x24AC3,
                0x298E3,
                0x2F16A,
                0x355BB,
                0x3C768,
                0x44837,
                0x4DA2C,
                0x57F91,
                0x63AFB,
                0x70F5A,
                0x80000,
                0x910B0,
                0xA45AF,
                0xBA3D2,
                0xD3094,
                0xEF22A,
                0x10EF9D,
                0x1330E5,
                0x15BF0A,
                0x18A448,
                0x1BEC38,
                0x1FA3FF,
                0x23DA7F,
                0x28A09A,
                0x2E096D,
                0x342AA3,
                0x3B1CC9,
                0x42FBB1,
                0x4BE6E2,
                0x560213,
                0x6175BF,
                0x6E6FC4,
                0x7D241C,
                0x8DCDAB,
                0xA0AF2D,
                0xB61443,
                0xCE529D,
                0xE9CB55,
                0x108EC72,
                0x12C32A2,
                0x1542B2D,
                0x181762A,
                0x1B4C902,
                0x1EEF145,
                0x230D7E2,
                0x27B84CA,
                0x2D02315,
                0x33005AD,
                0x39CAC9D,
                0x417CB10,
                0x4A34E26,
                0x54164A4,
                0x5F487B7,
                0x6BF84DB,
                0x7A58913,
                0x8AA2DA3,
                0x9D18678,
                0xB203281,
    };
    #endif // (defined(TINYMIND_USE_EXP_45_19))
    #if (defined(TINYMIND_USE_EXP_46_18))
    const uint64_t ExpValuesTableQ46_18::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x289,
                0x2E0,
                0x342,
                0x3B1,
                0x42F,
                0x4BD,
                0x55F,
                0x616,
                0x6E6,
                0x7D1,
                0x8DB,
                0xA09,
                0xB60,
                0xCE3,
                0xE9B,
                0x108D,
                0x12C1,
                0x1540,
                0x1815,
                0x1B49,
                0x1EEC,
                0x230A,
                0x27B4,
                0x2CFD,
                0x32FB,
                0x39C5,
                0x4176,
                0x4A2D,
                0x540E,
                0x5F3F,
                0x6BED,
                0x7A4C,
                0x8A95,
                0x9D09,
                0xB1F1,
                0xC9A3,
                0xE47C,
                0x102E8,
                0x12561,
                0x14C71,
                0x178B5,
                0x1AADD,
                0x1E3B4,
                0x2241B,
                0x26D16,
                0x2BFC8,
                0x31D7D,
                0x387AD,
                0x40000,
                0x48858,
                0x522D7,
                0x5D1E9,
                0x6984A,
                0x77915,
                0x877CE,
                0x99872,
                0xADF85,
                0xC5224,
                0xDF61C,
                0xFD1FF,
                0x11ED3F,
                0x14504D,
                0x1704B6,
                0x1A1551,
                0x1D8E64,
                0x217DD8,
                0x25F371,
                0x2B0109,
                0x30BADF,
                0x3737E2,
                0x3E920E,
                0x46E6D5,
                0x505796,
                0x5B0A21,
                0x67294E,
                0x74E5AA,
                0x847639,
                0x961951,
                0xAA1596,
                0xC0BB15,
                0xDA6481,
                0xF778A2,
                0x1186BF1,
                0x13DC265,
                0x168118A,
                0x19802D6,
                0x1CE564E,
                0x20BE588,
                0x251A713,
                0x2A0B252,
                0x2FA43DB,
                0x35FC26D,
                0x3D2C489,
                0x45516D1,
                0x4E8C33C,
                0x5901940,
    };
    #endif // (defined(TINYMIND_USE_EXP_46_18))
    #if (defined(TINYMIND_USE_EXP_47_17))
    const uint64_t ExpValuesTableQ47_17::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x144,
                0x170,
                0x1A1,
                0x1D8,
                0x217,
                0x25E,
                0x2AF,
                0x30B,
                0x373,
                0x3E8,
                0x46D,
                0x504,
                0x5B0,
                0x671,
                0x74D,
                0x846,
                0x960,
                0xAA0,
                0xC0A,
                0xDA4,
                0xF76,
                0x1185,
                0x13DA,
                0x167E,
                0x197D,
                0x1CE2,
                0x20BB,
                0x2516,
                0x2A07,
                0x2F9F,
                0x35F6,
                0x3D26,
                0x454A,
                0x4E84,
                0x58F8,
                0x64D1,
                0x723E,
                0x8174,
                0x92B0,
                0xA638,
                0xBC5A,
                0xD56E,
                0xF1DA,
                0x1120D,
                0x1368B,
                0x15FE4,
                0x18EBE,
                0x1C3D6,
                0x20000,
                0x2442C,
                0x2916B,
                0x2E8F4,
                0x34C25,
                0x3BC8A,
                0x43BE7,
                0x4CC39,
                0x56FC2,
                0x62912,
                0x6FB0E,
                0x7E8FF,
                0x8F69F,
                0xA2826,
                0xB825B,
                0xD0AA8,
                0xEC732,
                0x10BEEC,
                0x12F9B8,
                0x158084,
                0x185D6F,
                0x1B9BF1,
                0x1F4907,
                0x23736A,
                0x282BCB,
                0x2D8510,
                0x3394A7,
                0x3A72D5,
                0x423B1C,
                0x4B0CA8,
                0x550ACB,
                0x605D8A,
                0x6D3240,
                0x7BBC51,
                0x8C35F8,
                0x9EE132,
                0xB408C5,
                0xCC016B,
                0xE72B27,
                0x105F2C4,
                0x128D389,
                0x1505929,
                0x17D21ED,
                0x1AFE136,
                0x1E96244,
                0x22A8B68,
                0x274619E,
                0x2C80CA0,
    };
    #endif // (defined(TINYMIND_USE_EXP_47_17))
    #if (defined(TINYMIND_USE_EXP_48_16))
    const uint64_t ExpValuesTableQ48_16::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA2,
                0xB8,
                0xD0,
                0xEC,
                0x10B,
                0x12F,
                0x157,
                0x185,
                0x1B9,
                0x1F4,
                0x236,
                0x282,
                0x2D8,
                0x338,
                0x3A6,
                0x423,
                0x4B0,
                0x550,
                0x605,
                0x6D2,
                0x7BB,
                0x8C2,
                0x9ED,
                0xB3F,
                0xCBE,
                0xE71,
                0x105D,
                0x128B,
                0x1503,
                0x17CF,
                0x1AFB,
                0x1E93,
                0x22A5,
                0x2742,
                0x2C7C,
                0x3268,
                0x391F,
                0x40BA,
                0x4958,
                0x531C,
                0x5E2D,
                0x6AB7,
                0x78ED,
                0x8906,
                0x9B45,
                0xAFF2,
                0xC75F,
                0xE1EB,
                0x10000,
                0x12216,
                0x148B5,
                0x1747A,
                0x1A612,
                0x1DE45,
                0x21DF3,
                0x2661C,
                0x2B7E1,
                0x31489,
                0x37D87,
                0x3F47F,
                0x47B4F,
                0x51413,
                0x5C12D,
                0x68554,
                0x76399,
                0x85F76,
                0x97CDC,
                0xAC042,
                0xC2EB7,
                0xDCDF8,
                0xFA483,
                0x11B9B5,
                0x1415E5,
                0x16C288,
                0x19CA53,
                0x1D396A,
                0x211D8E,
                0x258654,
                0x2A8565,
                0x302EC5,
                0x369920,
                0x3DDE28,
                0x461AFC,
                0x4F7099,
                0x5A0462,
                0x6600B5,
                0x739593,
                0x82F962,
                0x9469C4,
                0xA82C94,
                0xBE90F6,
                0xD7F09B,
                0xF4B122,
                0x11545B4,
                0x13A30CF,
                0x1640650,
    };
    #endif // (defined(TINYMIND_USE_EXP_48_16))
    #if (defined(TINYMIND_USE_EXP_49_15))
    const uint64_t ExpValuesTableQ49_15::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x51,
                0x5C,
                0x68,
                0x76,
                0x85,
                0x97,
                0xAB,
                0xC2,
                0xDC,
                0xFA,
                0x11B,
                0x141,
                0x16C,
                0x19C,
                0x1D3,
                0x211,
                0x258,
                0x2A8,
                0x302,
                0x369,
                0x3DD,
                0x461,
                0x4F6,
                0x59F,
                0x65F,
                0x738,
                0x82E,
                0x945,
                0xA81,
                0xBE7,
                0xD7D,
                0xF49,
                0x1152,
                0x13A1,
                0x163E,
                0x1934,
                0x1C8F,
                0x205D,
                0x24AC,
                0x298E,
                0x2F16,
                0x355B,
                0x3C76,
                0x4483,
                0x4DA2,
                0x57F9,
                0x63AF,
                0x70F5,
                0x8000,
                0x910B,
                0xA45A,
                0xBA3D,
                0xD309,
                0xEF22,
                0x10EF9,
                0x1330E,
                0x15BF0,
                0x18A44,
                0x1BEC3,
                0x1FA3F,
                0x23DA7,
                0x28A09,
                0x2E096,
                0x342AA,
                0x3B1CC,
                0x42FBB,
                0x4BE6E,
                0x56021,
                0x6175B,
                0x6E6FC,
                0x7D241,
                0x8DCDA,
                0xA0AF2,
                0xB6144,
                0xCE529,
                0xE9CB5,
                0x108EC7,
                0x12C32A,
                0x1542B2,
                0x181762,
                0x1B4C90,
                0x1EEF14,
                0x230D7E,
                0x27B84C,
                0x2D0231,
                0x33005A,
                0x39CAC9,
                0x417CB1,
                0x4A34E2,
                0x54164A,
                0x5F487B,
                0x6BF84D,
                0x7A5891,
                0x8AA2DA,
                0x9D1867,
                0xB20328,
    };
    #endif // (defined(TINYMIND_USE_EXP_49_15))
    #if (defined(TINYMIND_USE_EXP_50_14))
    const uint64_t ExpValuesTableQ50_14::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x28,
                0x2E,
                0x34,
                0x3B,
                0x42,
                0x4B,
                0x55,
                0x61,
                0x6E,
                0x7D,
                0x8D,
                0xA0,
                0xB6,
                0xCE,
                0xE9,
                0x108,
                0x12C,
                0x154,
                0x181,
                0x1B4,
                0x1EE,
                0x230,
                0x27B,
                0x2CF,
                0x32F,
                0x39C,
                0x417,
                0x4A2,
                0x540,
                0x5F3,
                0x6BE,
                0x7A4,
                0x8A9,
                0x9D0,
                0xB1F,
                0xC9A,
                0xE47,
                0x102E,
                0x1256,
                0x14C7,
                0x178B,
                0x1AAD,
                0x1E3B,
                0x2241,
                0x26D1,
                0x2BFC,
                0x31D7,
                0x387A,
                0x4000,
                0x4885,
                0x522D,
                0x5D1E,
                0x6984,
                0x7791,
                0x877C,
                0x9987,
                0xADF8,
                0xC522,
                0xDF61,
                0xFD1F,
                0x11ED3,
                0x14504,
                0x1704B,
                0x1A155,
                0x1D8E6,
                0x217DD,
                0x25F37,
                0x2B010,
                0x30BAD,
                0x3737E,
                0x3E920,
                0x46E6D,
                0x50579,
                0x5B0A2,
                0x67294,
                0x74E5A,
                0x84763,
                0x96195,
                0xAA159,
                0xC0BB1,
                0xDA648,
                0xF778A,
                0x1186BF,
                0x13DC26,
                0x168118,
                0x19802D,
                0x1CE564,
                0x20BE58,
                0x251A71,
                0x2A0B25,
                0x2FA43D,
                0x35FC26,
                0x3D2C48,
                0x45516D,
                0x4E8C33,
                0x590194,
    };
    #endif // (defined(TINYMIND_USE_EXP_50_14))
    #if (defined(TINYMIND_USE_EXP_51_13))
    const uint64_t ExpValuesTableQ51_13::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x14,
                0x17,
                0x1A,
                0x1D,
                0x21,
                0x25,
                0x2A,
                0x30,
                0x37,
                0x3E,
                0x46,
                0x50,
                0x5B,
                0x67,
                0x74,
                0x84,
                0x96,
                0xAA,
                0xC0,
                0xDA,
                0xF7,
                0x118,
                0x13D,
                0x167,
                0x197,
                0x1CE,
                0x20B,
                0x251,
                0x2A0,
                0x2F9,
                0x35F,
                0x3D2,
                0x454,
                0x4E8,
                0x58F,
                0x64D,
                0x723,
                0x817,
                0x92B,
                0xA63,
                0xBC5,
                0xD56,
                0xF1D,
                0x1120,
                0x1368,
                0x15FE,
                0x18EB,
                0x1C3D,
                0x2000,
                0x2442,
                0x2916,
                0x2E8F,
                0x34C2,
                0x3BC8,
                0x43BE,
                0x4CC3,
                0x56FC,
                0x6291,
                0x6FB0,
                0x7E8F,
                0x8F69,
                0xA282,
                0xB825,
                0xD0AA,
                0xEC73,
                0x10BEE,
                0x12F9B,
                0x15808,
                0x185D6,
                0x1B9BF,
                0x1F490,
                0x23736,
                0x282BC,
                0x2D851,
                0x3394A,
                0x3A72D,
                0x423B1,
                0x4B0CA,
                0x550AC,
                0x605D8,
                0x6D324,
                0x7BBC5,
                0x8C35F,
                0x9EE13,
                0xB408C,
                0xCC016,
                0xE72B2,
                0x105F2C,
                0x128D38,
                0x150592,
                0x17D21E,
                0x1AFE13,
                0x1E9624,
                0x22A8B6,
                0x274619,
                0x2C80CA,
    };
    #endif // (defined(TINYMIND_USE_EXP_51_13))
    #if (defined(TINYMIND_USE_EXP_52_12))
    const uint64_t ExpValuesTableQ52_12::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0xA,
                0xB,
                0xD,
                0xE,
                0x10,
                0x12,
                0x15,
                0x18,
                0x1B,
                0x1F,
                0x23,
                0x28,
                0x2D,
                0x33,
                0x3A,
                0x42,
                0x4B,
                0x55,
                0x60,
                0x6D,
                0x7B,
                0x8C,
                0x9E,
                0xB3,
                0xCB,
                0xE7,
                0x105,
                0x128,
                0x150,
                0x17C,
                0x1AF,
                0x1E9,
                0x22A,
                0x274,
                0x2C7,
                0x326,
                0x391,
                0x40B,
                0x495,
                0x531,
                0x5E2,
                0x6AB,
                0x78E,
                0x890,
                0x9B4,
                0xAFF,
                0xC75,
                0xE1E,
                0x1000,
                0x1221,
                0x148B,
                0x1747,
                0x1A61,
                0x1DE4,
                0x21DF,
                0x2661,
                0x2B7E,
                0x3148,
                0x37D8,
                0x3F47,
                0x47B4,
                0x5141,
                0x5C12,
                0x6855,
                0x7639,
                0x85F7,
                0x97CD,
                0xAC04,
                0xC2EB,
                0xDCDF,
                0xFA48,
                0x11B9B,
                0x1415E,
                0x16C28,
                0x19CA5,
                0x1D396,
                0x211D8,
                0x25865,
                0x2A856,
                0x302EC,
                0x36992,
                0x3DDE2,
                0x461AF,
                0x4F709,
                0x5A046,
                0x6600B,
                0x73959,
                0x82F96,
                0x9469C,
                0xA82C9,
                0xBE90F,
                0xD7F09,
                0xF4B12,
                0x11545B,
                0x13A30C,
                0x164065,
    };
    #endif // (defined(TINYMIND_USE_EXP_52_12))
    #if (defined(TINYMIND_USE_EXP_53_11))
    const uint64_t ExpValuesTableQ53_11::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x14,
                0x16,
                0x19,
                0x1D,
                0x21,
                0x25,
                0x2A,
                0x30,
                0x36,
                0x3D,
                0x46,
                0x4F,
                0x59,
                0x65,
                0x73,
                0x82,
                0x94,
                0xA8,
                0xBE,
                0xD7,
                0xF4,
                0x115,
                0x13A,
                0x163,
                0x193,
                0x1C8,
                0x205,
                0x24A,
                0x298,
                0x2F1,
                0x355,
                0x3C7,
                0x448,
                0x4DA,
                0x57F,
                0x63A,
                0x70F,
                0x800,
                0x910,
                0xA45,
                0xBA3,
                0xD30,
                0xEF2,
                0x10EF,
                0x1330,
                0x15BF,
                0x18A4,
                0x1BEC,
                0x1FA3,
                0x23DA,
                0x28A0,
                0x2E09,
                0x342A,
                0x3B1C,
                0x42FB,
                0x4BE6,
                0x5602,
                0x6175,
                0x6E6F,
                0x7D24,
                0x8DCD,
                0xA0AF,
                0xB614,
                0xCE52,
                0xE9CB,
                0x108EC,
                0x12C32,
                0x1542B,
                0x18176,
                0x1B4C9,
                0x1EEF1,
                0x230D7,
                0x27B84,
                0x2D023,
                0x33005,
                0x39CAC,
                0x417CB,
                0x4A34E,
                0x54164,
                0x5F487,
                0x6BF84,
                0x7A589,
                0x8AA2D,
                0x9D186,
                0xB2032,
    };
    #endif // (defined(TINYMIND_USE_EXP_53_11))
    #if (defined(TINYMIND_USE_EXP_54_10))
    const uint64_t ExpValuesTableQ54_10::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0xA,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x15,
                0x18,
                0x1B,
                0x1E,
                0x23,
                0x27,
                0x2C,
                0x32,
                0x39,
                0x41,
                0x4A,
                0x54,
                0x5F,
                0x6B,
                0x7A,
                0x8A,
                0x9D,
                0xB1,
                0xC9,
                0xE4,
                0x102,
                0x125,
                0x14C,
                0x178,
                0x1AA,
                0x1E3,
                0x224,
                0x26D,
                0x2BF,
                0x31D,
                0x387,
                0x400,
                0x488,
                0x522,
                0x5D1,
                0x698,
                0x779,
                0x877,
                0x998,
                0xADF,
                0xC52,
                0xDF6,
                0xFD1,
                0x11ED,
                0x1450,
                0x1704,
                0x1A15,
                0x1D8E,
                0x217D,
                0x25F3,
                0x2B01,
                0x30BA,
                0x3737,
                0x3E92,
                0x46E6,
                0x5057,
                0x5B0A,
                0x6729,
                0x74E5,
                0x8476,
                0x9619,
                0xAA15,
                0xC0BB,
                0xDA64,
                0xF778,
                0x1186B,
                0x13DC2,
                0x16811,
                0x19802,
                0x1CE56,
                0x20BE5,
                0x251A7,
                0x2A0B2,
                0x2FA43,
                0x35FC2,
                0x3D2C4,
                0x45516,
                0x4E8C3,
                0x59019,
    };
    #endif // (defined(TINYMIND_USE_EXP_54_10))
    #if (defined(TINYMIND_USE_EXP_55_9))
    const uint64_t ExpValuesTableQ55_9::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x13,
                0x16,
                0x19,
                0x1C,
                0x20,
                0x25,
                0x2A,
                0x2F,
                0x35,
                0x3D,
                0x45,
                0x4E,
                0x58,
                0x64,
                0x72,
                0x81,
                0x92,
                0xA6,
                0xBC,
                0xD5,
                0xF1,
                0x112,
                0x136,
                0x15F,
                0x18E,
                0x1C3,
                0x200,
                0x244,
                0x291,
                0x2E8,
                0x34C,
                0x3BC,
                0x43B,
                0x4CC,
                0x56F,
                0x629,
                0x6FB,
                0x7E8,
                0x8F6,
                0xA28,
                0xB82,
                0xD0A,
                0xEC7,
                0x10BE,
                0x12F9,
                0x1580,
                0x185D,
                0x1B9B,
                0x1F49,
                0x2373,
                0x282B,
                0x2D85,
                0x3394,
                0x3A72,
                0x423B,
                0x4B0C,
                0x550A,
                0x605D,
                0x6D32,
                0x7BBC,
                0x8C35,
                0x9EE1,
                0xB408,
                0xCC01,
                0xE72B,
                0x105F2,
                0x128D3,
                0x15059,
                0x17D21,
                0x1AFE1,
                0x1E962,
                0x22A8B,
                0x27461,
                0x2C80C,
    };
    #endif // (defined(TINYMIND_USE_EXP_55_9))
    #if (defined(TINYMIND_USE_EXP_56_8))
    const uint64_t ExpValuesTableQ56_8::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0x9,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x15,
                0x17,
                0x1A,
                0x1E,
                0x22,
                0x27,
                0x2C,
                0x32,
                0x39,
                0x40,
                0x49,
                0x53,
                0x5E,
                0x6A,
                0x78,
                0x89,
                0x9B,
                0xAF,
                0xC7,
                0xE1,
                0x100,
                0x122,
                0x148,
                0x174,
                0x1A6,
                0x1DE,
                0x21D,
                0x266,
                0x2B7,
                0x314,
                0x37D,
                0x3F4,
                0x47B,
                0x514,
                0x5C1,
                0x685,
                0x763,
                0x85F,
                0x97C,
                0xAC0,
                0xC2E,
                0xDCD,
                0xFA4,
                0x11B9,
                0x1415,
                0x16C2,
                0x19CA,
                0x1D39,
                0x211D,
                0x2586,
                0x2A85,
                0x302E,
                0x3699,
                0x3DDE,
                0x461A,
                0x4F70,
                0x5A04,
                0x6600,
                0x7395,
                0x82F9,
                0x9469,
                0xA82C,
                0xBE90,
                0xD7F0,
                0xF4B1,
                0x11545,
                0x13A30,
                0x16406,
    };
    #endif // (defined(TINYMIND_USE_EXP_56_8))
    #if (defined(TINYMIND_USE_EXP_57_7))
    const uint64_t ExpValuesTableQ57_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xF,
                0x11,
                0x13,
                0x16,
                0x19,
                0x1C,
                0x20,
                0x24,
                0x29,
                0x2F,
                0x35,
                0x3C,
                0x44,
                0x4D,
                0x57,
                0x63,
                0x70,
                0x80,
                0x91,
                0xA4,
                0xBA,
                0xD3,
                0xEF,
                0x10E,
                0x133,
                0x15B,
                0x18A,
                0x1BE,
                0x1FA,
                0x23D,
                0x28A,
                0x2E0,
                0x342,
                0x3B1,
                0x42F,
                0x4BE,
                0x560,
                0x617,
                0x6E6,
                0x7D2,
                0x8DC,
                0xA0A,
                0xB61,
                0xCE5,
                0xE9C,
                0x108E,
                0x12C3,
                0x1542,
                0x1817,
                0x1B4C,
                0x1EEF,
                0x230D,
                0x27B8,
                0x2D02,
                0x3300,
                0x39CA,
                0x417C,
                0x4A34,
                0x5416,
                0x5F48,
                0x6BF8,
                0x7A58,
                0x8AA2,
                0x9D18,
                0xB203,
    };
    #endif // (defined(TINYMIND_USE_EXP_57_7))
    #if (defined(TINYMIND_USE_EXP_58_6))
    const uint64_t ExpValuesTableQ58_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xB,
                0xC,
                0xE,
                0x10,
                0x12,
                0x14,
                0x17,
                0x1A,
                0x1E,
                0x22,
                0x26,
                0x2B,
                0x31,
                0x38,
                0x40,
                0x48,
                0x52,
                0x5D,
                0x69,
                0x77,
                0x87,
                0x99,
                0xAD,
                0xC5,
                0xDF,
                0xFD,
                0x11E,
                0x145,
                0x170,
                0x1A1,
                0x1D8,
                0x217,
                0x25F,
                0x2B0,
                0x30B,
                0x373,
                0x3E9,
                0x46E,
                0x505,
                0x5B0,
                0x672,
                0x74E,
                0x847,
                0x961,
                0xAA1,
                0xC0B,
                0xDA6,
                0xF77,
                0x1186,
                0x13DC,
                0x1681,
                0x1980,
                0x1CE5,
                0x20BE,
                0x251A,
                0x2A0B,
                0x2FA4,
                0x35FC,
                0x3D2C,
                0x4551,
                0x4E8C,
                0x5901,
    };
    #endif // (defined(TINYMIND_USE_EXP_58_6))
    #if (defined(TINYMIND_USE_EXP_59_5))
    const uint64_t ExpValuesTableQ59_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xF,
                0x11,
                0x13,
                0x15,
                0x18,
                0x1C,
                0x20,
                0x24,
                0x29,
                0x2E,
                0x34,
                0x3B,
                0x43,
                0x4C,
                0x56,
                0x62,
                0x6F,
                0x7E,
                0x8F,
                0xA2,
                0xB8,
                0xD0,
                0xEC,
                0x10B,
                0x12F,
                0x158,
                0x185,
                0x1B9,
                0x1F4,
                0x237,
                0x282,
                0x2D8,
                0x339,
                0x3A7,
                0x423,
                0x4B0,
                0x550,
                0x605,
                0x6D3,
                0x7BB,
                0x8C3,
                0x9EE,
                0xB40,
                0xCC0,
                0xE72,
                0x105F,
                0x128D,
                0x1505,
                0x17D2,
                0x1AFE,
                0x1E96,
                0x22A8,
                0x2746,
                0x2C80,
    };
    #endif // (defined(TINYMIND_USE_EXP_59_5))
    #if (defined(TINYMIND_USE_EXP_60_4))
    const uint64_t ExpValuesTableQ60_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xE,
                0x10,
                0x12,
                0x14,
                0x17,
                0x1A,
                0x1D,
                0x21,
                0x26,
                0x2B,
                0x31,
                0x37,
                0x3F,
                0x47,
                0x51,
                0x5C,
                0x68,
                0x76,
                0x85,
                0x97,
                0xAC,
                0xC2,
                0xDC,
                0xFA,
                0x11B,
                0x141,
                0x16C,
                0x19C,
                0x1D3,
                0x211,
                0x258,
                0x2A8,
                0x302,
                0x369,
                0x3DD,
                0x461,
                0x4F7,
                0x5A0,
                0x660,
                0x739,
                0x82F,
                0x946,
                0xA82,
                0xBE9,
                0xD7F,
                0xF4B,
                0x1154,
                0x13A3,
                0x1640,
    };
    #endif // (defined(TINYMIND_USE_EXP_60_4))
    #if (defined(TINYMIND_USE_EXP_61_3))
    const uint64_t ExpValuesTableQ61_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xB,
                0xD,
                0xE,
                0x10,
                0x13,
                0x15,
                0x18,
                0x1B,
                0x1F,
                0x23,
                0x28,
                0x2E,
                0x34,
                0x3B,
                0x42,
                0x4B,
                0x56,
                0x61,
                0x6E,
                0x7D,
                0x8D,
                0xA0,
                0xB6,
                0xCE,
                0xE9,
                0x108,
                0x12C,
                0x154,
                0x181,
                0x1B4,
                0x1EE,
                0x230,
                0x27B,
                0x2D0,
                0x330,
                0x39C,
                0x417,
                0x4A3,
                0x541,
                0x5F4,
                0x6BF,
                0x7A5,
                0x8AA,
                0x9D1,
                0xB20,
    };
    #endif // (defined(TINYMIND_USE_EXP_61_3))
    #if (defined(TINYMIND_USE_EXP_62_2))
    const uint64_t ExpValuesTableQ62_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x5,
                0x6,
                0x7,
                0x8,
                0x9,
                0xA,
                0xC,
                0xD,
                0xF,
                0x11,
                0x14,
                0x17,
                0x1A,
                0x1D,
                0x21,
                0x25,
                0x2B,
                0x30,
                0x37,
                0x3E,
                0x46,
                0x50,
                0x5B,
                0x67,
                0x74,
                0x84,
                0x96,
                0xAA,
                0xC0,
                0xDA,
                0xF7,
                0x118,
                0x13D,
                0x168,
                0x198,
                0x1CE,
                0x20B,
                0x251,
                0x2A0,
                0x2FA,
                0x35F,
                0x3D2,
                0x455,
                0x4E8,
                0x590,
    };
    #endif // (defined(TINYMIND_USE_EXP_62_2))
    #if (defined(TINYMIND_USE_EXP_63_1))
    const uint64_t ExpValuesTableQ63_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x4,
                0x4,
                0x5,
                0x6,
                0x6,
                0x7,
                0x8,
                0xA,
                0xB,
                0xD,
                0xE,
                0x10,
                0x12,
                0x15,
                0x18,
                0x1B,
                0x1F,
                0x23,
                0x28,
                0x2D,
                0x33,
                0x3A,
                0x42,
                0x4B,
                0x55,
                0x60,
                0x6D,
                0x7B,
                0x8C,
                0x9E,
                0xB4,
                0xCC,
                0xE7,
                0x105,
                0x128,
                0x150,
                0x17D,
                0x1AF,
                0x1E9,
                0x22A,
                0x274,
                0x2C8,
    };
    #endif // (defined(TINYMIND_USE_EXP_63_1))
    #if (defined(TINYMIND_USE_LOG_1_7))
    const uint8_t LogValuesTableQ1_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xF6,
                0x4F,
                0x83,
                0xA8,
                0xC4,
                0xDC,
                0xEF,
                0x0,
                0xF,
                0x1C,
                0x28,
                0x33,
                0x3E,
                0x47,
                0x50,
                0x58,
                0x60,
                0x67,
                0x6E,
                0x75,
                0x7B,
                0x81,
                0x87,
                0x8C,
                0x91,
                0x96,
                0x9B,
                0xA0,
                0xA4,
                0xA9,
                0xAD,
                0xB1,
                0xB5,
                0xB9,
                0xBC,
                0xC0,
                0xC4,
                0xC7,
                0xCA,
                0xCE,
                0xD1,
                0xD4,
                0xD7,
                0xDA,
                0xDD,
                0xDF,
                0xE2,
    };
    #endif // (defined(TINYMIND_USE_LOG_1_7))
    #if (defined(TINYMIND_USE_LOG_2_6))
    const uint8_t LogValuesTableQ2_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x7B,
                0xA8,
                0xC2,
                0xD4,
                0xE2,
                0xEE,
                0xF8,
                0x0,
                0x7,
                0xE,
                0x14,
                0x19,
                0x1F,
                0x23,
                0x28,
                0x2C,
                0x30,
                0x33,
                0x37,
                0x3A,
                0x3D,
                0x40,
                0x43,
                0x46,
                0x48,
                0x4B,
                0x4D,
                0x50,
                0x52,
                0x54,
                0x56,
                0x58,
                0x5A,
                0x5C,
                0x5E,
                0x60,
                0x62,
                0x63,
                0x65,
                0x67,
                0x68,
                0x6A,
                0x6B,
                0x6D,
                0x6E,
                0x6F,
                0x71,
    };
    #endif // (defined(TINYMIND_USE_LOG_2_6))
    #if (defined(TINYMIND_USE_LOG_3_5))
    const uint8_t LogValuesTableQ3_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xBE,
                0xD4,
                0xE1,
                0xEA,
                0xF1,
                0xF7,
                0xFC,
                0x0,
                0x3,
                0x7,
                0xA,
                0xC,
                0xF,
                0x11,
                0x14,
                0x16,
                0x18,
                0x19,
                0x1B,
                0x1D,
                0x1E,
                0x20,
                0x21,
                0x23,
                0x24,
                0x25,
                0x26,
                0x28,
                0x29,
                0x2A,
                0x2B,
                0x2C,
                0x2D,
                0x2E,
                0x2F,
                0x30,
                0x31,
                0x31,
                0x32,
                0x33,
                0x34,
                0x35,
                0x35,
                0x36,
                0x37,
                0x37,
                0x38,
    };
    #endif // (defined(TINYMIND_USE_LOG_3_5))
    #if (defined(TINYMIND_USE_LOG_4_4))
    const uint8_t LogValuesTableQ4_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xDF,
                0xEA,
                0xF1,
                0xF5,
                0xF9,
                0xFC,
                0xFE,
                0x0,
                0x1,
                0x3,
                0x5,
                0x6,
                0x7,
                0x8,
                0xA,
                0xB,
                0xC,
                0xC,
                0xD,
                0xE,
                0xF,
                0x10,
                0x10,
                0x11,
                0x12,
                0x12,
                0x13,
                0x14,
                0x14,
                0x15,
                0x15,
                0x16,
                0x16,
                0x17,
                0x17,
                0x18,
                0x18,
                0x18,
                0x19,
                0x19,
                0x1A,
                0x1A,
                0x1A,
                0x1B,
                0x1B,
                0x1B,
                0x1C,
    };
    #endif // (defined(TINYMIND_USE_LOG_4_4))
    #if (defined(TINYMIND_USE_LOG_5_3))
    const uint8_t LogValuesTableQ5_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xF0,
                0xF5,
                0xF9,
                0xFB,
                0xFD,
                0xFE,
                0xFF,
                0x0,
                0x0,
                0x1,
                0x2,
                0x3,
                0x3,
                0x4,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x7,
                0x7,
                0x8,
                0x8,
                0x8,
                0x9,
                0x9,
                0x9,
                0xA,
                0xA,
                0xA,
                0xA,
                0xB,
                0xB,
                0xB,
                0xB,
                0xC,
                0xC,
                0xC,
                0xC,
                0xC,
                0xD,
                0xD,
                0xD,
                0xD,
                0xD,
                0xD,
                0xE,
    };
    #endif // (defined(TINYMIND_USE_LOG_5_3))
    #if (defined(TINYMIND_USE_LOG_6_2))
    const uint8_t LogValuesTableQ6_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xF8,
                0xFB,
                0xFD,
                0xFE,
                0xFF,
                0xFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x4,
                0x4,
                0x4,
                0x4,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x7,
    };
    #endif // (defined(TINYMIND_USE_LOG_6_2))
    #if (defined(TINYMIND_USE_LOG_7_1))
    const uint8_t LogValuesTableQ7_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFC,
                0xFE,
                0xFF,
                0xFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
    };
    #endif // (defined(TINYMIND_USE_LOG_7_1))
    #if (defined(TINYMIND_USE_LOG_1_15))
    const uint16_t LogValuesTableQ1_15::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xF5D5,
                0x4E8E,
                0x8275,
                0xA747,
                0xC3D7,
                0xDB2E,
                0xEEE9,
                0x0,
                0xF13,
                0x1C8F,
                0x28C3,
                0x33E6,
                0x3E25,
                0x47A1,
                0x5076,
                0x58B9,
                0x607B,
                0x67CC,
                0x6EB8,
                0x7549,
                0x7B87,
                0x817C,
                0x872C,
                0x8C9F,
                0x91D8,
                0x96DE,
                0x9BB2,
                0xA05A,
                0xA4D8,
                0xA92F,
                0xAD61,
                0xB172,
                0xB562,
                0xB934,
                0xBCEA,
                0xC085,
                0xC407,
                0xC771,
                0xCAC4,
                0xCE02,
                0xD12B,
                0xD440,
                0xD743,
                0xDA35,
                0xDD15,
                0xDFE5,
                0xE2A6,
    };
    #endif // (defined(TINYMIND_USE_LOG_1_15))
    #if (defined(TINYMIND_USE_LOG_2_14))
    const uint16_t LogValuesTableQ2_14::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x7AEB,
                0xA747,
                0xC13B,
                0xD3A4,
                0xE1EC,
                0xED97,
                0xF775,
                0x0,
                0x789,
                0xE47,
                0x1461,
                0x19F3,
                0x1F12,
                0x23D0,
                0x283B,
                0x2C5C,
                0x303D,
                0x33E6,
                0x375C,
                0x3AA4,
                0x3DC3,
                0x40BE,
                0x4396,
                0x464F,
                0x48EC,
                0x4B6F,
                0x4DD9,
                0x502D,
                0x526C,
                0x5497,
                0x56B0,
                0x58B9,
                0x5AB1,
                0x5C9A,
                0x5E75,
                0x6042,
                0x6203,
                0x63B8,
                0x6562,
                0x6701,
                0x6895,
                0x6A20,
                0x6BA1,
                0x6D1A,
                0x6E8A,
                0x6FF2,
                0x7153,
    };
    #endif // (defined(TINYMIND_USE_LOG_2_14))
    #if (defined(TINYMIND_USE_LOG_3_13))
    const uint16_t LogValuesTableQ3_13::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xBD76,
                0xD3A4,
                0xE09E,
                0xE9D2,
                0xF0F6,
                0xF6CC,
                0xFBBB,
                0x0,
                0x3C4,
                0x723,
                0xA30,
                0xCF9,
                0xF89,
                0x11E8,
                0x141D,
                0x162E,
                0x181E,
                0x19F3,
                0x1BAE,
                0x1D52,
                0x1EE1,
                0x205F,
                0x21CB,
                0x2327,
                0x2476,
                0x25B7,
                0x26EC,
                0x2816,
                0x2936,
                0x2A4B,
                0x2B58,
                0x2C5C,
                0x2D58,
                0x2E4D,
                0x2F3A,
                0x3021,
                0x3101,
                0x31DC,
                0x32B1,
                0x3380,
                0x344A,
                0x3510,
                0x35D0,
                0x368D,
                0x3745,
                0x37F9,
                0x38A9,
    };
    #endif // (defined(TINYMIND_USE_LOG_3_13))
    #if (defined(TINYMIND_USE_LOG_4_12))
    const uint16_t LogValuesTableQ4_12::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xDEBB,
                0xE9D2,
                0xF04F,
                0xF4E9,
                0xF87B,
                0xFB66,
                0xFDDE,
                0x0,
                0x1E2,
                0x391,
                0x518,
                0x67C,
                0x7C4,
                0x8F4,
                0xA0E,
                0xB17,
                0xC0F,
                0xCF9,
                0xDD7,
                0xEA9,
                0xF70,
                0x102F,
                0x10E5,
                0x1193,
                0x123B,
                0x12DB,
                0x1376,
                0x140B,
                0x149B,
                0x1525,
                0x15AC,
                0x162E,
                0x16AC,
                0x1726,
                0x179D,
                0x1810,
                0x1880,
                0x18EE,
                0x1958,
                0x19C0,
                0x1A25,
                0x1A88,
                0x1AE8,
                0x1B46,
                0x1BA2,
                0x1BFC,
                0x1C54,
    };
    #endif // (defined(TINYMIND_USE_LOG_4_12))
    #if (defined(TINYMIND_USE_LOG_5_11))
    const uint16_t LogValuesTableQ5_11::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xEF5E,
                0xF4E9,
                0xF828,
                0xFA75,
                0xFC3E,
                0xFDB3,
                0xFEEF,
                0x0,
                0xF1,
                0x1C8,
                0x28C,
                0x33E,
                0x3E2,
                0x47A,
                0x507,
                0x58B,
                0x607,
                0x67C,
                0x6EB,
                0x754,
                0x7B8,
                0x817,
                0x872,
                0x8C9,
                0x91D,
                0x96D,
                0x9BB,
                0xA05,
                0xA4D,
                0xA92,
                0xAD6,
                0xB17,
                0xB56,
                0xB93,
                0xBCE,
                0xC08,
                0xC40,
                0xC77,
                0xCAC,
                0xCE0,
                0xD12,
                0xD44,
                0xD74,
                0xDA3,
                0xDD1,
                0xDFE,
                0xE2A,
    };
    #endif // (defined(TINYMIND_USE_LOG_5_11))
    #if (defined(TINYMIND_USE_LOG_6_10))
    const uint16_t LogValuesTableQ6_10::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xF7AF,
                0xFA75,
                0xFC14,
                0xFD3B,
                0xFE1F,
                0xFEDA,
                0xFF78,
                0x0,
                0x78,
                0xE4,
                0x146,
                0x19F,
                0x1F1,
                0x23D,
                0x283,
                0x2C5,
                0x303,
                0x33E,
                0x375,
                0x3AA,
                0x3DC,
                0x40B,
                0x439,
                0x464,
                0x48E,
                0x4B6,
                0x4DD,
                0x502,
                0x526,
                0x549,
                0x56B,
                0x58B,
                0x5AB,
                0x5C9,
                0x5E7,
                0x604,
                0x620,
                0x63B,
                0x656,
                0x670,
                0x689,
                0x6A2,
                0x6BA,
                0x6D1,
                0x6E8,
                0x6FF,
                0x715,
    };
    #endif // (defined(TINYMIND_USE_LOG_6_10))
    #if (defined(TINYMIND_USE_LOG_7_9))
    const uint16_t LogValuesTableQ7_9::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFBD8,
                0xFD3B,
                0xFE0A,
                0xFE9E,
                0xFF10,
                0xFF6D,
                0xFFBC,
                0x0,
                0x3C,
                0x72,
                0xA3,
                0xCF,
                0xF8,
                0x11E,
                0x141,
                0x162,
                0x181,
                0x19F,
                0x1BA,
                0x1D5,
                0x1EE,
                0x205,
                0x21C,
                0x232,
                0x247,
                0x25B,
                0x26E,
                0x281,
                0x293,
                0x2A4,
                0x2B5,
                0x2C5,
                0x2D5,
                0x2E4,
                0x2F3,
                0x302,
                0x310,
                0x31D,
                0x32B,
                0x338,
                0x344,
                0x351,
                0x35D,
                0x368,
                0x374,
                0x37F,
                0x38A,
    };
    #endif // (defined(TINYMIND_USE_LOG_7_9))
    #if (defined(TINYMIND_USE_LOG_8_8))
    const uint16_t LogValuesTableQ8_8::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFDEC,
                0xFE9E,
                0xFF05,
                0xFF4F,
                0xFF88,
                0xFFB7,
                0xFFDE,
                0x0,
                0x1E,
                0x39,
                0x51,
                0x67,
                0x7C,
                0x8F,
                0xA0,
                0xB1,
                0xC0,
                0xCF,
                0xDD,
                0xEA,
                0xF7,
                0x102,
                0x10E,
                0x119,
                0x123,
                0x12D,
                0x137,
                0x140,
                0x149,
                0x152,
                0x15A,
                0x162,
                0x16A,
                0x172,
                0x179,
                0x181,
                0x188,
                0x18E,
                0x195,
                0x19C,
                0x1A2,
                0x1A8,
                0x1AE,
                0x1B4,
                0x1BA,
                0x1BF,
                0x1C5,
    };
    #endif // (defined(TINYMIND_USE_LOG_8_8))
    #if (defined(TINYMIND_USE_LOG_9_7))
    const uint16_t LogValuesTableQ9_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFEF6,
                0xFF4F,
                0xFF83,
                0xFFA8,
                0xFFC4,
                0xFFDC,
                0xFFEF,
                0x0,
                0xF,
                0x1C,
                0x28,
                0x33,
                0x3E,
                0x47,
                0x50,
                0x58,
                0x60,
                0x67,
                0x6E,
                0x75,
                0x7B,
                0x81,
                0x87,
                0x8C,
                0x91,
                0x96,
                0x9B,
                0xA0,
                0xA4,
                0xA9,
                0xAD,
                0xB1,
                0xB5,
                0xB9,
                0xBC,
                0xC0,
                0xC4,
                0xC7,
                0xCA,
                0xCE,
                0xD1,
                0xD4,
                0xD7,
                0xDA,
                0xDD,
                0xDF,
                0xE2,
    };
    #endif // (defined(TINYMIND_USE_LOG_9_7))
    #if (defined(TINYMIND_USE_LOG_10_6))
    const uint16_t LogValuesTableQ10_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFF7B,
                0xFFA8,
                0xFFC2,
                0xFFD4,
                0xFFE2,
                0xFFEE,
                0xFFF8,
                0x0,
                0x7,
                0xE,
                0x14,
                0x19,
                0x1F,
                0x23,
                0x28,
                0x2C,
                0x30,
                0x33,
                0x37,
                0x3A,
                0x3D,
                0x40,
                0x43,
                0x46,
                0x48,
                0x4B,
                0x4D,
                0x50,
                0x52,
                0x54,
                0x56,
                0x58,
                0x5A,
                0x5C,
                0x5E,
                0x60,
                0x62,
                0x63,
                0x65,
                0x67,
                0x68,
                0x6A,
                0x6B,
                0x6D,
                0x6E,
                0x6F,
                0x71,
    };
    #endif // (defined(TINYMIND_USE_LOG_10_6))
    #if (defined(TINYMIND_USE_LOG_11_5))
    const uint16_t LogValuesTableQ11_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFBE,
                0xFFD4,
                0xFFE1,
                0xFFEA,
                0xFFF1,
                0xFFF7,
                0xFFFC,
                0x0,
                0x3,
                0x7,
                0xA,
                0xC,
                0xF,
                0x11,
                0x14,
                0x16,
                0x18,
                0x19,
                0x1B,
                0x1D,
                0x1E,
                0x20,
                0x21,
                0x23,
                0x24,
                0x25,
                0x26,
                0x28,
                0x29,
                0x2A,
                0x2B,
                0x2C,
                0x2D,
                0x2E,
                0x2F,
                0x30,
                0x31,
                0x31,
                0x32,
                0x33,
                0x34,
                0x35,
                0x35,
                0x36,
                0x37,
                0x37,
                0x38,
    };
    #endif // (defined(TINYMIND_USE_LOG_11_5))
    #if (defined(TINYMIND_USE_LOG_12_4))
    const uint16_t LogValuesTableQ12_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFDF,
                0xFFEA,
                0xFFF1,
                0xFFF5,
                0xFFF9,
                0xFFFC,
                0xFFFE,
                0x0,
                0x1,
                0x3,
                0x5,
                0x6,
                0x7,
                0x8,
                0xA,
                0xB,
                0xC,
                0xC,
                0xD,
                0xE,
                0xF,
                0x10,
                0x10,
                0x11,
                0x12,
                0x12,
                0x13,
                0x14,
                0x14,
                0x15,
                0x15,
                0x16,
                0x16,
                0x17,
                0x17,
                0x18,
                0x18,
                0x18,
                0x19,
                0x19,
                0x1A,
                0x1A,
                0x1A,
                0x1B,
                0x1B,
                0x1B,
                0x1C,
    };
    #endif // (defined(TINYMIND_USE_LOG_12_4))
    #if (defined(TINYMIND_USE_LOG_13_3))
    const uint16_t LogValuesTableQ13_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFF0,
                0xFFF5,
                0xFFF9,
                0xFFFB,
                0xFFFD,
                0xFFFE,
                0xFFFF,
                0x0,
                0x0,
                0x1,
                0x2,
                0x3,
                0x3,
                0x4,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x7,
                0x7,
                0x8,
                0x8,
                0x8,
                0x9,
                0x9,
                0x9,
                0xA,
                0xA,
                0xA,
                0xA,
                0xB,
                0xB,
                0xB,
                0xB,
                0xC,
                0xC,
                0xC,
                0xC,
                0xC,
                0xD,
                0xD,
                0xD,
                0xD,
                0xD,
                0xD,
                0xE,
    };
    #endif // (defined(TINYMIND_USE_LOG_13_3))
    #if (defined(TINYMIND_USE_LOG_14_2))
    const uint16_t LogValuesTableQ14_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFF8,
                0xFFFB,
                0xFFFD,
                0xFFFE,
                0xFFFF,
                0xFFFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x4,
                0x4,
                0x4,
                0x4,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x7,
    };
    #endif // (defined(TINYMIND_USE_LOG_14_2))
    #if (defined(TINYMIND_USE_LOG_15_1))
    const uint16_t LogValuesTableQ15_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFC,
                0xFFFE,
                0xFFFF,
                0xFFFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
    };
    #endif // (defined(TINYMIND_USE_LOG_15_1))
    #if (defined(TINYMIND_USE_LOG_1_31))
    const uint32_t LogValuesTableQ1_31::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xF5D4DC0D,
                0x4E8DE809,
                0x82742FE2,
                0xA746F405,
                0xC3D6EBCC,
                0xDB2D3BDE,
                0xEEE8717E,
                0x0,
                0xF1383B7,
                0x1C8FF7C7,
                0x28C31784,
                0x33E647D9,
                0x3E251EBF,
                0x47A17D79,
                0x50763FA1,
                0x58B90BFB,
                0x607B982B,
                0x67CC8FB2,
                0x6EB83C6C,
                0x754903C3,
                0x7B87C553,
                0x817C2380,
                0x872CBBE9,
                0x8C9F53D5,
                0x91D8FB8B,
                0x96DE2ABB,
                0x9BB2D78C,
                0xA05A8975,
                0xA4D868C9,
                0xA92F4B9D,
                0xAD61C095,
                0xB17217F7,
                0xB5626B59,
                0xB934A427,
                0xBCEA813D,
                0xC0859BAE,
                0xC4076AEF,
                0xC7714868,
                0xCAC47294,
                0xCE020FBF,
                0xD12B3065,
                0xD440D14F,
                0xD743DD6D,
                0xDA352F7C,
                0xDD159376,
                0xDFE5C7E5,
                0xE2A67F05,
    };
    #endif // (defined(TINYMIND_USE_LOG_1_31))
    #if (defined(TINYMIND_USE_LOG_2_30))
    const uint32_t LogValuesTableQ2_30::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x7AEA6E07,
                0xA746F405,
                0xC13A17F1,
                0xD3A37A03,
                0xE1EB75E6,
                0xED969DEF,
                0xF77438BF,
                0x0,
                0x789C1DB,
                0xE47FBE3,
                0x14618BC2,
                0x19F323EC,
                0x1F128F5F,
                0x23D0BEBC,
                0x283B1FD0,
                0x2C5C85FD,
                0x303DCC15,
                0x33E647D9,
                0x375C1E36,
                0x3AA481E1,
                0x3DC3E2A9,
                0x40BE11C0,
                0x43965DF4,
                0x464FA9EA,
                0x48EC7DC5,
                0x4B6F155D,
                0x4DD96BC6,
                0x502D44BA,
                0x526C3464,
                0x5497A5CE,
                0x56B0E04A,
                0x58B90BFB,
                0x5AB135AC,
                0x5C9A5213,
                0x5E75409E,
                0x6042CDD7,
                0x6203B577,
                0x63B8A434,
                0x6562394A,
                0x670107DF,
                0x68959832,
                0x6A2068A7,
                0x6BA1EEB6,
                0x6D1A97BE,
                0x6E8AC9BB,
                0x6FF2E3F2,
                0x71533F82,
    };
    #endif // (defined(TINYMIND_USE_LOG_2_30))
    #if (defined(TINYMIND_USE_LOG_3_29))
    const uint32_t LogValuesTableQ3_29::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xBD753704,
                0xD3A37A03,
                0xE09D0BF9,
                0xE9D1BD02,
                0xF0F5BAF3,
                0xF6CB4EF8,
                0xFBBA1C60,
                0x0,
                0x3C4E0ED,
                0x723FDF1,
                0xA30C5E1,
                0xCF991F6,
                0xF8947AF,
                0x11E85F5E,
                0x141D8FE8,
                0x162E42FE,
                0x181EE60A,
                0x19F323EC,
                0x1BAE0F1B,
                0x1D5240F0,
                0x1EE1F154,
                0x205F08E0,
                0x21CB2EFA,
                0x2327D4F5,
                0x24763EE2,
                0x25B78AAE,
                0x26ECB5E3,
                0x2816A25D,
                0x29361A32,
                0x2A4BD2E7,
                0x2B587025,
                0x2C5C85FD,
                0x2D589AD6,
                0x2E4D2909,
                0x2F3AA04F,
                0x302166EB,
                0x3101DABB,
                0x31DC521A,
                0x32B11CA5,
                0x338083EF,
                0x344ACC19,
                0x35103453,
                0x35D0F75B,
                0x368D4BDF,
                0x374564DD,
                0x37F971F9,
                0x38A99FC1,
    };
    #endif // (defined(TINYMIND_USE_LOG_3_29))
    #if (defined(TINYMIND_USE_LOG_4_28))
    const uint32_t LogValuesTableQ4_28::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xDEBA9B82,
                0xE9D1BD02,
                0xF04E85FD,
                0xF4E8DE81,
                0xF87ADD7A,
                0xFB65A77C,
                0xFDDD0E30,
                0x0,
                0x1E27076,
                0x391FEF8,
                0x51862F0,
                0x67CC8FB,
                0x7C4A3D7,
                0x8F42FAF,
                0xA0EC7F4,
                0xB17217F,
                0xC0F7305,
                0xCF991F6,
                0xDD7078D,
                0xEA92078,
                0xF70F8AA,
                0x102F8470,
                0x10E5977D,
                0x1193EA7A,
                0x123B1F71,
                0x12DBC557,
                0x13765AF1,
                0x140B512E,
                0x149B0D19,
                0x1525E973,
                0x15AC3812,
                0x162E42FE,
                0x16AC4D6B,
                0x17269484,
                0x179D5027,
                0x1810B375,
                0x1880ED5D,
                0x18EE290D,
                0x19588E52,
                0x19C041F7,
                0x1A25660C,
                0x1A881A29,
                0x1AE87BAD,
                0x1B46A5EF,
                0x1BA2B26E,
                0x1BFCB8FC,
                0x1C54CFE0,
    };
    #endif // (defined(TINYMIND_USE_LOG_4_28))
    #if (defined(TINYMIND_USE_LOG_5_27))
    const uint32_t LogValuesTableQ5_27::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xEF5D4DC1,
                0xF4E8DE81,
                0xF82742FF,
                0xFA746F41,
                0xFC3D6EBD,
                0xFDB2D3BE,
                0xFEEE8718,
                0x0,
                0xF1383B,
                0x1C8FF7C,
                0x28C3178,
                0x33E647D,
                0x3E251EB,
                0x47A17D7,
                0x50763FA,
                0x58B90BF,
                0x607B982,
                0x67CC8FB,
                0x6EB83C6,
                0x754903C,
                0x7B87C55,
                0x817C238,
                0x872CBBE,
                0x8C9F53D,
                0x91D8FB8,
                0x96DE2AB,
                0x9BB2D78,
                0xA05A897,
                0xA4D868C,
                0xA92F4B9,
                0xAD61C09,
                0xB17217F,
                0xB5626B5,
                0xB934A42,
                0xBCEA813,
                0xC0859BA,
                0xC4076AE,
                0xC771486,
                0xCAC4729,
                0xCE020FB,
                0xD12B306,
                0xD440D14,
                0xD743DD6,
                0xDA352F7,
                0xDD15937,
                0xDFE5C7E,
                0xE2A67F0,
    };
    #endif // (defined(TINYMIND_USE_LOG_5_27))
    #if (defined(TINYMIND_USE_LOG_6_26))
    const uint32_t LogValuesTableQ6_26::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xF7AEA6E1,
                0xFA746F41,
                0xFC13A180,
                0xFD3A37A1,
                0xFE1EB75F,
                0xFED969DF,
                0xFF77438C,
                0x0,
                0x789C1D,
                0xE47FBE,
                0x14618BC,
                0x19F323E,
                0x1F128F5,
                0x23D0BEB,
                0x283B1FD,
                0x2C5C85F,
                0x303DCC1,
                0x33E647D,
                0x375C1E3,
                0x3AA481E,
                0x3DC3E2A,
                0x40BE11C,
                0x43965DF,
                0x464FA9E,
                0x48EC7DC,
                0x4B6F155,
                0x4DD96BC,
                0x502D44B,
                0x526C346,
                0x5497A5C,
                0x56B0E04,
                0x58B90BF,
                0x5AB135A,
                0x5C9A521,
                0x5E75409,
                0x6042CDD,
                0x6203B57,
                0x63B8A43,
                0x6562394,
                0x670107D,
                0x6895983,
                0x6A2068A,
                0x6BA1EEB,
                0x6D1A97B,
                0x6E8AC9B,
                0x6FF2E3F,
                0x71533F8,
    };
    #endif // (defined(TINYMIND_USE_LOG_6_26))
    #if (defined(TINYMIND_USE_LOG_7_25))
    const uint32_t LogValuesTableQ7_25::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFBD75371,
                0xFD3A37A1,
                0xFE09D0C0,
                0xFE9D1BD1,
                0xFF0F5BB0,
                0xFF6CB4F0,
                0xFFBBA1C6,
                0x0,
                0x3C4E0E,
                0x723FDF,
                0xA30C5E,
                0xCF991F,
                0xF8947A,
                0x11E85F5,
                0x141D8FE,
                0x162E42F,
                0x181EE60,
                0x19F323E,
                0x1BAE0F1,
                0x1D5240F,
                0x1EE1F15,
                0x205F08E,
                0x21CB2EF,
                0x2327D4F,
                0x24763EE,
                0x25B78AA,
                0x26ECB5E,
                0x2816A25,
                0x29361A3,
                0x2A4BD2E,
                0x2B58702,
                0x2C5C85F,
                0x2D589AD,
                0x2E4D290,
                0x2F3AA04,
                0x302166E,
                0x3101DAB,
                0x31DC521,
                0x32B11CA,
                0x338083E,
                0x344ACC1,
                0x3510345,
                0x35D0F75,
                0x368D4BD,
                0x374564D,
                0x37F971F,
                0x38A99FC,
    };
    #endif // (defined(TINYMIND_USE_LOG_7_25))
    #if (defined(TINYMIND_USE_LOG_8_24))
    const uint32_t LogValuesTableQ8_24::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFDEBA9B9,
                0xFE9D1BD1,
                0xFF04E860,
                0xFF4E8DE9,
                0xFF87ADD8,
                0xFFB65A78,
                0xFFDDD0E3,
                0x0,
                0x1E2707,
                0x391FEF,
                0x51862F,
                0x67CC8F,
                0x7C4A3D,
                0x8F42FA,
                0xA0EC7F,
                0xB17217,
                0xC0F730,
                0xCF991F,
                0xDD7078,
                0xEA9207,
                0xF70F8A,
                0x102F847,
                0x10E5977,
                0x1193EA7,
                0x123B1F7,
                0x12DBC55,
                0x13765AF,
                0x140B512,
                0x149B0D1,
                0x1525E97,
                0x15AC381,
                0x162E42F,
                0x16AC4D6,
                0x1726948,
                0x179D502,
                0x1810B37,
                0x1880ED5,
                0x18EE290,
                0x19588E5,
                0x19C041F,
                0x1A25660,
                0x1A881A2,
                0x1AE87BA,
                0x1B46A5E,
                0x1BA2B26,
                0x1BFCB8F,
                0x1C54CFE,
    };
    #endif // (defined(TINYMIND_USE_LOG_8_24))
    #if (defined(TINYMIND_USE_LOG_9_23))
    const uint32_t LogValuesTableQ9_23::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFEF5D4DD,
                0xFF4E8DE9,
                0xFF827430,
                0xFFA746F5,
                0xFFC3D6EC,
                0xFFDB2D3C,
                0xFFEEE872,
                0x0,
                0xF1383,
                0x1C8FF7,
                0x28C317,
                0x33E647,
                0x3E251E,
                0x47A17D,
                0x50763F,
                0x58B90B,
                0x607B98,
                0x67CC8F,
                0x6EB83C,
                0x754903,
                0x7B87C5,
                0x817C23,
                0x872CBB,
                0x8C9F53,
                0x91D8FB,
                0x96DE2A,
                0x9BB2D7,
                0xA05A89,
                0xA4D868,
                0xA92F4B,
                0xAD61C0,
                0xB17217,
                0xB5626B,
                0xB934A4,
                0xBCEA81,
                0xC0859B,
                0xC4076A,
                0xC77148,
                0xCAC472,
                0xCE020F,
                0xD12B30,
                0xD440D1,
                0xD743DD,
                0xDA352F,
                0xDD1593,
                0xDFE5C7,
                0xE2A67F,
    };
    #endif // (defined(TINYMIND_USE_LOG_9_23))
    #if (defined(TINYMIND_USE_LOG_10_22))
    const uint32_t LogValuesTableQ10_22::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFF7AEA6F,
                0xFFA746F5,
                0xFFC13A18,
                0xFFD3A37B,
                0xFFE1EB76,
                0xFFED969E,
                0xFFF77439,
                0x0,
                0x789C1,
                0xE47FB,
                0x14618B,
                0x19F323,
                0x1F128F,
                0x23D0BE,
                0x283B1F,
                0x2C5C85,
                0x303DCC,
                0x33E647,
                0x375C1E,
                0x3AA481,
                0x3DC3E2,
                0x40BE11,
                0x43965D,
                0x464FA9,
                0x48EC7D,
                0x4B6F15,
                0x4DD96B,
                0x502D44,
                0x526C34,
                0x5497A5,
                0x56B0E0,
                0x58B90B,
                0x5AB135,
                0x5C9A52,
                0x5E7540,
                0x6042CD,
                0x6203B5,
                0x63B8A4,
                0x656239,
                0x670107,
                0x689598,
                0x6A2068,
                0x6BA1EE,
                0x6D1A97,
                0x6E8AC9,
                0x6FF2E3,
                0x71533F,
    };
    #endif // (defined(TINYMIND_USE_LOG_10_22))
    #if (defined(TINYMIND_USE_LOG_11_21))
    const uint32_t LogValuesTableQ11_21::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFBD7538,
                0xFFD3A37B,
                0xFFE09D0C,
                0xFFE9D1BE,
                0xFFF0F5BB,
                0xFFF6CB4F,
                0xFFFBBA1D,
                0x0,
                0x3C4E0,
                0x723FD,
                0xA30C5,
                0xCF991,
                0xF8947,
                0x11E85F,
                0x141D8F,
                0x162E42,
                0x181EE6,
                0x19F323,
                0x1BAE0F,
                0x1D5240,
                0x1EE1F1,
                0x205F08,
                0x21CB2E,
                0x2327D4,
                0x24763E,
                0x25B78A,
                0x26ECB5,
                0x2816A2,
                0x29361A,
                0x2A4BD2,
                0x2B5870,
                0x2C5C85,
                0x2D589A,
                0x2E4D29,
                0x2F3AA0,
                0x302166,
                0x3101DA,
                0x31DC52,
                0x32B11C,
                0x338083,
                0x344ACC,
                0x351034,
                0x35D0F7,
                0x368D4B,
                0x374564,
                0x37F971,
                0x38A99F,
    };
    #endif // (defined(TINYMIND_USE_LOG_11_21))
    #if (defined(TINYMIND_USE_LOG_12_20))
    const uint32_t LogValuesTableQ12_20::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFDEBA9C,
                0xFFE9D1BE,
                0xFFF04E86,
                0xFFF4E8DF,
                0xFFF87ADE,
                0xFFFB65A8,
                0xFFFDDD0F,
                0x0,
                0x1E270,
                0x391FE,
                0x51862,
                0x67CC8,
                0x7C4A3,
                0x8F42F,
                0xA0EC7,
                0xB1721,
                0xC0F73,
                0xCF991,
                0xDD707,
                0xEA920,
                0xF70F8,
                0x102F84,
                0x10E597,
                0x1193EA,
                0x123B1F,
                0x12DBC5,
                0x13765A,
                0x140B51,
                0x149B0D,
                0x1525E9,
                0x15AC38,
                0x162E42,
                0x16AC4D,
                0x172694,
                0x179D50,
                0x1810B3,
                0x1880ED,
                0x18EE29,
                0x19588E,
                0x19C041,
                0x1A2566,
                0x1A881A,
                0x1AE87B,
                0x1B46A5,
                0x1BA2B2,
                0x1BFCB8,
                0x1C54CF,
    };
    #endif // (defined(TINYMIND_USE_LOG_12_20))
    #if (defined(TINYMIND_USE_LOG_13_19))
    const uint32_t LogValuesTableQ13_19::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFEF5D4E,
                0xFFF4E8DF,
                0xFFF82743,
                0xFFFA7470,
                0xFFFC3D6F,
                0xFFFDB2D4,
                0xFFFEEE88,
                0x0,
                0xF138,
                0x1C8FF,
                0x28C31,
                0x33E64,
                0x3E251,
                0x47A17,
                0x50763,
                0x58B90,
                0x607B9,
                0x67CC8,
                0x6EB83,
                0x75490,
                0x7B87C,
                0x817C2,
                0x872CB,
                0x8C9F5,
                0x91D8F,
                0x96DE2,
                0x9BB2D,
                0xA05A8,
                0xA4D86,
                0xA92F4,
                0xAD61C,
                0xB1721,
                0xB5626,
                0xB934A,
                0xBCEA8,
                0xC0859,
                0xC4076,
                0xC7714,
                0xCAC47,
                0xCE020,
                0xD12B3,
                0xD440D,
                0xD743D,
                0xDA352,
                0xDD159,
                0xDFE5C,
                0xE2A67,
    };
    #endif // (defined(TINYMIND_USE_LOG_13_19))
    #if (defined(TINYMIND_USE_LOG_14_18))
    const uint32_t LogValuesTableQ14_18::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFF7AEA7,
                0xFFFA7470,
                0xFFFC13A2,
                0xFFFD3A38,
                0xFFFE1EB8,
                0xFFFED96A,
                0xFFFF7744,
                0x0,
                0x789C,
                0xE47F,
                0x14618,
                0x19F32,
                0x1F128,
                0x23D0B,
                0x283B1,
                0x2C5C8,
                0x303DC,
                0x33E64,
                0x375C1,
                0x3AA48,
                0x3DC3E,
                0x40BE1,
                0x43965,
                0x464FA,
                0x48EC7,
                0x4B6F1,
                0x4DD96,
                0x502D4,
                0x526C3,
                0x5497A,
                0x56B0E,
                0x58B90,
                0x5AB13,
                0x5C9A5,
                0x5E754,
                0x6042C,
                0x6203B,
                0x63B8A,
                0x65623,
                0x67010,
                0x68959,
                0x6A206,
                0x6BA1E,
                0x6D1A9,
                0x6E8AC,
                0x6FF2E,
                0x71533,
    };
    #endif // (defined(TINYMIND_USE_LOG_14_18))
    #if (defined(TINYMIND_USE_LOG_15_17))
    const uint32_t LogValuesTableQ15_17::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFBD754,
                0xFFFD3A38,
                0xFFFE09D1,
                0xFFFE9D1C,
                0xFFFF0F5C,
                0xFFFF6CB5,
                0xFFFFBBA2,
                0x0,
                0x3C4E,
                0x723F,
                0xA30C,
                0xCF99,
                0xF894,
                0x11E85,
                0x141D8,
                0x162E4,
                0x181EE,
                0x19F32,
                0x1BAE0,
                0x1D524,
                0x1EE1F,
                0x205F0,
                0x21CB2,
                0x2327D,
                0x24763,
                0x25B78,
                0x26ECB,
                0x2816A,
                0x29361,
                0x2A4BD,
                0x2B587,
                0x2C5C8,
                0x2D589,
                0x2E4D2,
                0x2F3AA,
                0x30216,
                0x3101D,
                0x31DC5,
                0x32B11,
                0x33808,
                0x344AC,
                0x35103,
                0x35D0F,
                0x368D4,
                0x37456,
                0x37F97,
                0x38A99,
    };
    #endif // (defined(TINYMIND_USE_LOG_15_17))
    #if (defined(TINYMIND_USE_LOG_16_16))
    const uint32_t LogValuesTableQ16_16::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFDEBAA,
                0xFFFE9D1C,
                0xFFFF04E9,
                0xFFFF4E8E,
                0xFFFF87AE,
                0xFFFFB65B,
                0xFFFFDDD1,
                0x0,
                0x1E27,
                0x391F,
                0x5186,
                0x67CC,
                0x7C4A,
                0x8F42,
                0xA0EC,
                0xB172,
                0xC0F7,
                0xCF99,
                0xDD70,
                0xEA92,
                0xF70F,
                0x102F8,
                0x10E59,
                0x1193E,
                0x123B1,
                0x12DBC,
                0x13765,
                0x140B5,
                0x149B0,
                0x1525E,
                0x15AC3,
                0x162E4,
                0x16AC4,
                0x17269,
                0x179D5,
                0x1810B,
                0x1880E,
                0x18EE2,
                0x19588,
                0x19C04,
                0x1A256,
                0x1A881,
                0x1AE87,
                0x1B46A,
                0x1BA2B,
                0x1BFCB,
                0x1C54C,
    };
    #endif // (defined(TINYMIND_USE_LOG_16_16))
    #if (defined(TINYMIND_USE_LOG_17_15))
    const uint32_t LogValuesTableQ17_15::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFEF5D5,
                0xFFFF4E8E,
                0xFFFF8275,
                0xFFFFA747,
                0xFFFFC3D7,
                0xFFFFDB2E,
                0xFFFFEEE9,
                0x0,
                0xF13,
                0x1C8F,
                0x28C3,
                0x33E6,
                0x3E25,
                0x47A1,
                0x5076,
                0x58B9,
                0x607B,
                0x67CC,
                0x6EB8,
                0x7549,
                0x7B87,
                0x817C,
                0x872C,
                0x8C9F,
                0x91D8,
                0x96DE,
                0x9BB2,
                0xA05A,
                0xA4D8,
                0xA92F,
                0xAD61,
                0xB172,
                0xB562,
                0xB934,
                0xBCEA,
                0xC085,
                0xC407,
                0xC771,
                0xCAC4,
                0xCE02,
                0xD12B,
                0xD440,
                0xD743,
                0xDA35,
                0xDD15,
                0xDFE5,
                0xE2A6,
    };
    #endif // (defined(TINYMIND_USE_LOG_17_15))
    #if (defined(TINYMIND_USE_LOG_18_14))
    const uint32_t LogValuesTableQ18_14::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFF7AEB,
                0xFFFFA747,
                0xFFFFC13B,
                0xFFFFD3A4,
                0xFFFFE1EC,
                0xFFFFED97,
                0xFFFFF775,
                0x0,
                0x789,
                0xE47,
                0x1461,
                0x19F3,
                0x1F12,
                0x23D0,
                0x283B,
                0x2C5C,
                0x303D,
                0x33E6,
                0x375C,
                0x3AA4,
                0x3DC3,
                0x40BE,
                0x4396,
                0x464F,
                0x48EC,
                0x4B6F,
                0x4DD9,
                0x502D,
                0x526C,
                0x5497,
                0x56B0,
                0x58B9,
                0x5AB1,
                0x5C9A,
                0x5E75,
                0x6042,
                0x6203,
                0x63B8,
                0x6562,
                0x6701,
                0x6895,
                0x6A20,
                0x6BA1,
                0x6D1A,
                0x6E8A,
                0x6FF2,
                0x7153,
    };
    #endif // (defined(TINYMIND_USE_LOG_18_14))
    #if (defined(TINYMIND_USE_LOG_19_13))
    const uint32_t LogValuesTableQ19_13::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFBD76,
                0xFFFFD3A4,
                0xFFFFE09E,
                0xFFFFE9D2,
                0xFFFFF0F6,
                0xFFFFF6CC,
                0xFFFFFBBB,
                0x0,
                0x3C4,
                0x723,
                0xA30,
                0xCF9,
                0xF89,
                0x11E8,
                0x141D,
                0x162E,
                0x181E,
                0x19F3,
                0x1BAE,
                0x1D52,
                0x1EE1,
                0x205F,
                0x21CB,
                0x2327,
                0x2476,
                0x25B7,
                0x26EC,
                0x2816,
                0x2936,
                0x2A4B,
                0x2B58,
                0x2C5C,
                0x2D58,
                0x2E4D,
                0x2F3A,
                0x3021,
                0x3101,
                0x31DC,
                0x32B1,
                0x3380,
                0x344A,
                0x3510,
                0x35D0,
                0x368D,
                0x3745,
                0x37F9,
                0x38A9,
    };
    #endif // (defined(TINYMIND_USE_LOG_19_13))
    #if (defined(TINYMIND_USE_LOG_20_12))
    const uint32_t LogValuesTableQ20_12::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFDEBB,
                0xFFFFE9D2,
                0xFFFFF04F,
                0xFFFFF4E9,
                0xFFFFF87B,
                0xFFFFFB66,
                0xFFFFFDDE,
                0x0,
                0x1E2,
                0x391,
                0x518,
                0x67C,
                0x7C4,
                0x8F4,
                0xA0E,
                0xB17,
                0xC0F,
                0xCF9,
                0xDD7,
                0xEA9,
                0xF70,
                0x102F,
                0x10E5,
                0x1193,
                0x123B,
                0x12DB,
                0x1376,
                0x140B,
                0x149B,
                0x1525,
                0x15AC,
                0x162E,
                0x16AC,
                0x1726,
                0x179D,
                0x1810,
                0x1880,
                0x18EE,
                0x1958,
                0x19C0,
                0x1A25,
                0x1A88,
                0x1AE8,
                0x1B46,
                0x1BA2,
                0x1BFC,
                0x1C54,
    };
    #endif // (defined(TINYMIND_USE_LOG_20_12))
    #if (defined(TINYMIND_USE_LOG_21_11))
    const uint32_t LogValuesTableQ21_11::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFEF5E,
                0xFFFFF4E9,
                0xFFFFF828,
                0xFFFFFA75,
                0xFFFFFC3E,
                0xFFFFFDB3,
                0xFFFFFEEF,
                0x0,
                0xF1,
                0x1C8,
                0x28C,
                0x33E,
                0x3E2,
                0x47A,
                0x507,
                0x58B,
                0x607,
                0x67C,
                0x6EB,
                0x754,
                0x7B8,
                0x817,
                0x872,
                0x8C9,
                0x91D,
                0x96D,
                0x9BB,
                0xA05,
                0xA4D,
                0xA92,
                0xAD6,
                0xB17,
                0xB56,
                0xB93,
                0xBCE,
                0xC08,
                0xC40,
                0xC77,
                0xCAC,
                0xCE0,
                0xD12,
                0xD44,
                0xD74,
                0xDA3,
                0xDD1,
                0xDFE,
                0xE2A,
    };
    #endif // (defined(TINYMIND_USE_LOG_21_11))
    #if (defined(TINYMIND_USE_LOG_22_10))
    const uint32_t LogValuesTableQ22_10::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFF7AF,
                0xFFFFFA75,
                0xFFFFFC14,
                0xFFFFFD3B,
                0xFFFFFE1F,
                0xFFFFFEDA,
                0xFFFFFF78,
                0x0,
                0x78,
                0xE4,
                0x146,
                0x19F,
                0x1F1,
                0x23D,
                0x283,
                0x2C5,
                0x303,
                0x33E,
                0x375,
                0x3AA,
                0x3DC,
                0x40B,
                0x439,
                0x464,
                0x48E,
                0x4B6,
                0x4DD,
                0x502,
                0x526,
                0x549,
                0x56B,
                0x58B,
                0x5AB,
                0x5C9,
                0x5E7,
                0x604,
                0x620,
                0x63B,
                0x656,
                0x670,
                0x689,
                0x6A2,
                0x6BA,
                0x6D1,
                0x6E8,
                0x6FF,
                0x715,
    };
    #endif // (defined(TINYMIND_USE_LOG_22_10))
    #if (defined(TINYMIND_USE_LOG_23_9))
    const uint32_t LogValuesTableQ23_9::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFBD8,
                0xFFFFFD3B,
                0xFFFFFE0A,
                0xFFFFFE9E,
                0xFFFFFF10,
                0xFFFFFF6D,
                0xFFFFFFBC,
                0x0,
                0x3C,
                0x72,
                0xA3,
                0xCF,
                0xF8,
                0x11E,
                0x141,
                0x162,
                0x181,
                0x19F,
                0x1BA,
                0x1D5,
                0x1EE,
                0x205,
                0x21C,
                0x232,
                0x247,
                0x25B,
                0x26E,
                0x281,
                0x293,
                0x2A4,
                0x2B5,
                0x2C5,
                0x2D5,
                0x2E4,
                0x2F3,
                0x302,
                0x310,
                0x31D,
                0x32B,
                0x338,
                0x344,
                0x351,
                0x35D,
                0x368,
                0x374,
                0x37F,
                0x38A,
    };
    #endif // (defined(TINYMIND_USE_LOG_23_9))
    #if (defined(TINYMIND_USE_LOG_24_8))
    const uint32_t LogValuesTableQ24_8::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFDEC,
                0xFFFFFE9E,
                0xFFFFFF05,
                0xFFFFFF4F,
                0xFFFFFF88,
                0xFFFFFFB7,
                0xFFFFFFDE,
                0x0,
                0x1E,
                0x39,
                0x51,
                0x67,
                0x7C,
                0x8F,
                0xA0,
                0xB1,
                0xC0,
                0xCF,
                0xDD,
                0xEA,
                0xF7,
                0x102,
                0x10E,
                0x119,
                0x123,
                0x12D,
                0x137,
                0x140,
                0x149,
                0x152,
                0x15A,
                0x162,
                0x16A,
                0x172,
                0x179,
                0x181,
                0x188,
                0x18E,
                0x195,
                0x19C,
                0x1A2,
                0x1A8,
                0x1AE,
                0x1B4,
                0x1BA,
                0x1BF,
                0x1C5,
    };
    #endif // (defined(TINYMIND_USE_LOG_24_8))
    #if (defined(TINYMIND_USE_LOG_25_7))
    const uint32_t LogValuesTableQ25_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFEF6,
                0xFFFFFF4F,
                0xFFFFFF83,
                0xFFFFFFA8,
                0xFFFFFFC4,
                0xFFFFFFDC,
                0xFFFFFFEF,
                0x0,
                0xF,
                0x1C,
                0x28,
                0x33,
                0x3E,
                0x47,
                0x50,
                0x58,
                0x60,
                0x67,
                0x6E,
                0x75,
                0x7B,
                0x81,
                0x87,
                0x8C,
                0x91,
                0x96,
                0x9B,
                0xA0,
                0xA4,
                0xA9,
                0xAD,
                0xB1,
                0xB5,
                0xB9,
                0xBC,
                0xC0,
                0xC4,
                0xC7,
                0xCA,
                0xCE,
                0xD1,
                0xD4,
                0xD7,
                0xDA,
                0xDD,
                0xDF,
                0xE2,
    };
    #endif // (defined(TINYMIND_USE_LOG_25_7))
    #if (defined(TINYMIND_USE_LOG_26_6))
    const uint32_t LogValuesTableQ26_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFF7B,
                0xFFFFFFA8,
                0xFFFFFFC2,
                0xFFFFFFD4,
                0xFFFFFFE2,
                0xFFFFFFEE,
                0xFFFFFFF8,
                0x0,
                0x7,
                0xE,
                0x14,
                0x19,
                0x1F,
                0x23,
                0x28,
                0x2C,
                0x30,
                0x33,
                0x37,
                0x3A,
                0x3D,
                0x40,
                0x43,
                0x46,
                0x48,
                0x4B,
                0x4D,
                0x50,
                0x52,
                0x54,
                0x56,
                0x58,
                0x5A,
                0x5C,
                0x5E,
                0x60,
                0x62,
                0x63,
                0x65,
                0x67,
                0x68,
                0x6A,
                0x6B,
                0x6D,
                0x6E,
                0x6F,
                0x71,
    };
    #endif // (defined(TINYMIND_USE_LOG_26_6))
    #if (defined(TINYMIND_USE_LOG_27_5))
    const uint32_t LogValuesTableQ27_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFBE,
                0xFFFFFFD4,
                0xFFFFFFE1,
                0xFFFFFFEA,
                0xFFFFFFF1,
                0xFFFFFFF7,
                0xFFFFFFFC,
                0x0,
                0x3,
                0x7,
                0xA,
                0xC,
                0xF,
                0x11,
                0x14,
                0x16,
                0x18,
                0x19,
                0x1B,
                0x1D,
                0x1E,
                0x20,
                0x21,
                0x23,
                0x24,
                0x25,
                0x26,
                0x28,
                0x29,
                0x2A,
                0x2B,
                0x2C,
                0x2D,
                0x2E,
                0x2F,
                0x30,
                0x31,
                0x31,
                0x32,
                0x33,
                0x34,
                0x35,
                0x35,
                0x36,
                0x37,
                0x37,
                0x38,
    };
    #endif // (defined(TINYMIND_USE_LOG_27_5))
    #if (defined(TINYMIND_USE_LOG_28_4))
    const uint32_t LogValuesTableQ28_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFDF,
                0xFFFFFFEA,
                0xFFFFFFF1,
                0xFFFFFFF5,
                0xFFFFFFF9,
                0xFFFFFFFC,
                0xFFFFFFFE,
                0x0,
                0x1,
                0x3,
                0x5,
                0x6,
                0x7,
                0x8,
                0xA,
                0xB,
                0xC,
                0xC,
                0xD,
                0xE,
                0xF,
                0x10,
                0x10,
                0x11,
                0x12,
                0x12,
                0x13,
                0x14,
                0x14,
                0x15,
                0x15,
                0x16,
                0x16,
                0x17,
                0x17,
                0x18,
                0x18,
                0x18,
                0x19,
                0x19,
                0x1A,
                0x1A,
                0x1A,
                0x1B,
                0x1B,
                0x1B,
                0x1C,
    };
    #endif // (defined(TINYMIND_USE_LOG_28_4))
    #if (defined(TINYMIND_USE_LOG_29_3))
    const uint32_t LogValuesTableQ29_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFF0,
                0xFFFFFFF5,
                0xFFFFFFF9,
                0xFFFFFFFB,
                0xFFFFFFFD,
                0xFFFFFFFE,
                0xFFFFFFFF,
                0x0,
                0x0,
                0x1,
                0x2,
                0x3,
                0x3,
                0x4,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x7,
                0x7,
                0x8,
                0x8,
                0x8,
                0x9,
                0x9,
                0x9,
                0xA,
                0xA,
                0xA,
                0xA,
                0xB,
                0xB,
                0xB,
                0xB,
                0xC,
                0xC,
                0xC,
                0xC,
                0xC,
                0xD,
                0xD,
                0xD,
                0xD,
                0xD,
                0xD,
                0xE,
    };
    #endif // (defined(TINYMIND_USE_LOG_29_3))
    #if (defined(TINYMIND_USE_LOG_30_2))
    const uint32_t LogValuesTableQ30_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFF8,
                0xFFFFFFFB,
                0xFFFFFFFD,
                0xFFFFFFFE,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x4,
                0x4,
                0x4,
                0x4,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x7,
    };
    #endif // (defined(TINYMIND_USE_LOG_30_2))
    #if (defined(TINYMIND_USE_LOG_31_1))
    const uint32_t LogValuesTableQ31_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFC,
                0xFFFFFFFE,
                0xFFFFFFFF,
                0xFFFFFFFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
    };
    #endif // (defined(TINYMIND_USE_LOG_31_1))
    #if (defined(TINYMIND_USE_LOG_1_63))
    const uint64_t LogValuesTableQ1_63::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x8000000000000000,
                0x8000000000000000,
                0x82742FE1AD612000,
                0xA746F40417184400,
                0xC3D6EBCBB1B26400,
                0xDB2D3BDD9648DC00,
                0xEEE8717DD81B8400,
                0x0,
                0xF1383B715797300,
                0x1C8FF7C79A9A2200,
                0x28C3178438BD8400,
                0x33E647D97F309800,
                0x3E251EBF5E0DDA00,
                0x47A17D79C1034000,
                0x50763FA119CAB800,
                0x58B90BFBE8E7BC00,
                0x607B982BED406800,
                0x67CC8FB2FE613000,
                0x6EB83C6C907B9000,
                0x754903C38381E000,
                0x7B87C5534033D800,
                0x817C238021A54000,
                0x872CBBE96087C800,
                0x8C9F53D568185800,
                0x91D8FB8B1E1C0000,
                0x96DE2ABB46F59800,
                0x9BB2D78C7D91C800,
                0xA05A8975A9EB0000,
                0xA4D868C9252AB800,
                0xA92F4B9D02B27800,
                0xAD61C09557FE6800,
                0xB17217F7D1CF7800,
                0xB5626B59A0D5D800,
                0xB934A427D6282000,
                0xBCEA813D44852000,
                0xC0859BAEE748F000,
                0xC4076AEFF1C4A000,
                0xC771486879635000,
                0xCAC47294C6263000,
                0xCE020FBF6C699800,
                0xD12B3065300DA800,
                0xD440D14F291B9800,
                0xD743DD6D9409D800,
                0xDA352F7C0A8D0000,
                0xDD15937681E31000,
                0xDFE5C7E5496F8800,
                0xE2A67F0554543000,
    };
    #endif // (defined(TINYMIND_USE_LOG_1_63))
    #if (defined(TINYMIND_USE_LOG_2_62))
    const uint64_t LogValuesTableQ2_62::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x8000000000000000,
                0xA746F40417184400,
                0xC13A17F0D6B09000,
                0xD3A37A020B8C2200,
                0xE1EB75E5D8D93200,
                0xED969DEECB246E00,
                0xF77438BEEC0DC200,
                0x0,
                0x789C1DB8ABCB980,
                0xE47FBE3CD4D1100,
                0x14618BC21C5EC200,
                0x19F323ECBF984C00,
                0x1F128F5FAF06ED00,
                0x23D0BEBCE081A000,
                0x283B1FD08CE55C00,
                0x2C5C85FDF473DE00,
                0x303DCC15F6A03400,
                0x33E647D97F309800,
                0x375C1E36483DC800,
                0x3AA481E1C1C0F000,
                0x3DC3E2A9A019EC00,
                0x40BE11C010D2A000,
                0x43965DF4B043E400,
                0x464FA9EAB40C2C00,
                0x48EC7DC58F0E0000,
                0x4B6F155DA37ACC00,
                0x4DD96BC63EC8E400,
                0x502D44BAD4F58000,
                0x526C346492955C00,
                0x5497A5CE81593C00,
                0x56B0E04AABFF3400,
                0x58B90BFBE8E7BC00,
                0x5AB135ACD06AEC00,
                0x5C9A5213EB141000,
                0x5E75409EA2429000,
                0x6042CDD773A47800,
                0x6203B577F8E25000,
                0x63B8A4343CB1A800,
                0x6562394A63131800,
                0x670107DFB634CC00,
                0x689598329806D400,
                0x6A2068A7948DCC00,
                0x6BA1EEB6CA04EC00,
                0x6D1A97BE05468000,
                0x6E8AC9BB40F18800,
                0x6FF2E3F2A4B7C400,
                0x71533F82AA2A1800,
    };
    #endif // (defined(TINYMIND_USE_LOG_2_62))
    #if (defined(TINYMIND_USE_LOG_3_61))
    const uint64_t LogValuesTableQ3_61::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xBD75370311523400,
                0xD3A37A020B8C2200,
                0xE09D0BF86B584800,
                0xE9D1BD0105C61100,
                0xF0F5BAF2EC6C9900,
                0xF6CB4EF765923700,
                0xFBBA1C5F7606E100,
                0x0,
                0x3C4E0EDC55E5CC0,
                0x723FDF1E6A68880,
                0xA30C5E10E2F6100,
                0xCF991F65FCC2600,
                0xF8947AFD7837680,
                0x11E85F5E7040D000,
                0x141D8FE84672AE00,
                0x162E42FEFA39EF00,
                0x181EE60AFB501A00,
                0x19F323ECBF984C00,
                0x1BAE0F1B241EE400,
                0x1D5240F0E0E07800,
                0x1EE1F154D00CF600,
                0x205F08E008695000,
                0x21CB2EFA5821F200,
                0x2327D4F55A061600,
                0x24763EE2C7870000,
                0x25B78AAED1BD6600,
                0x26ECB5E31F647200,
                0x2816A25D6A7AC000,
                0x29361A32494AAE00,
                0x2A4BD2E740AC9E00,
                0x2B58702555FF9A00,
                0x2C5C85FDF473DE00,
                0x2D589AD668357600,
                0x2E4D2909F58A0800,
                0x2F3AA04F51214800,
                0x302166EBB9D23C00,
                0x3101DABBFC712800,
                0x31DC521A1E58D400,
                0x32B11CA531898C00,
                0x338083EFDB1A6600,
                0x344ACC194C036A00,
                0x35103453CA46E600,
                0x35D0F75B65027600,
                0x368D4BDF02A34000,
                0x374564DDA078C400,
                0x37F971F9525BE200,
                0x38A99FC155150C00,
    };
    #endif // (defined(TINYMIND_USE_LOG_3_61))
    #if (defined(TINYMIND_USE_LOG_4_60))
    const uint64_t LogValuesTableQ4_60::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xDEBA9B8188A91A00,
                0xE9D1BD0105C61100,
                0xF04E85FC35AC2400,
                0xF4E8DE8082E30880,
                0xF87ADD7976364C80,
                0xFB65A77BB2C91B80,
                0xFDDD0E2FBB037080,
                0x0,
                0x1E27076E2AF2E60,
                0x391FEF8F3534440,
                0x51862F08717B080,
                0x67CC8FB2FE61300,
                0x7C4A3D7EBC1BB40,
                0x8F42FAF38206800,
                0xA0EC7F423395700,
                0xB17217F7D1CF780,
                0xC0F73057DA80D00,
                0xCF991F65FCC2600,
                0xDD7078D920F7200,
                0xEA9207870703C00,
                0xF70F8AA68067B00,
                0x102F84700434A800,
                0x10E5977D2C10F900,
                0x1193EA7AAD030B00,
                0x123B1F7163C38000,
                0x12DBC55768DEB300,
                0x13765AF18FB23900,
                0x140B512EB53D6000,
                0x149B0D1924A55700,
                0x1525E973A0564F00,
                0x15AC3812AAFFCD00,
                0x162E42FEFA39EF00,
                0x16AC4D6B341ABB00,
                0x17269484FAC50400,
                0x179D5027A890A400,
                0x1810B375DCE91E00,
                0x1880ED5DFE389400,
                0x18EE290D0F2C6A00,
                0x19588E5298C4C600,
                0x19C041F7ED8D3300,
                0x1A25660CA601B500,
                0x1A881A29E5237300,
                0x1AE87BADB2813B00,
                0x1B46A5EF8151A000,
                0x1BA2B26ED03C6200,
                0x1BFCB8FCA92DF100,
                0x1C54CFE0AA8A8600,
    };
    #endif // (defined(TINYMIND_USE_LOG_4_60))
    #if (defined(TINYMIND_USE_LOG_5_59))
    const uint64_t LogValuesTableQ5_59::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xEF5D4DC0C4548D00,
                0xF4E8DE8082E30880,
                0xF82742FE1AD61200,
                0xFA746F4041718440,
                0xFC3D6EBCBB1B2640,
                0xFDB2D3BDD9648DC0,
                0xFEEE8717DD81B840,
                0x0,
                0xF1383B71579730,
                0x1C8FF7C79A9A220,
                0x28C3178438BD840,
                0x33E647D97F30980,
                0x3E251EBF5E0DDA0,
                0x47A17D79C103400,
                0x50763FA119CAB80,
                0x58B90BFBE8E7BC0,
                0x607B982BED40680,
                0x67CC8FB2FE61300,
                0x6EB83C6C907B900,
                0x754903C38381E00,
                0x7B87C5534033D80,
                0x817C238021A5400,
                0x872CBBE96087C80,
                0x8C9F53D56818580,
                0x91D8FB8B1E1C000,
                0x96DE2ABB46F5980,
                0x9BB2D78C7D91C80,
                0xA05A8975A9EB000,
                0xA4D868C9252AB80,
                0xA92F4B9D02B2780,
                0xAD61C09557FE680,
                0xB17217F7D1CF780,
                0xB5626B59A0D5D80,
                0xB934A427D628200,
                0xBCEA813D4485200,
                0xC0859BAEE748F00,
                0xC4076AEFF1C4A00,
                0xC77148687963500,
                0xCAC47294C626300,
                0xCE020FBF6C69980,
                0xD12B3065300DA80,
                0xD440D14F291B980,
                0xD743DD6D9409D80,
                0xDA352F7C0A8D000,
                0xDD15937681E3100,
                0xDFE5C7E5496F880,
                0xE2A67F055454300,
    };
    #endif // (defined(TINYMIND_USE_LOG_5_59))
    #if (defined(TINYMIND_USE_LOG_6_58))
    const uint64_t LogValuesTableQ6_58::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xF7AEA6E0622A4680,
                0xFA746F4041718440,
                0xFC13A17F0D6B0900,
                0xFD3A37A020B8C220,
                0xFE1EB75E5D8D9320,
                0xFED969DEECB246E0,
                0xFF77438BEEC0DC20,
                0x0,
                0x789C1DB8ABCB98,
                0xE47FBE3CD4D110,
                0x14618BC21C5EC20,
                0x19F323ECBF984C0,
                0x1F128F5FAF06ED0,
                0x23D0BEBCE081A00,
                0x283B1FD08CE55C0,
                0x2C5C85FDF473DE0,
                0x303DCC15F6A0340,
                0x33E647D97F30980,
                0x375C1E36483DC80,
                0x3AA481E1C1C0F00,
                0x3DC3E2A9A019EC0,
                0x40BE11C010D2A00,
                0x43965DF4B043E40,
                0x464FA9EAB40C2C0,
                0x48EC7DC58F0E000,
                0x4B6F155DA37ACC0,
                0x4DD96BC63EC8E40,
                0x502D44BAD4F5800,
                0x526C346492955C0,
                0x5497A5CE81593C0,
                0x56B0E04AABFF340,
                0x58B90BFBE8E7BC0,
                0x5AB135ACD06AEC0,
                0x5C9A5213EB14100,
                0x5E75409EA242900,
                0x6042CDD773A4780,
                0x6203B577F8E2500,
                0x63B8A4343CB1A80,
                0x6562394A6313180,
                0x670107DFB634CC0,
                0x689598329806D40,
                0x6A2068A7948DCC0,
                0x6BA1EEB6CA04EC0,
                0x6D1A97BE0546800,
                0x6E8AC9BB40F1880,
                0x6FF2E3F2A4B7C40,
                0x71533F82AA2A180,
    };
    #endif // (defined(TINYMIND_USE_LOG_6_58))
    #if (defined(TINYMIND_USE_LOG_7_57))
    const uint64_t LogValuesTableQ7_57::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFBD7537031152340,
                0xFD3A37A020B8C220,
                0xFE09D0BF86B58480,
                0xFE9D1BD0105C6110,
                0xFF0F5BAF2EC6C990,
                0xFF6CB4EF76592370,
                0xFFBBA1C5F7606E10,
                0x0,
                0x3C4E0EDC55E5CC,
                0x723FDF1E6A6888,
                0xA30C5E10E2F610,
                0xCF991F65FCC260,
                0xF8947AFD783768,
                0x11E85F5E7040D00,
                0x141D8FE84672AE0,
                0x162E42FEFA39EF0,
                0x181EE60AFB501A0,
                0x19F323ECBF984C0,
                0x1BAE0F1B241EE40,
                0x1D5240F0E0E0780,
                0x1EE1F154D00CF60,
                0x205F08E00869500,
                0x21CB2EFA5821F20,
                0x2327D4F55A06160,
                0x24763EE2C787000,
                0x25B78AAED1BD660,
                0x26ECB5E31F64720,
                0x2816A25D6A7AC00,
                0x29361A32494AAE0,
                0x2A4BD2E740AC9E0,
                0x2B58702555FF9A0,
                0x2C5C85FDF473DE0,
                0x2D589AD66835760,
                0x2E4D2909F58A080,
                0x2F3AA04F5121480,
                0x302166EBB9D23C0,
                0x3101DABBFC71280,
                0x31DC521A1E58D40,
                0x32B11CA531898C0,
                0x338083EFDB1A660,
                0x344ACC194C036A0,
                0x35103453CA46E60,
                0x35D0F75B6502760,
                0x368D4BDF02A3400,
                0x374564DDA078C40,
                0x37F971F9525BE20,
                0x38A99FC155150C0,
    };
    #endif // (defined(TINYMIND_USE_LOG_7_57))
    #if (defined(TINYMIND_USE_LOG_8_56))
    const uint64_t LogValuesTableQ8_56::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFDEBA9B8188A91A0,
                0xFE9D1BD0105C6110,
                0xFF04E85FC35AC240,
                0xFF4E8DE8082E3088,
                0xFF87ADD7976364C8,
                0xFFB65A77BB2C91B8,
                0xFFDDD0E2FBB03708,
                0x0,
                0x1E27076E2AF2E6,
                0x391FEF8F353444,
                0x51862F08717B08,
                0x67CC8FB2FE6130,
                0x7C4A3D7EBC1BB4,
                0x8F42FAF3820680,
                0xA0EC7F42339570,
                0xB17217F7D1CF78,
                0xC0F73057DA80D0,
                0xCF991F65FCC260,
                0xDD7078D920F720,
                0xEA9207870703C0,
                0xF70F8AA68067B0,
                0x102F84700434A80,
                0x10E5977D2C10F90,
                0x1193EA7AAD030B0,
                0x123B1F7163C3800,
                0x12DBC55768DEB30,
                0x13765AF18FB2390,
                0x140B512EB53D600,
                0x149B0D1924A5570,
                0x1525E973A0564F0,
                0x15AC3812AAFFCD0,
                0x162E42FEFA39EF0,
                0x16AC4D6B341ABB0,
                0x17269484FAC5040,
                0x179D5027A890A40,
                0x1810B375DCE91E0,
                0x1880ED5DFE38940,
                0x18EE290D0F2C6A0,
                0x19588E5298C4C60,
                0x19C041F7ED8D330,
                0x1A25660CA601B50,
                0x1A881A29E523730,
                0x1AE87BADB2813B0,
                0x1B46A5EF8151A00,
                0x1BA2B26ED03C620,
                0x1BFCB8FCA92DF10,
                0x1C54CFE0AA8A860,
    };
    #endif // (defined(TINYMIND_USE_LOG_8_56))
    #if (defined(TINYMIND_USE_LOG_9_55))
    const uint64_t LogValuesTableQ9_55::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFEF5D4DC0C4548D0,
                0xFF4E8DE8082E3088,
                0xFF82742FE1AD6120,
                0xFFA746F404171844,
                0xFFC3D6EBCBB1B264,
                0xFFDB2D3BDD9648DC,
                0xFFEEE8717DD81B84,
                0x0,
                0xF1383B7157973,
                0x1C8FF7C79A9A22,
                0x28C3178438BD84,
                0x33E647D97F3098,
                0x3E251EBF5E0DDA,
                0x47A17D79C10340,
                0x50763FA119CAB8,
                0x58B90BFBE8E7BC,
                0x607B982BED4068,
                0x67CC8FB2FE6130,
                0x6EB83C6C907B90,
                0x754903C38381E0,
                0x7B87C5534033D8,
                0x817C238021A540,
                0x872CBBE96087C8,
                0x8C9F53D5681858,
                0x91D8FB8B1E1C00,
                0x96DE2ABB46F598,
                0x9BB2D78C7D91C8,
                0xA05A8975A9EB00,
                0xA4D868C9252AB8,
                0xA92F4B9D02B278,
                0xAD61C09557FE68,
                0xB17217F7D1CF78,
                0xB5626B59A0D5D8,
                0xB934A427D62820,
                0xBCEA813D448520,
                0xC0859BAEE748F0,
                0xC4076AEFF1C4A0,
                0xC7714868796350,
                0xCAC47294C62630,
                0xCE020FBF6C6998,
                0xD12B3065300DA8,
                0xD440D14F291B98,
                0xD743DD6D9409D8,
                0xDA352F7C0A8D00,
                0xDD15937681E310,
                0xDFE5C7E5496F88,
                0xE2A67F05545430,
    };
    #endif // (defined(TINYMIND_USE_LOG_9_55))
    #if (defined(TINYMIND_USE_LOG_10_54))
    const uint64_t LogValuesTableQ10_54::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFF7AEA6E0622A468,
                0xFFA746F404171844,
                0xFFC13A17F0D6B090,
                0xFFD3A37A020B8C22,
                0xFFE1EB75E5D8D932,
                0xFFED969DEECB246E,
                0xFFF77438BEEC0DC2,
                0x0,
                0x789C1DB8ABCB9,
                0xE47FBE3CD4D11,
                0x14618BC21C5EC2,
                0x19F323ECBF984C,
                0x1F128F5FAF06ED,
                0x23D0BEBCE081A0,
                0x283B1FD08CE55C,
                0x2C5C85FDF473DE,
                0x303DCC15F6A034,
                0x33E647D97F3098,
                0x375C1E36483DC8,
                0x3AA481E1C1C0F0,
                0x3DC3E2A9A019EC,
                0x40BE11C010D2A0,
                0x43965DF4B043E4,
                0x464FA9EAB40C2C,
                0x48EC7DC58F0E00,
                0x4B6F155DA37ACC,
                0x4DD96BC63EC8E4,
                0x502D44BAD4F580,
                0x526C346492955C,
                0x5497A5CE81593C,
                0x56B0E04AABFF34,
                0x58B90BFBE8E7BC,
                0x5AB135ACD06AEC,
                0x5C9A5213EB1410,
                0x5E75409EA24290,
                0x6042CDD773A478,
                0x6203B577F8E250,
                0x63B8A4343CB1A8,
                0x6562394A631318,
                0x670107DFB634CC,
                0x689598329806D4,
                0x6A2068A7948DCC,
                0x6BA1EEB6CA04EC,
                0x6D1A97BE054680,
                0x6E8AC9BB40F188,
                0x6FF2E3F2A4B7C4,
                0x71533F82AA2A18,
    };
    #endif // (defined(TINYMIND_USE_LOG_10_54))
    #if (defined(TINYMIND_USE_LOG_11_53))
    const uint64_t LogValuesTableQ11_53::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFBD753703115234,
                0xFFD3A37A020B8C22,
                0xFFE09D0BF86B5848,
                0xFFE9D1BD0105C611,
                0xFFF0F5BAF2EC6C99,
                0xFFF6CB4EF7659237,
                0xFFFBBA1C5F7606E1,
                0x0,
                0x3C4E0EDC55E5C,
                0x723FDF1E6A688,
                0xA30C5E10E2F61,
                0xCF991F65FCC26,
                0xF8947AFD78376,
                0x11E85F5E7040D0,
                0x141D8FE84672AE,
                0x162E42FEFA39EF,
                0x181EE60AFB501A,
                0x19F323ECBF984C,
                0x1BAE0F1B241EE4,
                0x1D5240F0E0E078,
                0x1EE1F154D00CF6,
                0x205F08E0086950,
                0x21CB2EFA5821F2,
                0x2327D4F55A0616,
                0x24763EE2C78700,
                0x25B78AAED1BD66,
                0x26ECB5E31F6472,
                0x2816A25D6A7AC0,
                0x29361A32494AAE,
                0x2A4BD2E740AC9E,
                0x2B58702555FF9A,
                0x2C5C85FDF473DE,
                0x2D589AD6683576,
                0x2E4D2909F58A08,
                0x2F3AA04F512148,
                0x302166EBB9D23C,
                0x3101DABBFC7128,
                0x31DC521A1E58D4,
                0x32B11CA531898C,
                0x338083EFDB1A66,
                0x344ACC194C036A,
                0x35103453CA46E6,
                0x35D0F75B650276,
                0x368D4BDF02A340,
                0x374564DDA078C4,
                0x37F971F9525BE2,
                0x38A99FC155150C,
    };
    #endif // (defined(TINYMIND_USE_LOG_11_53))
    #if (defined(TINYMIND_USE_LOG_12_52))
    const uint64_t LogValuesTableQ12_52::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFDEBA9B8188A91A,
                0xFFE9D1BD0105C611,
                0xFFF04E85FC35AC24,
                0xFFF4E8DE8082E309,
                0xFFF87ADD7976364D,
                0xFFFB65A77BB2C91C,
                0xFFFDDD0E2FBB0371,
                0x0,
                0x1E27076E2AF2E,
                0x391FEF8F35344,
                0x51862F08717B0,
                0x67CC8FB2FE613,
                0x7C4A3D7EBC1BB,
                0x8F42FAF382068,
                0xA0EC7F4233957,
                0xB17217F7D1CF7,
                0xC0F73057DA80D,
                0xCF991F65FCC26,
                0xDD7078D920F72,
                0xEA9207870703C,
                0xF70F8AA68067B,
                0x102F84700434A8,
                0x10E5977D2C10F9,
                0x1193EA7AAD030B,
                0x123B1F7163C380,
                0x12DBC55768DEB3,
                0x13765AF18FB239,
                0x140B512EB53D60,
                0x149B0D1924A557,
                0x1525E973A0564F,
                0x15AC3812AAFFCD,
                0x162E42FEFA39EF,
                0x16AC4D6B341ABB,
                0x17269484FAC504,
                0x179D5027A890A4,
                0x1810B375DCE91E,
                0x1880ED5DFE3894,
                0x18EE290D0F2C6A,
                0x19588E5298C4C6,
                0x19C041F7ED8D33,
                0x1A25660CA601B5,
                0x1A881A29E52373,
                0x1AE87BADB2813B,
                0x1B46A5EF8151A0,
                0x1BA2B26ED03C62,
                0x1BFCB8FCA92DF1,
                0x1C54CFE0AA8A86,
    };
    #endif // (defined(TINYMIND_USE_LOG_12_52))
    #if (defined(TINYMIND_USE_LOG_13_51))
    const uint64_t LogValuesTableQ13_51::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFEF5D4DC0C4548D,
                0xFFF4E8DE8082E309,
                0xFFF82742FE1AD612,
                0xFFFA746F40417185,
                0xFFFC3D6EBCBB1B27,
                0xFFFDB2D3BDD9648E,
                0xFFFEEE8717DD81B9,
                0x0,
                0xF1383B715797,
                0x1C8FF7C79A9A2,
                0x28C3178438BD8,
                0x33E647D97F309,
                0x3E251EBF5E0DD,
                0x47A17D79C1034,
                0x50763FA119CAB,
                0x58B90BFBE8E7B,
                0x607B982BED406,
                0x67CC8FB2FE613,
                0x6EB83C6C907B9,
                0x754903C38381E,
                0x7B87C5534033D,
                0x817C238021A54,
                0x872CBBE96087C,
                0x8C9F53D568185,
                0x91D8FB8B1E1C0,
                0x96DE2ABB46F59,
                0x9BB2D78C7D91C,
                0xA05A8975A9EB0,
                0xA4D868C9252AB,
                0xA92F4B9D02B27,
                0xAD61C09557FE6,
                0xB17217F7D1CF7,
                0xB5626B59A0D5D,
                0xB934A427D6282,
                0xBCEA813D44852,
                0xC0859BAEE748F,
                0xC4076AEFF1C4A,
                0xC771486879635,
                0xCAC47294C6263,
                0xCE020FBF6C699,
                0xD12B3065300DA,
                0xD440D14F291B9,
                0xD743DD6D9409D,
                0xDA352F7C0A8D0,
                0xDD15937681E31,
                0xDFE5C7E5496F8,
                0xE2A67F0554543,
    };
    #endif // (defined(TINYMIND_USE_LOG_13_51))
    #if (defined(TINYMIND_USE_LOG_14_50))
    const uint64_t LogValuesTableQ14_50::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFF7AEA6E0622A47,
                0xFFFA746F40417185,
                0xFFFC13A17F0D6B09,
                0xFFFD3A37A020B8C3,
                0xFFFE1EB75E5D8D94,
                0xFFFED969DEECB247,
                0xFFFF77438BEEC0DD,
                0x0,
                0x789C1DB8ABCB,
                0xE47FBE3CD4D1,
                0x14618BC21C5EC,
                0x19F323ECBF984,
                0x1F128F5FAF06E,
                0x23D0BEBCE081A,
                0x283B1FD08CE55,
                0x2C5C85FDF473D,
                0x303DCC15F6A03,
                0x33E647D97F309,
                0x375C1E36483DC,
                0x3AA481E1C1C0F,
                0x3DC3E2A9A019E,
                0x40BE11C010D2A,
                0x43965DF4B043E,
                0x464FA9EAB40C2,
                0x48EC7DC58F0E0,
                0x4B6F155DA37AC,
                0x4DD96BC63EC8E,
                0x502D44BAD4F58,
                0x526C346492955,
                0x5497A5CE81593,
                0x56B0E04AABFF3,
                0x58B90BFBE8E7B,
                0x5AB135ACD06AE,
                0x5C9A5213EB141,
                0x5E75409EA2429,
                0x6042CDD773A47,
                0x6203B577F8E25,
                0x63B8A4343CB1A,
                0x6562394A63131,
                0x670107DFB634C,
                0x689598329806D,
                0x6A2068A7948DC,
                0x6BA1EEB6CA04E,
                0x6D1A97BE05468,
                0x6E8AC9BB40F18,
                0x6FF2E3F2A4B7C,
                0x71533F82AA2A1,
    };
    #endif // (defined(TINYMIND_USE_LOG_14_50))
    #if (defined(TINYMIND_USE_LOG_15_49))
    const uint64_t LogValuesTableQ15_49::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFBD75370311524,
                0xFFFD3A37A020B8C3,
                0xFFFE09D0BF86B585,
                0xFFFE9D1BD0105C62,
                0xFFFF0F5BAF2EC6CA,
                0xFFFF6CB4EF765924,
                0xFFFFBBA1C5F7606F,
                0x0,
                0x3C4E0EDC55E5,
                0x723FDF1E6A68,
                0xA30C5E10E2F6,
                0xCF991F65FCC2,
                0xF8947AFD7837,
                0x11E85F5E7040D,
                0x141D8FE84672A,
                0x162E42FEFA39E,
                0x181EE60AFB501,
                0x19F323ECBF984,
                0x1BAE0F1B241EE,
                0x1D5240F0E0E07,
                0x1EE1F154D00CF,
                0x205F08E008695,
                0x21CB2EFA5821F,
                0x2327D4F55A061,
                0x24763EE2C7870,
                0x25B78AAED1BD6,
                0x26ECB5E31F647,
                0x2816A25D6A7AC,
                0x29361A32494AA,
                0x2A4BD2E740AC9,
                0x2B58702555FF9,
                0x2C5C85FDF473D,
                0x2D589AD668357,
                0x2E4D2909F58A0,
                0x2F3AA04F51214,
                0x302166EBB9D23,
                0x3101DABBFC712,
                0x31DC521A1E58D,
                0x32B11CA531898,
                0x338083EFDB1A6,
                0x344ACC194C036,
                0x35103453CA46E,
                0x35D0F75B65027,
                0x368D4BDF02A34,
                0x374564DDA078C,
                0x37F971F9525BE,
                0x38A99FC155150,
    };
    #endif // (defined(TINYMIND_USE_LOG_15_49))
    #if (defined(TINYMIND_USE_LOG_16_48))
    const uint64_t LogValuesTableQ16_48::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFDEBA9B8188A92,
                0xFFFE9D1BD0105C62,
                0xFFFF04E85FC35AC3,
                0xFFFF4E8DE8082E31,
                0xFFFF87ADD7976365,
                0xFFFFB65A77BB2C92,
                0xFFFFDDD0E2FBB038,
                0x0,
                0x1E27076E2AF2,
                0x391FEF8F3534,
                0x51862F08717B,
                0x67CC8FB2FE61,
                0x7C4A3D7EBC1B,
                0x8F42FAF38206,
                0xA0EC7F423395,
                0xB17217F7D1CF,
                0xC0F73057DA80,
                0xCF991F65FCC2,
                0xDD7078D920F7,
                0xEA9207870703,
                0xF70F8AA68067,
                0x102F84700434A,
                0x10E5977D2C10F,
                0x1193EA7AAD030,
                0x123B1F7163C38,
                0x12DBC55768DEB,
                0x13765AF18FB23,
                0x140B512EB53D6,
                0x149B0D1924A55,
                0x1525E973A0564,
                0x15AC3812AAFFC,
                0x162E42FEFA39E,
                0x16AC4D6B341AB,
                0x17269484FAC50,
                0x179D5027A890A,
                0x1810B375DCE91,
                0x1880ED5DFE389,
                0x18EE290D0F2C6,
                0x19588E5298C4C,
                0x19C041F7ED8D3,
                0x1A25660CA601B,
                0x1A881A29E5237,
                0x1AE87BADB2813,
                0x1B46A5EF8151A,
                0x1BA2B26ED03C6,
                0x1BFCB8FCA92DF,
                0x1C54CFE0AA8A8,
    };
    #endif // (defined(TINYMIND_USE_LOG_16_48))
    #if (defined(TINYMIND_USE_LOG_17_47))
    const uint64_t LogValuesTableQ17_47::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFEF5D4DC0C4549,
                0xFFFF4E8DE8082E31,
                0xFFFF82742FE1AD62,
                0xFFFFA746F4041719,
                0xFFFFC3D6EBCBB1B3,
                0xFFFFDB2D3BDD9649,
                0xFFFFEEE8717DD81C,
                0x0,
                0xF1383B71579,
                0x1C8FF7C79A9A,
                0x28C3178438BD,
                0x33E647D97F30,
                0x3E251EBF5E0D,
                0x47A17D79C103,
                0x50763FA119CA,
                0x58B90BFBE8E7,
                0x607B982BED40,
                0x67CC8FB2FE61,
                0x6EB83C6C907B,
                0x754903C38381,
                0x7B87C5534033,
                0x817C238021A5,
                0x872CBBE96087,
                0x8C9F53D56818,
                0x91D8FB8B1E1C,
                0x96DE2ABB46F5,
                0x9BB2D78C7D91,
                0xA05A8975A9EB,
                0xA4D868C9252A,
                0xA92F4B9D02B2,
                0xAD61C09557FE,
                0xB17217F7D1CF,
                0xB5626B59A0D5,
                0xB934A427D628,
                0xBCEA813D4485,
                0xC0859BAEE748,
                0xC4076AEFF1C4,
                0xC77148687963,
                0xCAC47294C626,
                0xCE020FBF6C69,
                0xD12B3065300D,
                0xD440D14F291B,
                0xD743DD6D9409,
                0xDA352F7C0A8D,
                0xDD15937681E3,
                0xDFE5C7E5496F,
                0xE2A67F055454,
    };
    #endif // (defined(TINYMIND_USE_LOG_17_47))
    #if (defined(TINYMIND_USE_LOG_18_46))
    const uint64_t LogValuesTableQ18_46::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFF7AEA6E0622A5,
                0xFFFFA746F4041719,
                0xFFFFC13A17F0D6B1,
                0xFFFFD3A37A020B8D,
                0xFFFFE1EB75E5D8DA,
                0xFFFFED969DEECB25,
                0xFFFFF77438BEEC0E,
                0x0,
                0x789C1DB8ABC,
                0xE47FBE3CD4D,
                0x14618BC21C5E,
                0x19F323ECBF98,
                0x1F128F5FAF06,
                0x23D0BEBCE081,
                0x283B1FD08CE5,
                0x2C5C85FDF473,
                0x303DCC15F6A0,
                0x33E647D97F30,
                0x375C1E36483D,
                0x3AA481E1C1C0,
                0x3DC3E2A9A019,
                0x40BE11C010D2,
                0x43965DF4B043,
                0x464FA9EAB40C,
                0x48EC7DC58F0E,
                0x4B6F155DA37A,
                0x4DD96BC63EC8,
                0x502D44BAD4F5,
                0x526C34649295,
                0x5497A5CE8159,
                0x56B0E04AABFF,
                0x58B90BFBE8E7,
                0x5AB135ACD06A,
                0x5C9A5213EB14,
                0x5E75409EA242,
                0x6042CDD773A4,
                0x6203B577F8E2,
                0x63B8A4343CB1,
                0x6562394A6313,
                0x670107DFB634,
                0x689598329806,
                0x6A2068A7948D,
                0x6BA1EEB6CA04,
                0x6D1A97BE0546,
                0x6E8AC9BB40F1,
                0x6FF2E3F2A4B7,
                0x71533F82AA2A,
    };
    #endif // (defined(TINYMIND_USE_LOG_18_46))
    #if (defined(TINYMIND_USE_LOG_19_45))
    const uint64_t LogValuesTableQ19_45::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFBD7537031153,
                0xFFFFD3A37A020B8D,
                0xFFFFE09D0BF86B59,
                0xFFFFE9D1BD0105C7,
                0xFFFFF0F5BAF2EC6D,
                0xFFFFF6CB4EF76593,
                0xFFFFFBBA1C5F7607,
                0x0,
                0x3C4E0EDC55E,
                0x723FDF1E6A6,
                0xA30C5E10E2F,
                0xCF991F65FCC,
                0xF8947AFD783,
                0x11E85F5E7040,
                0x141D8FE84672,
                0x162E42FEFA39,
                0x181EE60AFB50,
                0x19F323ECBF98,
                0x1BAE0F1B241E,
                0x1D5240F0E0E0,
                0x1EE1F154D00C,
                0x205F08E00869,
                0x21CB2EFA5821,
                0x2327D4F55A06,
                0x24763EE2C787,
                0x25B78AAED1BD,
                0x26ECB5E31F64,
                0x2816A25D6A7A,
                0x29361A32494A,
                0x2A4BD2E740AC,
                0x2B58702555FF,
                0x2C5C85FDF473,
                0x2D589AD66835,
                0x2E4D2909F58A,
                0x2F3AA04F5121,
                0x302166EBB9D2,
                0x3101DABBFC71,
                0x31DC521A1E58,
                0x32B11CA53189,
                0x338083EFDB1A,
                0x344ACC194C03,
                0x35103453CA46,
                0x35D0F75B6502,
                0x368D4BDF02A3,
                0x374564DDA078,
                0x37F971F9525B,
                0x38A99FC15515,
    };
    #endif // (defined(TINYMIND_USE_LOG_19_45))
    #if (defined(TINYMIND_USE_LOG_20_44))
    const uint64_t LogValuesTableQ20_44::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFDEBA9B8188AA,
                0xFFFFE9D1BD0105C7,
                0xFFFFF04E85FC35AD,
                0xFFFFF4E8DE8082E4,
                0xFFFFF87ADD797637,
                0xFFFFFB65A77BB2CA,
                0xFFFFFDDD0E2FBB04,
                0x0,
                0x1E27076E2AF,
                0x391FEF8F353,
                0x51862F08717,
                0x67CC8FB2FE6,
                0x7C4A3D7EBC1,
                0x8F42FAF3820,
                0xA0EC7F42339,
                0xB17217F7D1C,
                0xC0F73057DA8,
                0xCF991F65FCC,
                0xDD7078D920F,
                0xEA920787070,
                0xF70F8AA6806,
                0x102F84700434,
                0x10E5977D2C10,
                0x1193EA7AAD03,
                0x123B1F7163C3,
                0x12DBC55768DE,
                0x13765AF18FB2,
                0x140B512EB53D,
                0x149B0D1924A5,
                0x1525E973A056,
                0x15AC3812AAFF,
                0x162E42FEFA39,
                0x16AC4D6B341A,
                0x17269484FAC5,
                0x179D5027A890,
                0x1810B375DCE9,
                0x1880ED5DFE38,
                0x18EE290D0F2C,
                0x19588E5298C4,
                0x19C041F7ED8D,
                0x1A25660CA601,
                0x1A881A29E523,
                0x1AE87BADB281,
                0x1B46A5EF8151,
                0x1BA2B26ED03C,
                0x1BFCB8FCA92D,
                0x1C54CFE0AA8A,
    };
    #endif // (defined(TINYMIND_USE_LOG_20_44))
    #if (defined(TINYMIND_USE_LOG_21_43))
    const uint64_t LogValuesTableQ21_43::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFEF5D4DC0C455,
                0xFFFFF4E8DE8082E4,
                0xFFFFF82742FE1AD7,
                0xFFFFFA746F404172,
                0xFFFFFC3D6EBCBB1C,
                0xFFFFFDB2D3BDD965,
                0xFFFFFEEE8717DD82,
                0x0,
                0xF1383B7157,
                0x1C8FF7C79A9,
                0x28C3178438B,
                0x33E647D97F3,
                0x3E251EBF5E0,
                0x47A17D79C10,
                0x50763FA119C,
                0x58B90BFBE8E,
                0x607B982BED4,
                0x67CC8FB2FE6,
                0x6EB83C6C907,
                0x754903C3838,
                0x7B87C553403,
                0x817C238021A,
                0x872CBBE9608,
                0x8C9F53D5681,
                0x91D8FB8B1E1,
                0x96DE2ABB46F,
                0x9BB2D78C7D9,
                0xA05A8975A9E,
                0xA4D868C9252,
                0xA92F4B9D02B,
                0xAD61C09557F,
                0xB17217F7D1C,
                0xB5626B59A0D,
                0xB934A427D62,
                0xBCEA813D448,
                0xC0859BAEE74,
                0xC4076AEFF1C,
                0xC7714868796,
                0xCAC47294C62,
                0xCE020FBF6C6,
                0xD12B3065300,
                0xD440D14F291,
                0xD743DD6D940,
                0xDA352F7C0A8,
                0xDD15937681E,
                0xDFE5C7E5496,
                0xE2A67F05545,
    };
    #endif // (defined(TINYMIND_USE_LOG_21_43))
    #if (defined(TINYMIND_USE_LOG_22_42))
    const uint64_t LogValuesTableQ22_42::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFF7AEA6E0622B,
                0xFFFFFA746F404172,
                0xFFFFFC13A17F0D6C,
                0xFFFFFD3A37A020B9,
                0xFFFFFE1EB75E5D8E,
                0xFFFFFED969DEECB3,
                0xFFFFFF77438BEEC1,
                0x0,
                0x789C1DB8AB,
                0xE47FBE3CD4,
                0x14618BC21C5,
                0x19F323ECBF9,
                0x1F128F5FAF0,
                0x23D0BEBCE08,
                0x283B1FD08CE,
                0x2C5C85FDF47,
                0x303DCC15F6A,
                0x33E647D97F3,
                0x375C1E36483,
                0x3AA481E1C1C,
                0x3DC3E2A9A01,
                0x40BE11C010D,
                0x43965DF4B04,
                0x464FA9EAB40,
                0x48EC7DC58F0,
                0x4B6F155DA37,
                0x4DD96BC63EC,
                0x502D44BAD4F,
                0x526C3464929,
                0x5497A5CE815,
                0x56B0E04AABF,
                0x58B90BFBE8E,
                0x5AB135ACD06,
                0x5C9A5213EB1,
                0x5E75409EA24,
                0x6042CDD773A,
                0x6203B577F8E,
                0x63B8A4343CB,
                0x6562394A631,
                0x670107DFB63,
                0x68959832980,
                0x6A2068A7948,
                0x6BA1EEB6CA0,
                0x6D1A97BE054,
                0x6E8AC9BB40F,
                0x6FF2E3F2A4B,
                0x71533F82AA2,
    };
    #endif // (defined(TINYMIND_USE_LOG_22_42))
    #if (defined(TINYMIND_USE_LOG_23_41))
    const uint64_t LogValuesTableQ23_41::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFBD753703116,
                0xFFFFFD3A37A020B9,
                0xFFFFFE09D0BF86B6,
                0xFFFFFE9D1BD0105D,
                0xFFFFFF0F5BAF2EC7,
                0xFFFFFF6CB4EF765A,
                0xFFFFFFBBA1C5F761,
                0x0,
                0x3C4E0EDC55,
                0x723FDF1E6A,
                0xA30C5E10E2,
                0xCF991F65FC,
                0xF8947AFD78,
                0x11E85F5E704,
                0x141D8FE8467,
                0x162E42FEFA3,
                0x181EE60AFB5,
                0x19F323ECBF9,
                0x1BAE0F1B241,
                0x1D5240F0E0E,
                0x1EE1F154D00,
                0x205F08E0086,
                0x21CB2EFA582,
                0x2327D4F55A0,
                0x24763EE2C78,
                0x25B78AAED1B,
                0x26ECB5E31F6,
                0x2816A25D6A7,
                0x29361A32494,
                0x2A4BD2E740A,
                0x2B58702555F,
                0x2C5C85FDF47,
                0x2D589AD6683,
                0x2E4D2909F58,
                0x2F3AA04F512,
                0x302166EBB9D,
                0x3101DABBFC7,
                0x31DC521A1E5,
                0x32B11CA5318,
                0x338083EFDB1,
                0x344ACC194C0,
                0x35103453CA4,
                0x35D0F75B650,
                0x368D4BDF02A,
                0x374564DDA07,
                0x37F971F9525,
                0x38A99FC1551,
    };
    #endif // (defined(TINYMIND_USE_LOG_23_41))
    #if (defined(TINYMIND_USE_LOG_24_40))
    const uint64_t LogValuesTableQ24_40::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFDEBA9B8188B,
                0xFFFFFE9D1BD0105D,
                0xFFFFFF04E85FC35B,
                0xFFFFFF4E8DE8082F,
                0xFFFFFF87ADD79764,
                0xFFFFFFB65A77BB2D,
                0xFFFFFFDDD0E2FBB1,
                0x0,
                0x1E27076E2A,
                0x391FEF8F35,
                0x51862F0871,
                0x67CC8FB2FE,
                0x7C4A3D7EBC,
                0x8F42FAF382,
                0xA0EC7F4233,
                0xB17217F7D1,
                0xC0F73057DA,
                0xCF991F65FC,
                0xDD7078D920,
                0xEA92078707,
                0xF70F8AA680,
                0x102F8470043,
                0x10E5977D2C1,
                0x1193EA7AAD0,
                0x123B1F7163C,
                0x12DBC55768D,
                0x13765AF18FB,
                0x140B512EB53,
                0x149B0D1924A,
                0x1525E973A05,
                0x15AC3812AAF,
                0x162E42FEFA3,
                0x16AC4D6B341,
                0x17269484FAC,
                0x179D5027A89,
                0x1810B375DCE,
                0x1880ED5DFE3,
                0x18EE290D0F2,
                0x19588E5298C,
                0x19C041F7ED8,
                0x1A25660CA60,
                0x1A881A29E52,
                0x1AE87BADB28,
                0x1B46A5EF815,
                0x1BA2B26ED03,
                0x1BFCB8FCA92,
                0x1C54CFE0AA8,
    };
    #endif // (defined(TINYMIND_USE_LOG_24_40))
    #if (defined(TINYMIND_USE_LOG_25_39))
    const uint64_t LogValuesTableQ25_39::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFEF5D4DC0C46,
                0xFFFFFF4E8DE8082F,
                0xFFFFFF82742FE1AE,
                0xFFFFFFA746F40418,
                0xFFFFFFC3D6EBCBB2,
                0xFFFFFFDB2D3BDD97,
                0xFFFFFFEEE8717DD9,
                0x0,
                0xF1383B715,
                0x1C8FF7C79A,
                0x28C3178438,
                0x33E647D97F,
                0x3E251EBF5E,
                0x47A17D79C1,
                0x50763FA119,
                0x58B90BFBE8,
                0x607B982BED,
                0x67CC8FB2FE,
                0x6EB83C6C90,
                0x754903C383,
                0x7B87C55340,
                0x817C238021,
                0x872CBBE960,
                0x8C9F53D568,
                0x91D8FB8B1E,
                0x96DE2ABB46,
                0x9BB2D78C7D,
                0xA05A8975A9,
                0xA4D868C925,
                0xA92F4B9D02,
                0xAD61C09557,
                0xB17217F7D1,
                0xB5626B59A0,
                0xB934A427D6,
                0xBCEA813D44,
                0xC0859BAEE7,
                0xC4076AEFF1,
                0xC771486879,
                0xCAC47294C6,
                0xCE020FBF6C,
                0xD12B306530,
                0xD440D14F29,
                0xD743DD6D94,
                0xDA352F7C0A,
                0xDD15937681,
                0xDFE5C7E549,
                0xE2A67F0554,
    };
    #endif // (defined(TINYMIND_USE_LOG_25_39))
    #if (defined(TINYMIND_USE_LOG_26_38))
    const uint64_t LogValuesTableQ26_38::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFF7AEA6E0623,
                0xFFFFFFA746F40418,
                0xFFFFFFC13A17F0D7,
                0xFFFFFFD3A37A020C,
                0xFFFFFFE1EB75E5D9,
                0xFFFFFFED969DEECC,
                0xFFFFFFF77438BEED,
                0x0,
                0x789C1DB8A,
                0xE47FBE3CD,
                0x14618BC21C,
                0x19F323ECBF,
                0x1F128F5FAF,
                0x23D0BEBCE0,
                0x283B1FD08C,
                0x2C5C85FDF4,
                0x303DCC15F6,
                0x33E647D97F,
                0x375C1E3648,
                0x3AA481E1C1,
                0x3DC3E2A9A0,
                0x40BE11C010,
                0x43965DF4B0,
                0x464FA9EAB4,
                0x48EC7DC58F,
                0x4B6F155DA3,
                0x4DD96BC63E,
                0x502D44BAD4,
                0x526C346492,
                0x5497A5CE81,
                0x56B0E04AAB,
                0x58B90BFBE8,
                0x5AB135ACD0,
                0x5C9A5213EB,
                0x5E75409EA2,
                0x6042CDD773,
                0x6203B577F8,
                0x63B8A4343C,
                0x6562394A63,
                0x670107DFB6,
                0x6895983298,
                0x6A2068A794,
                0x6BA1EEB6CA,
                0x6D1A97BE05,
                0x6E8AC9BB40,
                0x6FF2E3F2A4,
                0x71533F82AA,
    };
    #endif // (defined(TINYMIND_USE_LOG_26_38))
    #if (defined(TINYMIND_USE_LOG_27_37))
    const uint64_t LogValuesTableQ27_37::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFBD75370312,
                0xFFFFFFD3A37A020C,
                0xFFFFFFE09D0BF86C,
                0xFFFFFFE9D1BD0106,
                0xFFFFFFF0F5BAF2ED,
                0xFFFFFFF6CB4EF766,
                0xFFFFFFFBBA1C5F77,
                0x0,
                0x3C4E0EDC5,
                0x723FDF1E6,
                0xA30C5E10E,
                0xCF991F65F,
                0xF8947AFD7,
                0x11E85F5E70,
                0x141D8FE846,
                0x162E42FEFA,
                0x181EE60AFB,
                0x19F323ECBF,
                0x1BAE0F1B24,
                0x1D5240F0E0,
                0x1EE1F154D0,
                0x205F08E008,
                0x21CB2EFA58,
                0x2327D4F55A,
                0x24763EE2C7,
                0x25B78AAED1,
                0x26ECB5E31F,
                0x2816A25D6A,
                0x29361A3249,
                0x2A4BD2E740,
                0x2B58702555,
                0x2C5C85FDF4,
                0x2D589AD668,
                0x2E4D2909F5,
                0x2F3AA04F51,
                0x302166EBB9,
                0x3101DABBFC,
                0x31DC521A1E,
                0x32B11CA531,
                0x338083EFDB,
                0x344ACC194C,
                0x35103453CA,
                0x35D0F75B65,
                0x368D4BDF02,
                0x374564DDA0,
                0x37F971F952,
                0x38A99FC155,
    };
    #endif // (defined(TINYMIND_USE_LOG_27_37))
    #if (defined(TINYMIND_USE_LOG_28_36))
    const uint64_t LogValuesTableQ28_36::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFDEBA9B8189,
                0xFFFFFFE9D1BD0106,
                0xFFFFFFF04E85FC36,
                0xFFFFFFF4E8DE8083,
                0xFFFFFFF87ADD7977,
                0xFFFFFFFB65A77BB3,
                0xFFFFFFFDDD0E2FBC,
                0x0,
                0x1E27076E2,
                0x391FEF8F3,
                0x51862F087,
                0x67CC8FB2F,
                0x7C4A3D7EB,
                0x8F42FAF38,
                0xA0EC7F423,
                0xB17217F7D,
                0xC0F73057D,
                0xCF991F65F,
                0xDD7078D92,
                0xEA9207870,
                0xF70F8AA68,
                0x102F847004,
                0x10E5977D2C,
                0x1193EA7AAD,
                0x123B1F7163,
                0x12DBC55768,
                0x13765AF18F,
                0x140B512EB5,
                0x149B0D1924,
                0x1525E973A0,
                0x15AC3812AA,
                0x162E42FEFA,
                0x16AC4D6B34,
                0x17269484FA,
                0x179D5027A8,
                0x1810B375DC,
                0x1880ED5DFE,
                0x18EE290D0F,
                0x19588E5298,
                0x19C041F7ED,
                0x1A25660CA6,
                0x1A881A29E5,
                0x1AE87BADB2,
                0x1B46A5EF81,
                0x1BA2B26ED0,
                0x1BFCB8FCA9,
                0x1C54CFE0AA,
    };
    #endif // (defined(TINYMIND_USE_LOG_28_36))
    #if (defined(TINYMIND_USE_LOG_29_35))
    const uint64_t LogValuesTableQ29_35::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFEF5D4DC0C5,
                0xFFFFFFF4E8DE8083,
                0xFFFFFFF82742FE1B,
                0xFFFFFFFA746F4042,
                0xFFFFFFFC3D6EBCBC,
                0xFFFFFFFDB2D3BDDA,
                0xFFFFFFFEEE8717DE,
                0x0,
                0xF1383B71,
                0x1C8FF7C79,
                0x28C317843,
                0x33E647D97,
                0x3E251EBF5,
                0x47A17D79C,
                0x50763FA11,
                0x58B90BFBE,
                0x607B982BE,
                0x67CC8FB2F,
                0x6EB83C6C9,
                0x754903C38,
                0x7B87C5534,
                0x817C23802,
                0x872CBBE96,
                0x8C9F53D56,
                0x91D8FB8B1,
                0x96DE2ABB4,
                0x9BB2D78C7,
                0xA05A8975A,
                0xA4D868C92,
                0xA92F4B9D0,
                0xAD61C0955,
                0xB17217F7D,
                0xB5626B59A,
                0xB934A427D,
                0xBCEA813D4,
                0xC0859BAEE,
                0xC4076AEFF,
                0xC77148687,
                0xCAC47294C,
                0xCE020FBF6,
                0xD12B30653,
                0xD440D14F2,
                0xD743DD6D9,
                0xDA352F7C0,
                0xDD1593768,
                0xDFE5C7E54,
                0xE2A67F055,
    };
    #endif // (defined(TINYMIND_USE_LOG_29_35))
    #if (defined(TINYMIND_USE_LOG_30_34))
    const uint64_t LogValuesTableQ30_34::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFF7AEA6E063,
                0xFFFFFFFA746F4042,
                0xFFFFFFFC13A17F0E,
                0xFFFFFFFD3A37A021,
                0xFFFFFFFE1EB75E5E,
                0xFFFFFFFED969DEED,
                0xFFFFFFFF77438BEF,
                0x0,
                0x789C1DB8,
                0xE47FBE3C,
                0x14618BC21,
                0x19F323ECB,
                0x1F128F5FA,
                0x23D0BEBCE,
                0x283B1FD08,
                0x2C5C85FDF,
                0x303DCC15F,
                0x33E647D97,
                0x375C1E364,
                0x3AA481E1C,
                0x3DC3E2A9A,
                0x40BE11C01,
                0x43965DF4B,
                0x464FA9EAB,
                0x48EC7DC58,
                0x4B6F155DA,
                0x4DD96BC63,
                0x502D44BAD,
                0x526C34649,
                0x5497A5CE8,
                0x56B0E04AA,
                0x58B90BFBE,
                0x5AB135ACD,
                0x5C9A5213E,
                0x5E75409EA,
                0x6042CDD77,
                0x6203B577F,
                0x63B8A4343,
                0x6562394A6,
                0x670107DFB,
                0x689598329,
                0x6A2068A79,
                0x6BA1EEB6C,
                0x6D1A97BE0,
                0x6E8AC9BB4,
                0x6FF2E3F2A,
                0x71533F82A,
    };
    #endif // (defined(TINYMIND_USE_LOG_30_34))
    #if (defined(TINYMIND_USE_LOG_31_33))
    const uint64_t LogValuesTableQ31_33::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFBD7537032,
                0xFFFFFFFD3A37A021,
                0xFFFFFFFE09D0BF87,
                0xFFFFFFFE9D1BD011,
                0xFFFFFFFF0F5BAF2F,
                0xFFFFFFFF6CB4EF77,
                0xFFFFFFFFBBA1C5F8,
                0x0,
                0x3C4E0EDC,
                0x723FDF1E,
                0xA30C5E10,
                0xCF991F65,
                0xF8947AFD,
                0x11E85F5E7,
                0x141D8FE84,
                0x162E42FEF,
                0x181EE60AF,
                0x19F323ECB,
                0x1BAE0F1B2,
                0x1D5240F0E,
                0x1EE1F154D,
                0x205F08E00,
                0x21CB2EFA5,
                0x2327D4F55,
                0x24763EE2C,
                0x25B78AAED,
                0x26ECB5E31,
                0x2816A25D6,
                0x29361A324,
                0x2A4BD2E74,
                0x2B5870255,
                0x2C5C85FDF,
                0x2D589AD66,
                0x2E4D2909F,
                0x2F3AA04F5,
                0x302166EBB,
                0x3101DABBF,
                0x31DC521A1,
                0x32B11CA53,
                0x338083EFD,
                0x344ACC194,
                0x35103453C,
                0x35D0F75B6,
                0x368D4BDF0,
                0x374564DDA,
                0x37F971F95,
                0x38A99FC15,
    };
    #endif // (defined(TINYMIND_USE_LOG_31_33))
    #if (defined(TINYMIND_USE_LOG_32_32))
    const uint64_t LogValuesTableQ32_32::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFDEBA9B819,
                0xFFFFFFFE9D1BD011,
                0xFFFFFFFF04E85FC4,
                0xFFFFFFFF4E8DE809,
                0xFFFFFFFF87ADD798,
                0xFFFFFFFFB65A77BC,
                0xFFFFFFFFDDD0E2FC,
                0x0,
                0x1E27076E,
                0x391FEF8F,
                0x51862F08,
                0x67CC8FB2,
                0x7C4A3D7E,
                0x8F42FAF3,
                0xA0EC7F42,
                0xB17217F7,
                0xC0F73057,
                0xCF991F65,
                0xDD7078D9,
                0xEA920787,
                0xF70F8AA6,
                0x102F84700,
                0x10E5977D2,
                0x1193EA7AA,
                0x123B1F716,
                0x12DBC5576,
                0x13765AF18,
                0x140B512EB,
                0x149B0D192,
                0x1525E973A,
                0x15AC3812A,
                0x162E42FEF,
                0x16AC4D6B3,
                0x17269484F,
                0x179D5027A,
                0x1810B375D,
                0x1880ED5DF,
                0x18EE290D0,
                0x19588E529,
                0x19C041F7E,
                0x1A25660CA,
                0x1A881A29E,
                0x1AE87BADB,
                0x1B46A5EF8,
                0x1BA2B26ED,
                0x1BFCB8FCA,
                0x1C54CFE0A,
    };
    #endif // (defined(TINYMIND_USE_LOG_32_32))
    #if (defined(TINYMIND_USE_LOG_33_31))
    const uint64_t LogValuesTableQ33_31::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFEF5D4DC0D,
                0xFFFFFFFF4E8DE809,
                0xFFFFFFFF82742FE2,
                0xFFFFFFFFA746F405,
                0xFFFFFFFFC3D6EBCC,
                0xFFFFFFFFDB2D3BDE,
                0xFFFFFFFFEEE8717E,
                0x0,
                0xF1383B7,
                0x1C8FF7C7,
                0x28C31784,
                0x33E647D9,
                0x3E251EBF,
                0x47A17D79,
                0x50763FA1,
                0x58B90BFB,
                0x607B982B,
                0x67CC8FB2,
                0x6EB83C6C,
                0x754903C3,
                0x7B87C553,
                0x817C2380,
                0x872CBBE9,
                0x8C9F53D5,
                0x91D8FB8B,
                0x96DE2ABB,
                0x9BB2D78C,
                0xA05A8975,
                0xA4D868C9,
                0xA92F4B9D,
                0xAD61C095,
                0xB17217F7,
                0xB5626B59,
                0xB934A427,
                0xBCEA813D,
                0xC0859BAE,
                0xC4076AEF,
                0xC7714868,
                0xCAC47294,
                0xCE020FBF,
                0xD12B3065,
                0xD440D14F,
                0xD743DD6D,
                0xDA352F7C,
                0xDD159376,
                0xDFE5C7E5,
                0xE2A67F05,
    };
    #endif // (defined(TINYMIND_USE_LOG_33_31))
    #if (defined(TINYMIND_USE_LOG_34_30))
    const uint64_t LogValuesTableQ34_30::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFF7AEA6E07,
                0xFFFFFFFFA746F405,
                0xFFFFFFFFC13A17F1,
                0xFFFFFFFFD3A37A03,
                0xFFFFFFFFE1EB75E6,
                0xFFFFFFFFED969DEF,
                0xFFFFFFFFF77438BF,
                0x0,
                0x789C1DB,
                0xE47FBE3,
                0x14618BC2,
                0x19F323EC,
                0x1F128F5F,
                0x23D0BEBC,
                0x283B1FD0,
                0x2C5C85FD,
                0x303DCC15,
                0x33E647D9,
                0x375C1E36,
                0x3AA481E1,
                0x3DC3E2A9,
                0x40BE11C0,
                0x43965DF4,
                0x464FA9EA,
                0x48EC7DC5,
                0x4B6F155D,
                0x4DD96BC6,
                0x502D44BA,
                0x526C3464,
                0x5497A5CE,
                0x56B0E04A,
                0x58B90BFB,
                0x5AB135AC,
                0x5C9A5213,
                0x5E75409E,
                0x6042CDD7,
                0x6203B577,
                0x63B8A434,
                0x6562394A,
                0x670107DF,
                0x68959832,
                0x6A2068A7,
                0x6BA1EEB6,
                0x6D1A97BE,
                0x6E8AC9BB,
                0x6FF2E3F2,
                0x71533F82,
    };
    #endif // (defined(TINYMIND_USE_LOG_34_30))
    #if (defined(TINYMIND_USE_LOG_35_29))
    const uint64_t LogValuesTableQ35_29::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFBD753704,
                0xFFFFFFFFD3A37A03,
                0xFFFFFFFFE09D0BF9,
                0xFFFFFFFFE9D1BD02,
                0xFFFFFFFFF0F5BAF3,
                0xFFFFFFFFF6CB4EF8,
                0xFFFFFFFFFBBA1C60,
                0x0,
                0x3C4E0ED,
                0x723FDF1,
                0xA30C5E1,
                0xCF991F6,
                0xF8947AF,
                0x11E85F5E,
                0x141D8FE8,
                0x162E42FE,
                0x181EE60A,
                0x19F323EC,
                0x1BAE0F1B,
                0x1D5240F0,
                0x1EE1F154,
                0x205F08E0,
                0x21CB2EFA,
                0x2327D4F5,
                0x24763EE2,
                0x25B78AAE,
                0x26ECB5E3,
                0x2816A25D,
                0x29361A32,
                0x2A4BD2E7,
                0x2B587025,
                0x2C5C85FD,
                0x2D589AD6,
                0x2E4D2909,
                0x2F3AA04F,
                0x302166EB,
                0x3101DABB,
                0x31DC521A,
                0x32B11CA5,
                0x338083EF,
                0x344ACC19,
                0x35103453,
                0x35D0F75B,
                0x368D4BDF,
                0x374564DD,
                0x37F971F9,
                0x38A99FC1,
    };
    #endif // (defined(TINYMIND_USE_LOG_35_29))
    #if (defined(TINYMIND_USE_LOG_36_28))
    const uint64_t LogValuesTableQ36_28::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFDEBA9B82,
                0xFFFFFFFFE9D1BD02,
                0xFFFFFFFFF04E85FD,
                0xFFFFFFFFF4E8DE81,
                0xFFFFFFFFF87ADD7A,
                0xFFFFFFFFFB65A77C,
                0xFFFFFFFFFDDD0E30,
                0x0,
                0x1E27076,
                0x391FEF8,
                0x51862F0,
                0x67CC8FB,
                0x7C4A3D7,
                0x8F42FAF,
                0xA0EC7F4,
                0xB17217F,
                0xC0F7305,
                0xCF991F6,
                0xDD7078D,
                0xEA92078,
                0xF70F8AA,
                0x102F8470,
                0x10E5977D,
                0x1193EA7A,
                0x123B1F71,
                0x12DBC557,
                0x13765AF1,
                0x140B512E,
                0x149B0D19,
                0x1525E973,
                0x15AC3812,
                0x162E42FE,
                0x16AC4D6B,
                0x17269484,
                0x179D5027,
                0x1810B375,
                0x1880ED5D,
                0x18EE290D,
                0x19588E52,
                0x19C041F7,
                0x1A25660C,
                0x1A881A29,
                0x1AE87BAD,
                0x1B46A5EF,
                0x1BA2B26E,
                0x1BFCB8FC,
                0x1C54CFE0,
    };
    #endif // (defined(TINYMIND_USE_LOG_36_28))
    #if (defined(TINYMIND_USE_LOG_37_27))
    const uint64_t LogValuesTableQ37_27::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFEF5D4DC1,
                0xFFFFFFFFF4E8DE81,
                0xFFFFFFFFF82742FF,
                0xFFFFFFFFFA746F41,
                0xFFFFFFFFFC3D6EBD,
                0xFFFFFFFFFDB2D3BE,
                0xFFFFFFFFFEEE8718,
                0x0,
                0xF1383B,
                0x1C8FF7C,
                0x28C3178,
                0x33E647D,
                0x3E251EB,
                0x47A17D7,
                0x50763FA,
                0x58B90BF,
                0x607B982,
                0x67CC8FB,
                0x6EB83C6,
                0x754903C,
                0x7B87C55,
                0x817C238,
                0x872CBBE,
                0x8C9F53D,
                0x91D8FB8,
                0x96DE2AB,
                0x9BB2D78,
                0xA05A897,
                0xA4D868C,
                0xA92F4B9,
                0xAD61C09,
                0xB17217F,
                0xB5626B5,
                0xB934A42,
                0xBCEA813,
                0xC0859BA,
                0xC4076AE,
                0xC771486,
                0xCAC4729,
                0xCE020FB,
                0xD12B306,
                0xD440D14,
                0xD743DD6,
                0xDA352F7,
                0xDD15937,
                0xDFE5C7E,
                0xE2A67F0,
    };
    #endif // (defined(TINYMIND_USE_LOG_37_27))
    #if (defined(TINYMIND_USE_LOG_38_26))
    const uint64_t LogValuesTableQ38_26::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFF7AEA6E1,
                0xFFFFFFFFFA746F41,
                0xFFFFFFFFFC13A180,
                0xFFFFFFFFFD3A37A1,
                0xFFFFFFFFFE1EB75F,
                0xFFFFFFFFFED969DF,
                0xFFFFFFFFFF77438C,
                0x0,
                0x789C1D,
                0xE47FBE,
                0x14618BC,
                0x19F323E,
                0x1F128F5,
                0x23D0BEB,
                0x283B1FD,
                0x2C5C85F,
                0x303DCC1,
                0x33E647D,
                0x375C1E3,
                0x3AA481E,
                0x3DC3E2A,
                0x40BE11C,
                0x43965DF,
                0x464FA9E,
                0x48EC7DC,
                0x4B6F155,
                0x4DD96BC,
                0x502D44B,
                0x526C346,
                0x5497A5C,
                0x56B0E04,
                0x58B90BF,
                0x5AB135A,
                0x5C9A521,
                0x5E75409,
                0x6042CDD,
                0x6203B57,
                0x63B8A43,
                0x6562394,
                0x670107D,
                0x6895983,
                0x6A2068A,
                0x6BA1EEB,
                0x6D1A97B,
                0x6E8AC9B,
                0x6FF2E3F,
                0x71533F8,
    };
    #endif // (defined(TINYMIND_USE_LOG_38_26))
    #if (defined(TINYMIND_USE_LOG_39_25))
    const uint64_t LogValuesTableQ39_25::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFBD75371,
                0xFFFFFFFFFD3A37A1,
                0xFFFFFFFFFE09D0C0,
                0xFFFFFFFFFE9D1BD1,
                0xFFFFFFFFFF0F5BB0,
                0xFFFFFFFFFF6CB4F0,
                0xFFFFFFFFFFBBA1C6,
                0x0,
                0x3C4E0E,
                0x723FDF,
                0xA30C5E,
                0xCF991F,
                0xF8947A,
                0x11E85F5,
                0x141D8FE,
                0x162E42F,
                0x181EE60,
                0x19F323E,
                0x1BAE0F1,
                0x1D5240F,
                0x1EE1F15,
                0x205F08E,
                0x21CB2EF,
                0x2327D4F,
                0x24763EE,
                0x25B78AA,
                0x26ECB5E,
                0x2816A25,
                0x29361A3,
                0x2A4BD2E,
                0x2B58702,
                0x2C5C85F,
                0x2D589AD,
                0x2E4D290,
                0x2F3AA04,
                0x302166E,
                0x3101DAB,
                0x31DC521,
                0x32B11CA,
                0x338083E,
                0x344ACC1,
                0x3510345,
                0x35D0F75,
                0x368D4BD,
                0x374564D,
                0x37F971F,
                0x38A99FC,
    };
    #endif // (defined(TINYMIND_USE_LOG_39_25))
    #if (defined(TINYMIND_USE_LOG_40_24))
    const uint64_t LogValuesTableQ40_24::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFDEBA9B9,
                0xFFFFFFFFFE9D1BD1,
                0xFFFFFFFFFF04E860,
                0xFFFFFFFFFF4E8DE9,
                0xFFFFFFFFFF87ADD8,
                0xFFFFFFFFFFB65A78,
                0xFFFFFFFFFFDDD0E3,
                0x0,
                0x1E2707,
                0x391FEF,
                0x51862F,
                0x67CC8F,
                0x7C4A3D,
                0x8F42FA,
                0xA0EC7F,
                0xB17217,
                0xC0F730,
                0xCF991F,
                0xDD7078,
                0xEA9207,
                0xF70F8A,
                0x102F847,
                0x10E5977,
                0x1193EA7,
                0x123B1F7,
                0x12DBC55,
                0x13765AF,
                0x140B512,
                0x149B0D1,
                0x1525E97,
                0x15AC381,
                0x162E42F,
                0x16AC4D6,
                0x1726948,
                0x179D502,
                0x1810B37,
                0x1880ED5,
                0x18EE290,
                0x19588E5,
                0x19C041F,
                0x1A25660,
                0x1A881A2,
                0x1AE87BA,
                0x1B46A5E,
                0x1BA2B26,
                0x1BFCB8F,
                0x1C54CFE,
    };
    #endif // (defined(TINYMIND_USE_LOG_40_24))
    #if (defined(TINYMIND_USE_LOG_41_23))
    const uint64_t LogValuesTableQ41_23::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFEF5D4DD,
                0xFFFFFFFFFF4E8DE9,
                0xFFFFFFFFFF827430,
                0xFFFFFFFFFFA746F5,
                0xFFFFFFFFFFC3D6EC,
                0xFFFFFFFFFFDB2D3C,
                0xFFFFFFFFFFEEE872,
                0x0,
                0xF1383,
                0x1C8FF7,
                0x28C317,
                0x33E647,
                0x3E251E,
                0x47A17D,
                0x50763F,
                0x58B90B,
                0x607B98,
                0x67CC8F,
                0x6EB83C,
                0x754903,
                0x7B87C5,
                0x817C23,
                0x872CBB,
                0x8C9F53,
                0x91D8FB,
                0x96DE2A,
                0x9BB2D7,
                0xA05A89,
                0xA4D868,
                0xA92F4B,
                0xAD61C0,
                0xB17217,
                0xB5626B,
                0xB934A4,
                0xBCEA81,
                0xC0859B,
                0xC4076A,
                0xC77148,
                0xCAC472,
                0xCE020F,
                0xD12B30,
                0xD440D1,
                0xD743DD,
                0xDA352F,
                0xDD1593,
                0xDFE5C7,
                0xE2A67F,
    };
    #endif // (defined(TINYMIND_USE_LOG_41_23))
    #if (defined(TINYMIND_USE_LOG_42_22))
    const uint64_t LogValuesTableQ42_22::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFF7AEA6F,
                0xFFFFFFFFFFA746F5,
                0xFFFFFFFFFFC13A18,
                0xFFFFFFFFFFD3A37B,
                0xFFFFFFFFFFE1EB76,
                0xFFFFFFFFFFED969E,
                0xFFFFFFFFFFF77439,
                0x0,
                0x789C1,
                0xE47FB,
                0x14618B,
                0x19F323,
                0x1F128F,
                0x23D0BE,
                0x283B1F,
                0x2C5C85,
                0x303DCC,
                0x33E647,
                0x375C1E,
                0x3AA481,
                0x3DC3E2,
                0x40BE11,
                0x43965D,
                0x464FA9,
                0x48EC7D,
                0x4B6F15,
                0x4DD96B,
                0x502D44,
                0x526C34,
                0x5497A5,
                0x56B0E0,
                0x58B90B,
                0x5AB135,
                0x5C9A52,
                0x5E7540,
                0x6042CD,
                0x6203B5,
                0x63B8A4,
                0x656239,
                0x670107,
                0x689598,
                0x6A2068,
                0x6BA1EE,
                0x6D1A97,
                0x6E8AC9,
                0x6FF2E3,
                0x71533F,
    };
    #endif // (defined(TINYMIND_USE_LOG_42_22))
    #if (defined(TINYMIND_USE_LOG_43_21))
    const uint64_t LogValuesTableQ43_21::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFBD7538,
                0xFFFFFFFFFFD3A37B,
                0xFFFFFFFFFFE09D0C,
                0xFFFFFFFFFFE9D1BE,
                0xFFFFFFFFFFF0F5BB,
                0xFFFFFFFFFFF6CB4F,
                0xFFFFFFFFFFFBBA1D,
                0x0,
                0x3C4E0,
                0x723FD,
                0xA30C5,
                0xCF991,
                0xF8947,
                0x11E85F,
                0x141D8F,
                0x162E42,
                0x181EE6,
                0x19F323,
                0x1BAE0F,
                0x1D5240,
                0x1EE1F1,
                0x205F08,
                0x21CB2E,
                0x2327D4,
                0x24763E,
                0x25B78A,
                0x26ECB5,
                0x2816A2,
                0x29361A,
                0x2A4BD2,
                0x2B5870,
                0x2C5C85,
                0x2D589A,
                0x2E4D29,
                0x2F3AA0,
                0x302166,
                0x3101DA,
                0x31DC52,
                0x32B11C,
                0x338083,
                0x344ACC,
                0x351034,
                0x35D0F7,
                0x368D4B,
                0x374564,
                0x37F971,
                0x38A99F,
    };
    #endif // (defined(TINYMIND_USE_LOG_43_21))
    #if (defined(TINYMIND_USE_LOG_44_20))
    const uint64_t LogValuesTableQ44_20::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFDEBA9C,
                0xFFFFFFFFFFE9D1BE,
                0xFFFFFFFFFFF04E86,
                0xFFFFFFFFFFF4E8DF,
                0xFFFFFFFFFFF87ADE,
                0xFFFFFFFFFFFB65A8,
                0xFFFFFFFFFFFDDD0F,
                0x0,
                0x1E270,
                0x391FE,
                0x51862,
                0x67CC8,
                0x7C4A3,
                0x8F42F,
                0xA0EC7,
                0xB1721,
                0xC0F73,
                0xCF991,
                0xDD707,
                0xEA920,
                0xF70F8,
                0x102F84,
                0x10E597,
                0x1193EA,
                0x123B1F,
                0x12DBC5,
                0x13765A,
                0x140B51,
                0x149B0D,
                0x1525E9,
                0x15AC38,
                0x162E42,
                0x16AC4D,
                0x172694,
                0x179D50,
                0x1810B3,
                0x1880ED,
                0x18EE29,
                0x19588E,
                0x19C041,
                0x1A2566,
                0x1A881A,
                0x1AE87B,
                0x1B46A5,
                0x1BA2B2,
                0x1BFCB8,
                0x1C54CF,
    };
    #endif // (defined(TINYMIND_USE_LOG_44_20))
    #if (defined(TINYMIND_USE_LOG_45_19))
    const uint64_t LogValuesTableQ45_19::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFEF5D4E,
                0xFFFFFFFFFFF4E8DF,
                0xFFFFFFFFFFF82743,
                0xFFFFFFFFFFFA7470,
                0xFFFFFFFFFFFC3D6F,
                0xFFFFFFFFFFFDB2D4,
                0xFFFFFFFFFFFEEE88,
                0x0,
                0xF138,
                0x1C8FF,
                0x28C31,
                0x33E64,
                0x3E251,
                0x47A17,
                0x50763,
                0x58B90,
                0x607B9,
                0x67CC8,
                0x6EB83,
                0x75490,
                0x7B87C,
                0x817C2,
                0x872CB,
                0x8C9F5,
                0x91D8F,
                0x96DE2,
                0x9BB2D,
                0xA05A8,
                0xA4D86,
                0xA92F4,
                0xAD61C,
                0xB1721,
                0xB5626,
                0xB934A,
                0xBCEA8,
                0xC0859,
                0xC4076,
                0xC7714,
                0xCAC47,
                0xCE020,
                0xD12B3,
                0xD440D,
                0xD743D,
                0xDA352,
                0xDD159,
                0xDFE5C,
                0xE2A67,
    };
    #endif // (defined(TINYMIND_USE_LOG_45_19))
    #if (defined(TINYMIND_USE_LOG_46_18))
    const uint64_t LogValuesTableQ46_18::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFF7AEA7,
                0xFFFFFFFFFFFA7470,
                0xFFFFFFFFFFFC13A2,
                0xFFFFFFFFFFFD3A38,
                0xFFFFFFFFFFFE1EB8,
                0xFFFFFFFFFFFED96A,
                0xFFFFFFFFFFFF7744,
                0x0,
                0x789C,
                0xE47F,
                0x14618,
                0x19F32,
                0x1F128,
                0x23D0B,
                0x283B1,
                0x2C5C8,
                0x303DC,
                0x33E64,
                0x375C1,
                0x3AA48,
                0x3DC3E,
                0x40BE1,
                0x43965,
                0x464FA,
                0x48EC7,
                0x4B6F1,
                0x4DD96,
                0x502D4,
                0x526C3,
                0x5497A,
                0x56B0E,
                0x58B90,
                0x5AB13,
                0x5C9A5,
                0x5E754,
                0x6042C,
                0x6203B,
                0x63B8A,
                0x65623,
                0x67010,
                0x68959,
                0x6A206,
                0x6BA1E,
                0x6D1A9,
                0x6E8AC,
                0x6FF2E,
                0x71533,
    };
    #endif // (defined(TINYMIND_USE_LOG_46_18))
    #if (defined(TINYMIND_USE_LOG_47_17))
    const uint64_t LogValuesTableQ47_17::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFBD754,
                0xFFFFFFFFFFFD3A38,
                0xFFFFFFFFFFFE09D1,
                0xFFFFFFFFFFFE9D1C,
                0xFFFFFFFFFFFF0F5C,
                0xFFFFFFFFFFFF6CB5,
                0xFFFFFFFFFFFFBBA2,
                0x0,
                0x3C4E,
                0x723F,
                0xA30C,
                0xCF99,
                0xF894,
                0x11E85,
                0x141D8,
                0x162E4,
                0x181EE,
                0x19F32,
                0x1BAE0,
                0x1D524,
                0x1EE1F,
                0x205F0,
                0x21CB2,
                0x2327D,
                0x24763,
                0x25B78,
                0x26ECB,
                0x2816A,
                0x29361,
                0x2A4BD,
                0x2B587,
                0x2C5C8,
                0x2D589,
                0x2E4D2,
                0x2F3AA,
                0x30216,
                0x3101D,
                0x31DC5,
                0x32B11,
                0x33808,
                0x344AC,
                0x35103,
                0x35D0F,
                0x368D4,
                0x37456,
                0x37F97,
                0x38A99,
    };
    #endif // (defined(TINYMIND_USE_LOG_47_17))
    #if (defined(TINYMIND_USE_LOG_48_16))
    const uint64_t LogValuesTableQ48_16::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFDEBAA,
                0xFFFFFFFFFFFE9D1C,
                0xFFFFFFFFFFFF04E9,
                0xFFFFFFFFFFFF4E8E,
                0xFFFFFFFFFFFF87AE,
                0xFFFFFFFFFFFFB65B,
                0xFFFFFFFFFFFFDDD1,
                0x0,
                0x1E27,
                0x391F,
                0x5186,
                0x67CC,
                0x7C4A,
                0x8F42,
                0xA0EC,
                0xB172,
                0xC0F7,
                0xCF99,
                0xDD70,
                0xEA92,
                0xF70F,
                0x102F8,
                0x10E59,
                0x1193E,
                0x123B1,
                0x12DBC,
                0x13765,
                0x140B5,
                0x149B0,
                0x1525E,
                0x15AC3,
                0x162E4,
                0x16AC4,
                0x17269,
                0x179D5,
                0x1810B,
                0x1880E,
                0x18EE2,
                0x19588,
                0x19C04,
                0x1A256,
                0x1A881,
                0x1AE87,
                0x1B46A,
                0x1BA2B,
                0x1BFCB,
                0x1C54C,
    };
    #endif // (defined(TINYMIND_USE_LOG_48_16))
    #if (defined(TINYMIND_USE_LOG_49_15))
    const uint64_t LogValuesTableQ49_15::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFEF5D5,
                0xFFFFFFFFFFFF4E8E,
                0xFFFFFFFFFFFF8275,
                0xFFFFFFFFFFFFA747,
                0xFFFFFFFFFFFFC3D7,
                0xFFFFFFFFFFFFDB2E,
                0xFFFFFFFFFFFFEEE9,
                0x0,
                0xF13,
                0x1C8F,
                0x28C3,
                0x33E6,
                0x3E25,
                0x47A1,
                0x5076,
                0x58B9,
                0x607B,
                0x67CC,
                0x6EB8,
                0x7549,
                0x7B87,
                0x817C,
                0x872C,
                0x8C9F,
                0x91D8,
                0x96DE,
                0x9BB2,
                0xA05A,
                0xA4D8,
                0xA92F,
                0xAD61,
                0xB172,
                0xB562,
                0xB934,
                0xBCEA,
                0xC085,
                0xC407,
                0xC771,
                0xCAC4,
                0xCE02,
                0xD12B,
                0xD440,
                0xD743,
                0xDA35,
                0xDD15,
                0xDFE5,
                0xE2A6,
    };
    #endif // (defined(TINYMIND_USE_LOG_49_15))
    #if (defined(TINYMIND_USE_LOG_50_14))
    const uint64_t LogValuesTableQ50_14::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFF7AEB,
                0xFFFFFFFFFFFFA747,
                0xFFFFFFFFFFFFC13B,
                0xFFFFFFFFFFFFD3A4,
                0xFFFFFFFFFFFFE1EC,
                0xFFFFFFFFFFFFED97,
                0xFFFFFFFFFFFFF775,
                0x0,
                0x789,
                0xE47,
                0x1461,
                0x19F3,
                0x1F12,
                0x23D0,
                0x283B,
                0x2C5C,
                0x303D,
                0x33E6,
                0x375C,
                0x3AA4,
                0x3DC3,
                0x40BE,
                0x4396,
                0x464F,
                0x48EC,
                0x4B6F,
                0x4DD9,
                0x502D,
                0x526C,
                0x5497,
                0x56B0,
                0x58B9,
                0x5AB1,
                0x5C9A,
                0x5E75,
                0x6042,
                0x6203,
                0x63B8,
                0x6562,
                0x6701,
                0x6895,
                0x6A20,
                0x6BA1,
                0x6D1A,
                0x6E8A,
                0x6FF2,
                0x7153,
    };
    #endif // (defined(TINYMIND_USE_LOG_50_14))
    #if (defined(TINYMIND_USE_LOG_51_13))
    const uint64_t LogValuesTableQ51_13::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFFBD76,
                0xFFFFFFFFFFFFD3A4,
                0xFFFFFFFFFFFFE09E,
                0xFFFFFFFFFFFFE9D2,
                0xFFFFFFFFFFFFF0F6,
                0xFFFFFFFFFFFFF6CC,
                0xFFFFFFFFFFFFFBBB,
                0x0,
                0x3C4,
                0x723,
                0xA30,
                0xCF9,
                0xF89,
                0x11E8,
                0x141D,
                0x162E,
                0x181E,
                0x19F3,
                0x1BAE,
                0x1D52,
                0x1EE1,
                0x205F,
                0x21CB,
                0x2327,
                0x2476,
                0x25B7,
                0x26EC,
                0x2816,
                0x2936,
                0x2A4B,
                0x2B58,
                0x2C5C,
                0x2D58,
                0x2E4D,
                0x2F3A,
                0x3021,
                0x3101,
                0x31DC,
                0x32B1,
                0x3380,
                0x344A,
                0x3510,
                0x35D0,
                0x368D,
                0x3745,
                0x37F9,
                0x38A9,
    };
    #endif // (defined(TINYMIND_USE_LOG_51_13))
    #if (defined(TINYMIND_USE_LOG_52_12))
    const uint64_t LogValuesTableQ52_12::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFFDEBB,
                0xFFFFFFFFFFFFE9D2,
                0xFFFFFFFFFFFFF04F,
                0xFFFFFFFFFFFFF4E9,
                0xFFFFFFFFFFFFF87B,
                0xFFFFFFFFFFFFFB66,
                0xFFFFFFFFFFFFFDDE,
                0x0,
                0x1E2,
                0x391,
                0x518,
                0x67C,
                0x7C4,
                0x8F4,
                0xA0E,
                0xB17,
                0xC0F,
                0xCF9,
                0xDD7,
                0xEA9,
                0xF70,
                0x102F,
                0x10E5,
                0x1193,
                0x123B,
                0x12DB,
                0x1376,
                0x140B,
                0x149B,
                0x1525,
                0x15AC,
                0x162E,
                0x16AC,
                0x1726,
                0x179D,
                0x1810,
                0x1880,
                0x18EE,
                0x1958,
                0x19C0,
                0x1A25,
                0x1A88,
                0x1AE8,
                0x1B46,
                0x1BA2,
                0x1BFC,
                0x1C54,
    };
    #endif // (defined(TINYMIND_USE_LOG_52_12))
    #if (defined(TINYMIND_USE_LOG_53_11))
    const uint64_t LogValuesTableQ53_11::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFFEF5E,
                0xFFFFFFFFFFFFF4E9,
                0xFFFFFFFFFFFFF828,
                0xFFFFFFFFFFFFFA75,
                0xFFFFFFFFFFFFFC3E,
                0xFFFFFFFFFFFFFDB3,
                0xFFFFFFFFFFFFFEEF,
                0x0,
                0xF1,
                0x1C8,
                0x28C,
                0x33E,
                0x3E2,
                0x47A,
                0x507,
                0x58B,
                0x607,
                0x67C,
                0x6EB,
                0x754,
                0x7B8,
                0x817,
                0x872,
                0x8C9,
                0x91D,
                0x96D,
                0x9BB,
                0xA05,
                0xA4D,
                0xA92,
                0xAD6,
                0xB17,
                0xB56,
                0xB93,
                0xBCE,
                0xC08,
                0xC40,
                0xC77,
                0xCAC,
                0xCE0,
                0xD12,
                0xD44,
                0xD74,
                0xDA3,
                0xDD1,
                0xDFE,
                0xE2A,
    };
    #endif // (defined(TINYMIND_USE_LOG_53_11))
    #if (defined(TINYMIND_USE_LOG_54_10))
    const uint64_t LogValuesTableQ54_10::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFFF7AF,
                0xFFFFFFFFFFFFFA75,
                0xFFFFFFFFFFFFFC14,
                0xFFFFFFFFFFFFFD3B,
                0xFFFFFFFFFFFFFE1F,
                0xFFFFFFFFFFFFFEDA,
                0xFFFFFFFFFFFFFF78,
                0x0,
                0x78,
                0xE4,
                0x146,
                0x19F,
                0x1F1,
                0x23D,
                0x283,
                0x2C5,
                0x303,
                0x33E,
                0x375,
                0x3AA,
                0x3DC,
                0x40B,
                0x439,
                0x464,
                0x48E,
                0x4B6,
                0x4DD,
                0x502,
                0x526,
                0x549,
                0x56B,
                0x58B,
                0x5AB,
                0x5C9,
                0x5E7,
                0x604,
                0x620,
                0x63B,
                0x656,
                0x670,
                0x689,
                0x6A2,
                0x6BA,
                0x6D1,
                0x6E8,
                0x6FF,
                0x715,
    };
    #endif // (defined(TINYMIND_USE_LOG_54_10))
    #if (defined(TINYMIND_USE_LOG_55_9))
    const uint64_t LogValuesTableQ55_9::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFFFBD8,
                0xFFFFFFFFFFFFFD3B,
                0xFFFFFFFFFFFFFE0A,
                0xFFFFFFFFFFFFFE9E,
                0xFFFFFFFFFFFFFF10,
                0xFFFFFFFFFFFFFF6D,
                0xFFFFFFFFFFFFFFBC,
                0x0,
                0x3C,
                0x72,
                0xA3,
                0xCF,
                0xF8,
                0x11E,
                0x141,
                0x162,
                0x181,
                0x19F,
                0x1BA,
                0x1D5,
                0x1EE,
                0x205,
                0x21C,
                0x232,
                0x247,
                0x25B,
                0x26E,
                0x281,
                0x293,
                0x2A4,
                0x2B5,
                0x2C5,
                0x2D5,
                0x2E4,
                0x2F3,
                0x302,
                0x310,
                0x31D,
                0x32B,
                0x338,
                0x344,
                0x351,
                0x35D,
                0x368,
                0x374,
                0x37F,
                0x38A,
    };
    #endif // (defined(TINYMIND_USE_LOG_55_9))
    #if (defined(TINYMIND_USE_LOG_56_8))
    const uint64_t LogValuesTableQ56_8::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFFFDEC,
                0xFFFFFFFFFFFFFE9E,
                0xFFFFFFFFFFFFFF05,
                0xFFFFFFFFFFFFFF4F,
                0xFFFFFFFFFFFFFF88,
                0xFFFFFFFFFFFFFFB7,
                0xFFFFFFFFFFFFFFDE,
                0x0,
                0x1E,
                0x39,
                0x51,
                0x67,
                0x7C,
                0x8F,
                0xA0,
                0xB1,
                0xC0,
                0xCF,
                0xDD,
                0xEA,
                0xF7,
                0x102,
                0x10E,
                0x119,
                0x123,
                0x12D,
                0x137,
                0x140,
                0x149,
                0x152,
                0x15A,
                0x162,
                0x16A,
                0x172,
                0x179,
                0x181,
                0x188,
                0x18E,
                0x195,
                0x19C,
                0x1A2,
                0x1A8,
                0x1AE,
                0x1B4,
                0x1BA,
                0x1BF,
                0x1C5,
    };
    #endif // (defined(TINYMIND_USE_LOG_56_8))
    #if (defined(TINYMIND_USE_LOG_57_7))
    const uint64_t LogValuesTableQ57_7::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFFFEF6,
                0xFFFFFFFFFFFFFF4F,
                0xFFFFFFFFFFFFFF83,
                0xFFFFFFFFFFFFFFA8,
                0xFFFFFFFFFFFFFFC4,
                0xFFFFFFFFFFFFFFDC,
                0xFFFFFFFFFFFFFFEF,
                0x0,
                0xF,
                0x1C,
                0x28,
                0x33,
                0x3E,
                0x47,
                0x50,
                0x58,
                0x60,
                0x67,
                0x6E,
                0x75,
                0x7B,
                0x81,
                0x87,
                0x8C,
                0x91,
                0x96,
                0x9B,
                0xA0,
                0xA4,
                0xA9,
                0xAD,
                0xB1,
                0xB5,
                0xB9,
                0xBC,
                0xC0,
                0xC4,
                0xC7,
                0xCA,
                0xCE,
                0xD1,
                0xD4,
                0xD7,
                0xDA,
                0xDD,
                0xDF,
                0xE2,
    };
    #endif // (defined(TINYMIND_USE_LOG_57_7))
    #if (defined(TINYMIND_USE_LOG_58_6))
    const uint64_t LogValuesTableQ58_6::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFFFF7B,
                0xFFFFFFFFFFFFFFA8,
                0xFFFFFFFFFFFFFFC2,
                0xFFFFFFFFFFFFFFD4,
                0xFFFFFFFFFFFFFFE2,
                0xFFFFFFFFFFFFFFEE,
                0xFFFFFFFFFFFFFFF8,
                0x0,
                0x7,
                0xE,
                0x14,
                0x19,
                0x1F,
                0x23,
                0x28,
                0x2C,
                0x30,
                0x33,
                0x37,
                0x3A,
                0x3D,
                0x40,
                0x43,
                0x46,
                0x48,
                0x4B,
                0x4D,
                0x50,
                0x52,
                0x54,
                0x56,
                0x58,
                0x5A,
                0x5C,
                0x5E,
                0x60,
                0x62,
                0x63,
                0x65,
                0x67,
                0x68,
                0x6A,
                0x6B,
                0x6D,
                0x6E,
                0x6F,
                0x71,
    };
    #endif // (defined(TINYMIND_USE_LOG_58_6))
    #if (defined(TINYMIND_USE_LOG_59_5))
    const uint64_t LogValuesTableQ59_5::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFFFFBE,
                0xFFFFFFFFFFFFFFD4,
                0xFFFFFFFFFFFFFFE1,
                0xFFFFFFFFFFFFFFEA,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF7,
                0xFFFFFFFFFFFFFFFC,
                0x0,
                0x3,
                0x7,
                0xA,
                0xC,
                0xF,
                0x11,
                0x14,
                0x16,
                0x18,
                0x19,
                0x1B,
                0x1D,
                0x1E,
                0x20,
                0x21,
                0x23,
                0x24,
                0x25,
                0x26,
                0x28,
                0x29,
                0x2A,
                0x2B,
                0x2C,
                0x2D,
                0x2E,
                0x2F,
                0x30,
                0x31,
                0x31,
                0x32,
                0x33,
                0x34,
                0x35,
                0x35,
                0x36,
                0x37,
                0x37,
                0x38,
    };
    #endif // (defined(TINYMIND_USE_LOG_59_5))
    #if (defined(TINYMIND_USE_LOG_60_4))
    const uint64_t LogValuesTableQ60_4::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFFFFDF,
                0xFFFFFFFFFFFFFFEA,
                0xFFFFFFFFFFFFFFF1,
                0xFFFFFFFFFFFFFFF5,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFFC,
                0xFFFFFFFFFFFFFFFE,
                0x0,
                0x1,
                0x3,
                0x5,
                0x6,
                0x7,
                0x8,
                0xA,
                0xB,
                0xC,
                0xC,
                0xD,
                0xE,
                0xF,
                0x10,
                0x10,
                0x11,
                0x12,
                0x12,
                0x13,
                0x14,
                0x14,
                0x15,
                0x15,
                0x16,
                0x16,
                0x17,
                0x17,
                0x18,
                0x18,
                0x18,
                0x19,
                0x19,
                0x1A,
                0x1A,
                0x1A,
                0x1B,
                0x1B,
                0x1B,
                0x1C,
    };
    #endif // (defined(TINYMIND_USE_LOG_60_4))
    #if (defined(TINYMIND_USE_LOG_61_3))
    const uint64_t LogValuesTableQ61_3::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFFFFF0,
                0xFFFFFFFFFFFFFFF5,
                0xFFFFFFFFFFFFFFF9,
                0xFFFFFFFFFFFFFFFB,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFE,
                0xFFFFFFFFFFFFFFFF,
                0x0,
                0x0,
                0x1,
                0x2,
                0x3,
                0x3,
                0x4,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x7,
                0x7,
                0x8,
                0x8,
                0x8,
                0x9,
                0x9,
                0x9,
                0xA,
                0xA,
                0xA,
                0xA,
                0xB,
                0xB,
                0xB,
                0xB,
                0xC,
                0xC,
                0xC,
                0xC,
                0xC,
                0xD,
                0xD,
                0xD,
                0xD,
                0xD,
                0xD,
                0xE,
    };
    #endif // (defined(TINYMIND_USE_LOG_61_3))
    #if (defined(TINYMIND_USE_LOG_62_2))
    const uint64_t LogValuesTableQ62_2::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFFFFF8,
                0xFFFFFFFFFFFFFFFB,
                0xFFFFFFFFFFFFFFFD,
                0xFFFFFFFFFFFFFFFE,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x4,
                0x4,
                0x4,
                0x4,
                0x4,
                0x4,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x5,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x6,
                0x7,
    };
    #endif // (defined(TINYMIND_USE_LOG_62_2))
    #if (defined(TINYMIND_USE_LOG_63_1))
    const uint64_t LogValuesTableQ63_1::values[NUMBER_OF_ACTIVATION_TABLE_VALUES] = {
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0xFFFFFFFFFFFFFFFC,
                0xFFFFFFFFFFFFFFFE,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x0,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x1,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x2,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
                0x3,
    };
    #endif // (defined(TINYMIND_USE_LOG_63_1))
}
